{
	"id": "6fb44061d709568ac643ca979d7f5a56",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/erc721/NftV1Collection.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n\ncontract NftV1Collection is ERC721URIStorage, Ownable {\n\n    uint256 private _tokenId = 0;\n\n    event Mint();\n\n    constructor(address initialOwner, string memory name, string memory symbol) ERC721(name, symbol) Ownable(initialOwner) {\n    }\n\n    function mint(address to, string memory metadataUrl) external onlyOwner{\n        _mint(to, metadataUrl);\n        emit Mint();\n    }\n\n    function mint(address[] memory to, string[] memory metadataUrl) external onlyOwner{\n        require(to.length == metadataUrl.length);\n        \n        for(uint256 i = 0; i < to.length; i++) {\n           _mint(to[i], metadataUrl[i]);\n        }\n        emit Mint();\n    }\n\n    function mint(address[] memory to, string memory metadataUrl) external onlyOwner{\n        for(uint256 i = 0; i < to.length; i++) {\n           _mint(to[i], metadataUrl);\n        }\n        emit Mint();\n    }\n\n    function _mint(address to, string memory metadataUrl) internal onlyOwner{\n        uint256 tokenId = _tokenId++;\n        _mint(to, tokenId);\n        _setTokenURI(tokenId, metadataUrl);\n    }\n\n    function setUrl(uint256 tokenId, string memory metadataUrl) external onlyOwner{\n        _setTokenURI(tokenId, metadataUrl);\n    }\n\n    function exchangeNewToken(address to, uint256 tokenId, string memory metadataUrl) external onlyOwner {\n        require(ownerOf(tokenId) == to);\n        _burn(tokenId);\n        _mint(to, metadataUrl);\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"IERC4906": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "EIP-721 Metadata Update Extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ERC721URIStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1488,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202e2f35338a945941116857cbe63618f17de69c7388f80aa105bf782a3b4aae8364736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202e2f35338a945941116857cbe63618f17de69c7388f80aa105bf782a3b4aae8364736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0x2F CALLDATALOAD CALLER DUP11 SWAP5 MSIZE COINBASE GT PUSH9 0x57CBE63618F17DE69C PUSH20 0x88F80AA105BF782A3B4AAE8364736F6C63430008 NOT STOP CALLER ",
							"sourceMap": "251:2847:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;251:2847:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202e2f35338a945941116857cbe63618f17de69c7388f80aa105bf782a3b4aae8364736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0x2F CALLDATALOAD CALLER DUP11 SWAP5 MSIZE COINBASE GT PUSH9 0x57CBE63618F17DE69C PUSH20 0x88F80AA105BF782A3B4AAE8364736F6C63430008 NOT STOP CALLER ",
							"sourceMap": "251:2847:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202e2f35338a945941116857cbe63618f17de69c7388f80aa105bf782a3b4aae8364736f6c63430008190033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/erc721/NftV1Collection.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c768e9f07139cdaaf0930d7ee5c703cc97d70fbe12c1df9d88b0799807262ffb64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c768e9f07139cdaaf0930d7ee5c703cc97d70fbe12c1df9d88b0799807262ffb64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 PUSH9 0xE9F07139CDAAF0930D PUSH31 0xE5C703CC97D70FBE12C1DF9D88B0799807262FFB64736F6C63430008190033 ",
							"sourceMap": "203:14914:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:14914:14;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c768e9f07139cdaaf0930d7ee5c703cc97d70fbe12c1df9d88b0799807262ffb64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 PUSH9 0xE9F07139CDAAF0930D PUSH31 0xE5C703CC97D70FBE12C1DF9D88B0799807262FFB64736F6C63430008190033 ",
							"sourceMap": "203:14914:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c768e9f07139cdaaf0930d7ee5c703cc97d70fbe12c1df9d88b0799807262ffb64736f6c63430008190033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/erc721/NftV1Collection.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122001da856871c3f47a1ebdd816ded90641a72ffecf30a376e555d8e6719054d8b064736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122001da856871c3f47a1ebdd816ded90641a72ffecf30a376e555d8e6719054d8b064736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xDA DUP6 PUSH9 0x71C3F47A1EBDD816DE 0xD9 MOD COINBASE 0xA7 0x2F INVALID 0xCF ADDRESS LOG3 PUSH23 0xE555D8E6719054D8B064736F6C63430008190033000000 ",
							"sourceMap": "216:1047:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;216:1047:15;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122001da856871c3f47a1ebdd816ded90641a72ffecf30a376e555d8e6719054d8b064736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xDA DUP6 PUSH9 0x71C3F47A1EBDD816DE 0xD9 MOD COINBASE 0xA7 0x2F INVALID 0xCF ADDRESS LOG3 PUSH23 0xE555D8E6719054D8B064736F6C63430008190033000000 ",
							"sourceMap": "216:1047:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122001da856871c3f47a1ebdd816ded90641a72ffecf30a376e555d8e6719054d8b064736f6c63430008190033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/erc721/NftV1Collection.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/erc721/NftV1Collection.sol": {
				"NftV1Collection": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "metadataUrl",
									"type": "string"
								}
							],
							"name": "exchangeNewToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "to",
									"type": "address[]"
								},
								{
									"internalType": "string[]",
									"name": "metadataUrl",
									"type": "string[]"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "to",
									"type": "address[]"
								},
								{
									"internalType": "string",
									"name": "metadataUrl",
									"type": "string"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "metadataUrl",
									"type": "string"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "metadataUrl",
									"type": "string"
								}
							],
							"name": "setUrl",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/erc721/NftV1Collection.sol\":249:1656  contract NftV1Collection is ERC721URIStorage, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/erc721/NftV1Collection.sol\":337:338  0 */\n  0x00\n    /* \"contracts/erc721/NftV1Collection.sol\":310:338  uint256 private _tokenId = 0 */\n  0x08\n  sstore\n    /* \"contracts/erc721/NftV1Collection.sol\":364:490  constructor(address initialOwner, string memory name, string memory symbol) ERC721(name, symbol) Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/erc721/NftV1Collection.sol\":469:481  initialOwner */\n  dup3\n    /* \"contracts/erc721/NftV1Collection.sol\":447:451  name */\n  dup3\n    /* \"contracts/erc721/NftV1Collection.sol\":453:459  symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  tag_8\n    /* \"contracts/erc721/NftV1Collection.sol\":447:451  name */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  tag_10\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4302:4353   */\n  mstore\n    /* \"#utility.yul\":4275:4293   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/erc721/NftV1Collection.sol\":364:490  constructor(address initialOwner, string memory name, string memory symbol) ERC721(name, symbol) Ownable(initialOwner) {... */\n  pop\n  pop\n  pop\n    /* \"contracts/erc721/NftV1Collection.sol\":249:1656  contract NftV1Collection is ERC721URIStorage, Ownable {... */\n  jump(tag_26)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x07\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_20:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:862   */\ntag_21:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_29:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_31\n  tag_20\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_33\n  tag_20\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":709:712   */\n  dup7\n    /* \"#utility.yul\":702:706   */\n  0x20\n    /* \"#utility.yul\":697:699   */\n  dup6\n    /* \"#utility.yul\":689:695   */\n  dup9\n    /* \"#utility.yul\":685:700   */\n  add\n    /* \"#utility.yul\":681:707   */\n  add\n    /* \"#utility.yul\":678:713   */\n  gt\n    /* \"#utility.yul\":675:730   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":726:727   */\n  0x00\n    /* \"#utility.yul\":723:724   */\n  dup1\n    /* \"#utility.yul\":716:728   */\n  revert\n    /* \"#utility.yul\":675:730   */\ntag_34:\n    /* \"#utility.yul\":783:785   */\n  dup4\n    /* \"#utility.yul\":776:780   */\n  0x20\n    /* \"#utility.yul\":768:774   */\n  dup8\n    /* \"#utility.yul\":764:781   */\n  add\n    /* \"#utility.yul\":757:761   */\n  0x20\n    /* \"#utility.yul\":749:755   */\n  dup4\n    /* \"#utility.yul\":745:762   */\n  add\n    /* \"#utility.yul\":739:786   */\n  mcopy\n    /* \"#utility.yul\":830:831   */\n  0x00\n    /* \"#utility.yul\":823:827   */\n  0x20\n    /* \"#utility.yul\":818:820   */\n  dup6\n    /* \"#utility.yul\":810:816   */\n  dup4\n    /* \"#utility.yul\":806:821   */\n  add\n    /* \"#utility.yul\":802:828   */\n  add\n    /* \"#utility.yul\":795:832   */\n  mstore\n    /* \"#utility.yul\":850:856   */\n  dup1\n    /* \"#utility.yul\":841:856   */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":146:862   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":867:1596   */\ntag_3:\n    /* \"#utility.yul\":975:981   */\n  0x00\n    /* \"#utility.yul\":983:989   */\n  dup1\n    /* \"#utility.yul\":991:997   */\n  0x00\n    /* \"#utility.yul\":1044:1046   */\n  0x60\n    /* \"#utility.yul\":1032:1041   */\n  dup5\n    /* \"#utility.yul\":1023:1030   */\n  dup7\n    /* \"#utility.yul\":1019:1042   */\n  sub\n    /* \"#utility.yul\":1015:1047   */\n  slt\n    /* \"#utility.yul\":1012:1064   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1060:1061   */\n  0x00\n    /* \"#utility.yul\":1057:1058   */\n  dup1\n    /* \"#utility.yul\":1050:1062   */\n  revert\n    /* \"#utility.yul\":1012:1064   */\ntag_36:\n    /* \"#utility.yul\":1086:1102   */\n  dup4\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1131:1162   */\n  dup2\n  and\n    /* \"#utility.yul\":1121:1163   */\n  dup2\n  eq\n    /* \"#utility.yul\":1111:1181   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1177:1178   */\n  0x00\n    /* \"#utility.yul\":1174:1175   */\n  dup1\n    /* \"#utility.yul\":1167:1179   */\n  revert\n    /* \"#utility.yul\":1111:1181   */\ntag_37:\n    /* \"#utility.yul\":1249:1251   */\n  0x20\n    /* \"#utility.yul\":1234:1252   */\n  dup6\n  add\n    /* \"#utility.yul\":1228:1253   */\n  mload\n    /* \"#utility.yul\":1200:1205   */\n  swap1\n  swap4\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1302:1316   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1299:1333   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1329:1330   */\n  0x00\n    /* \"#utility.yul\":1326:1327   */\n  dup1\n    /* \"#utility.yul\":1319:1331   */\n  revert\n    /* \"#utility.yul\":1299:1333   */\ntag_38:\n    /* \"#utility.yul\":1352:1413   */\n  tag_39\n    /* \"#utility.yul\":1405:1412   */\n  dup8\n    /* \"#utility.yul\":1396:1402   */\n  dup4\n    /* \"#utility.yul\":1385:1394   */\n  dup9\n    /* \"#utility.yul\":1381:1403   */\n  add\n    /* \"#utility.yul\":1352:1413   */\n  tag_21\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1342:1413   */\n  swap4\n  pop\n    /* \"#utility.yul\":1459:1461   */\n  0x40\n    /* \"#utility.yul\":1448:1457   */\n  dup7\n    /* \"#utility.yul\":1444:1462   */\n  add\n    /* \"#utility.yul\":1438:1463   */\n  mload\n    /* \"#utility.yul\":1422:1463   */\n  swap2\n  pop\n    /* \"#utility.yul\":1488:1490   */\n  dup1\n    /* \"#utility.yul\":1478:1486   */\n  dup3\n    /* \"#utility.yul\":1475:1491   */\n  gt\n    /* \"#utility.yul\":1472:1508   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1504:1505   */\n  0x00\n    /* \"#utility.yul\":1501:1502   */\n  dup1\n    /* \"#utility.yul\":1494:1506   */\n  revert\n    /* \"#utility.yul\":1472:1508   */\ntag_40:\n  pop\n    /* \"#utility.yul\":1527:1590   */\n  tag_41\n    /* \"#utility.yul\":1582:1589   */\n  dup7\n    /* \"#utility.yul\":1571:1579   */\n  dup3\n    /* \"#utility.yul\":1560:1569   */\n  dup8\n    /* \"#utility.yul\":1556:1580   */\n  add\n    /* \"#utility.yul\":1527:1590   */\n  tag_21\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1517:1590   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":867:1596   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1601:1981   */\ntag_22:\n    /* \"#utility.yul\":1680:1681   */\n  0x01\n    /* \"#utility.yul\":1676:1688   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1723:1735   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1744:1805   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1798:1802   */\n  0x7f\n    /* \"#utility.yul\":1790:1796   */\n  dup3\n    /* \"#utility.yul\":1786:1803   */\n  and\n    /* \"#utility.yul\":1776:1803   */\n  swap2\n  pop\n    /* \"#utility.yul\":1744:1805   */\ntag_43:\n    /* \"#utility.yul\":1851:1853   */\n  0x20\n    /* \"#utility.yul\":1843:1849   */\n  dup3\n    /* \"#utility.yul\":1840:1854   */\n  lt\n    /* \"#utility.yul\":1820:1838   */\n  dup2\n    /* \"#utility.yul\":1817:1855   */\n  sub\n    /* \"#utility.yul\":1814:1975   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1897:1907   */\n  0x4e487b71\n    /* \"#utility.yul\":1892:1895   */\n  0xe0\n    /* \"#utility.yul\":1888:1908   */\n  shl\n    /* \"#utility.yul\":1885:1886   */\n  0x00\n    /* \"#utility.yul\":1878:1909   */\n  mstore\n    /* \"#utility.yul\":1932:1936   */\n  0x22\n    /* \"#utility.yul\":1929:1930   */\n  0x04\n    /* \"#utility.yul\":1922:1937   */\n  mstore\n    /* \"#utility.yul\":1960:1964   */\n  0x24\n    /* \"#utility.yul\":1957:1958   */\n  0x00\n    /* \"#utility.yul\":1950:1965   */\n  revert\n    /* \"#utility.yul\":1814:1975   */\ntag_44:\n  pop\n    /* \"#utility.yul\":1601:1981   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2112:2630   */\ntag_24:\n    /* \"#utility.yul\":2214:2216   */\n  0x1f\n    /* \"#utility.yul\":2209:2212   */\n  dup3\n    /* \"#utility.yul\":2206:2217   */\n  gt\n    /* \"#utility.yul\":2203:2624   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2250:2255   */\n  dup1\n    /* \"#utility.yul\":2247:2248   */\n  0x00\n    /* \"#utility.yul\":2240:2256   */\n  mstore\n    /* \"#utility.yul\":2294:2298   */\n  0x20\n    /* \"#utility.yul\":2291:2292   */\n  0x00\n    /* \"#utility.yul\":2281:2299   */\n  keccak256\n    /* \"#utility.yul\":2364:2366   */\n  0x1f\n    /* \"#utility.yul\":2352:2362   */\n  dup5\n    /* \"#utility.yul\":2348:2367   */\n  add\n    /* \"#utility.yul\":2345:2346   */\n  0x05\n    /* \"#utility.yul\":2341:2368   */\n  shr\n    /* \"#utility.yul\":2335:2339   */\n  dup2\n    /* \"#utility.yul\":2331:2369   */\n  add\n    /* \"#utility.yul\":2400:2404   */\n  0x20\n    /* \"#utility.yul\":2388:2398   */\n  dup6\n    /* \"#utility.yul\":2385:2405   */\n  lt\n    /* \"#utility.yul\":2382:2429   */\n  iszero\n  tag_48\n  jumpi\n  pop\n    /* \"#utility.yul\":2423:2427   */\n  dup1\n    /* \"#utility.yul\":2382:2429   */\ntag_48:\n    /* \"#utility.yul\":2478:2480   */\n  0x1f\n    /* \"#utility.yul\":2473:2476   */\n  dup5\n    /* \"#utility.yul\":2469:2481   */\n  add\n    /* \"#utility.yul\":2466:2467   */\n  0x05\n    /* \"#utility.yul\":2462:2482   */\n  shr\n    /* \"#utility.yul\":2456:2460   */\n  dup3\n    /* \"#utility.yul\":2452:2483   */\n  add\n    /* \"#utility.yul\":2442:2483   */\n  swap2\n  pop\n    /* \"#utility.yul\":2533:2614   */\ntag_49:\n    /* \"#utility.yul\":2551:2553   */\n  dup2\n    /* \"#utility.yul\":2544:2549   */\n  dup2\n    /* \"#utility.yul\":2541:2554   */\n  lt\n    /* \"#utility.yul\":2533:2614   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":2610:2611   */\n  0x00\n    /* \"#utility.yul\":2596:2612   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2577:2578   */\n  0x01\n    /* \"#utility.yul\":2566:2579   */\n  add\n    /* \"#utility.yul\":2533:2614   */\n  jump(tag_49)\ntag_51:\n    /* \"#utility.yul\":2537:2540   */\n  pop\n  pop\n    /* \"#utility.yul\":2203:2624   */\ntag_47:\n    /* \"#utility.yul\":2112:2630   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2806:4151   */\ntag_9:\n    /* \"#utility.yul\":2926:2936   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2948:2978   */\n  dup2\n  gt\n    /* \"#utility.yul\":2945:3001   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":2981:2999   */\n  tag_55\n  tag_20\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":3010:3107   */\n  tag_56\n    /* \"#utility.yul\":3100:3106   */\n  dup2\n    /* \"#utility.yul\":3060:3098   */\n  tag_57\n    /* \"#utility.yul\":3092:3096   */\n  dup5\n    /* \"#utility.yul\":3086:3097   */\n  sload\n    /* \"#utility.yul\":3060:3098   */\n  tag_22\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":3054:3058   */\n  dup5\n    /* \"#utility.yul\":3010:3107   */\n  tag_24\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":3162:3166   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3219:3221   */\n  0x1f\n    /* \"#utility.yul\":3208:3222   */\n  dup4\n  gt\n    /* \"#utility.yul\":3236:3237   */\n  0x01\n    /* \"#utility.yul\":3231:3894   */\n  dup2\n  eq\n  tag_59\n  jumpi\n    /* \"#utility.yul\":3938:3939   */\n  0x00\n    /* \"#utility.yul\":3955:3961   */\n  dup5\n    /* \"#utility.yul\":3952:4041   */\n  iszero\n  tag_60\n  jumpi\n  pop\n    /* \"#utility.yul\":4007:4026   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":4001:4027   */\n  mload\n    /* \"#utility.yul\":3952:4041   */\ntag_60:\n  not(0x00)\n    /* \"#utility.yul\":2763:2764   */\n  0x03\n    /* \"#utility.yul\":2759:2770   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2755:2779   */\n  shr\n    /* \"#utility.yul\":2751:2780   */\n  not\n    /* \"#utility.yul\":2741:2781   */\n  and\n    /* \"#utility.yul\":2787:2788   */\n  0x01\n    /* \"#utility.yul\":2783:2794   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2738:2795   */\n  or\n    /* \"#utility.yul\":4054:4135   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3201:4145   */\n  jump(tag_58)\n    /* \"#utility.yul\":3231:3894   */\ntag_59:\n    /* \"#utility.yul\":2059:2060   */\n  0x00\n    /* \"#utility.yul\":2052:2066   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2096:2100   */\n  0x20\n    /* \"#utility.yul\":2083:2101   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3267:3287   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3385:3621   */\ntag_63:\n    /* \"#utility.yul\":3399:3406   */\n  dup3\n    /* \"#utility.yul\":3396:3397   */\n  dup2\n    /* \"#utility.yul\":3393:3407   */\n  lt\n    /* \"#utility.yul\":3385:3621   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":3488:3507   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3482:3508   */\n  mload\n    /* \"#utility.yul\":3467:3509   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3580:3607   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3548:3549   */\n  0x01\n    /* \"#utility.yul\":3536:3550   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3415:3434   */\n  dup5\n  add\n    /* \"#utility.yul\":3385:3621   */\n  jump(tag_63)\ntag_65:\n    /* \"#utility.yul\":3389:3392   */\n  pop\n    /* \"#utility.yul\":3649:3655   */\n  dup6\n    /* \"#utility.yul\":3640:3647   */\n  dup3\n    /* \"#utility.yul\":3637:3656   */\n  lt\n    /* \"#utility.yul\":3634:3835   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":3710:3729   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3704:3730   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3793:3794   */\n  0x03\n    /* \"#utility.yul\":3789:3803   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3805:3808   */\n  0xf8\n    /* \"#utility.yul\":3785:3809   */\n  and\n    /* \"#utility.yul\":3781:3818   */\n  shr\n    /* \"#utility.yul\":3777:3819   */\n  not\n    /* \"#utility.yul\":3762:3820   */\n  and\n    /* \"#utility.yul\":3747:3821   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3634:3835   */\ntag_66:\n  pop\n  pop\n    /* \"#utility.yul\":3881:3882   */\n  0x01\n    /* \"#utility.yul\":3872:3878   */\n  dup5\n    /* \"#utility.yul\":3869:3870   */\n  0x01\n    /* \"#utility.yul\":3865:3879   */\n  shl\n    /* \"#utility.yul\":3861:3883   */\n  add\n    /* \"#utility.yul\":3855:3859   */\n  dup6\n    /* \"#utility.yul\":3848:3884   */\n  sstore\n    /* \"#utility.yul\":3201:4145   */\ntag_58:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2806:4151   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4156:4359   */\ntag_26:\n    /* \"contracts/erc721/NftV1Collection.sol\":249:1656  contract NftV1Collection is ERC721URIStorage, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/erc721/NftV1Collection.sol\":249:1656  contract NftV1Collection is ERC721URIStorage, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4c7bc5cf\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xaef95098\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xb6c32074\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd0def521\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xfc12768b\n      eq\n      tag_23\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_3:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_40\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_40\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_8:\n      tag_40\n      tag_49\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n        /* \"contracts/erc721/NftV1Collection.sol\":633:902  function mint(address[] memory to, string[] memory metadataUrl) external onlyOwner{... */\n    tag_9:\n      tag_40\n      tag_52\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_10:\n      tag_34\n      tag_56\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_59\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      mload(0x40)\n        /* \"#utility.yul\":5845:5870   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5833:5835   */\n      0x20\n        /* \"#utility.yul\":5818:5836   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      tag_28\n        /* \"#utility.yul\":5699:5876   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_40\n      tag_66\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_13:\n      tag_34\n      tag_68\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_14:\n      tag_30\n      tag_71\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_15:\n      tag_40\n      tag_74\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n        /* \"contracts/erc721/NftV1Collection.sol\":1314:1443  function setUrl(uint256 tokenId, string memory metadataUrl) external onlyOwner{... */\n    tag_16:\n      tag_40\n      tag_78\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n        /* \"contracts/erc721/NftV1Collection.sol\":908:1113  function mint(address[] memory to, string memory metadataUrl) external onlyOwner{... */\n    tag_17:\n      tag_40\n      tag_82\n      calldatasize\n      0x04\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_18:\n      tag_40\n      tag_86\n      calldatasize\n      0x04\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_19:\n      tag_30\n      tag_90\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n        /* \"contracts/erc721/NftV1Collection.sol\":496:627  function mint(address to, string memory metadataUrl) external onlyOwner{... */\n    tag_20:\n      tag_40\n      tag_94\n      calldatasize\n      0x04\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_21:\n      tag_24\n      tag_98\n      calldatasize\n      0x04\n      tag_99\n      jump\t// in\n    tag_98:\n      tag_100\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      tag_40\n      tag_103\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n        /* \"contracts/erc721/NftV1Collection.sol\":1449:1654  function exchangeNewToken(address to, uint256 tokenId, string memory metadataUrl) external onlyOwner {... */\n    tag_23:\n      tag_40\n      tag_106\n      calldatasize\n      0x04\n      tag_107\n      jump\t// in\n    tag_106:\n      tag_108\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1039:1043  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1097  interfaceId == ERC4906_INTERFACE_ID */\n      dup3\n      and\n      shl(0xe1, 0x24832483)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1137  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      tag_111\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1137  super.supportsInterface(interfaceId) */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1125:1136  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1124  super.supportsInterface */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1137  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1055:1137  return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_116\n      swap1\n      tag_115\n      jump\t// in\n    tag_116:\n      dup1\n      iszero\n      tag_117\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_118\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_117)\n    tag_118:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_119:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_119\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_117:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_121:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3636:3643  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3635  _getApproved */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_47:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_131\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_136\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      shl(0xe0, 0x64283d7b)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9652:9667   */\n      dup1\n      dup7\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":9634:9668   */\n      mstore\n        /* \"#utility.yul\":9684:9702   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9677:9711   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":9747:9762   */\n      dup3\n      and\n        /* \"#utility.yul\":9727:9745   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9720:9763   */\n      mstore\n        /* \"#utility.yul\":9569:9587   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      tag_132\n        /* \"#utility.yul\":9394:9769   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/erc721/NftV1Collection.sol\":633:902  function mint(address[] memory to, string[] memory metadataUrl) external onlyOwner{... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_142:\n        /* \"contracts/erc721/NftV1Collection.sol\":746:757  metadataUrl */\n      dup1\n        /* \"contracts/erc721/NftV1Collection.sol\":746:764  metadataUrl.length */\n      mload\n        /* \"contracts/erc721/NftV1Collection.sol\":733:735  to */\n      dup3\n        /* \"contracts/erc721/NftV1Collection.sol\":733:742  to.length */\n      mload\n        /* \"contracts/erc721/NftV1Collection.sol\":733:764  to.length == metadataUrl.length */\n      eq\n        /* \"contracts/erc721/NftV1Collection.sol\":725:765  require(to.length == metadataUrl.length) */\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n        /* \"contracts/erc721/NftV1Collection.sol\":788:797  uint256 i */\n      0x00\n        /* \"contracts/erc721/NftV1Collection.sol\":784:875  for(uint256 i = 0; i < to.length; i++) {... */\n    tag_146:\n        /* \"contracts/erc721/NftV1Collection.sol\":807:809  to */\n      dup3\n        /* \"contracts/erc721/NftV1Collection.sol\":807:816  to.length */\n      mload\n        /* \"contracts/erc721/NftV1Collection.sol\":803:804  i */\n      dup2\n        /* \"contracts/erc721/NftV1Collection.sol\":803:816  i < to.length */\n      lt\n        /* \"contracts/erc721/NftV1Collection.sol\":784:875  for(uint256 i = 0; i < to.length; i++) {... */\n      iszero\n      tag_147\n      jumpi\n        /* \"contracts/erc721/NftV1Collection.sol\":836:864  _mint(to[i], metadataUrl[i]) */\n      tag_149\n        /* \"contracts/erc721/NftV1Collection.sol\":842:844  to */\n      dup4\n        /* \"contracts/erc721/NftV1Collection.sol\":845:846  i */\n      dup3\n        /* \"contracts/erc721/NftV1Collection.sol\":842:847  to[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_151\n      jumpi\n      tag_151\n      tag_152\n      jump\t// in\n    tag_151:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/erc721/NftV1Collection.sol\":849:860  metadataUrl */\n      dup4\n        /* \"contracts/erc721/NftV1Collection.sol\":861:862  i */\n      dup4\n        /* \"contracts/erc721/NftV1Collection.sol\":849:863  metadataUrl[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_154\n      jumpi\n      tag_154\n      tag_152\n      jump\t// in\n    tag_154:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/erc721/NftV1Collection.sol\":836:841  _mint */\n      tag_155\n        /* \"contracts/erc721/NftV1Collection.sol\":836:864  _mint(to[i], metadataUrl[i]) */\n      jump\t// in\n    tag_149:\n        /* \"contracts/erc721/NftV1Collection.sol\":818:821  i++ */\n      0x01\n      add\n        /* \"contracts/erc721/NftV1Collection.sol\":784:875  for(uint256 i = 0; i < to.length; i++) {... */\n      jump(tag_146)\n    tag_147:\n      pop\n        /* \"contracts/erc721/NftV1Collection.sol\":889:895  Mint() */\n      mload(0x40)\n      0x00\n      dup1\n      mload\n      0x20\n      data_f4db1d2d8c78bb068fedc1ff59e5527a703b6f0e58a740d5ac3015d7a2341d3d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap1\n      0x00\n      swap1\n      log1\n        /* \"contracts/erc721/NftV1Collection.sol\":633:902  function mint(address[] memory to, string[] memory metadataUrl) external onlyOwner{... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_159\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe2, 0x22718ad9)\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_159:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_164\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_165\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_126\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n        /* \"contracts/erc721/NftV1Collection.sol\":1314:1443  function setUrl(uint256 tokenId, string memory metadataUrl) external onlyOwner{... */\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_178:\n        /* \"contracts/erc721/NftV1Collection.sol\":1402:1436  _setTokenURI(tokenId, metadataUrl) */\n      tag_126\n        /* \"contracts/erc721/NftV1Collection.sol\":1415:1422  tokenId */\n      dup3\n        /* \"contracts/erc721/NftV1Collection.sol\":1424:1435  metadataUrl */\n      dup3\n        /* \"contracts/erc721/NftV1Collection.sol\":1402:1414  _setTokenURI */\n      tag_181\n        /* \"contracts/erc721/NftV1Collection.sol\":1402:1436  _setTokenURI(tokenId, metadataUrl) */\n      jump\t// in\n        /* \"contracts/erc721/NftV1Collection.sol\":908:1113  function mint(address[] memory to, string memory metadataUrl) external onlyOwner{... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_183\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_183:\n        /* \"contracts/erc721/NftV1Collection.sol\":1002:1011  uint256 i */\n      0x00\n        /* \"contracts/erc721/NftV1Collection.sol\":998:1086  for(uint256 i = 0; i < to.length; i++) {... */\n    tag_185:\n        /* \"contracts/erc721/NftV1Collection.sol\":1021:1023  to */\n      dup3\n        /* \"contracts/erc721/NftV1Collection.sol\":1021:1030  to.length */\n      mload\n        /* \"contracts/erc721/NftV1Collection.sol\":1017:1018  i */\n      dup2\n        /* \"contracts/erc721/NftV1Collection.sol\":1017:1030  i < to.length */\n      lt\n        /* \"contracts/erc721/NftV1Collection.sol\":998:1086  for(uint256 i = 0; i < to.length; i++) {... */\n      iszero\n      tag_147\n      jumpi\n        /* \"contracts/erc721/NftV1Collection.sol\":1050:1075  _mint(to[i], metadataUrl) */\n      tag_188\n        /* \"contracts/erc721/NftV1Collection.sol\":1056:1058  to */\n      dup4\n        /* \"contracts/erc721/NftV1Collection.sol\":1059:1060  i */\n      dup3\n        /* \"contracts/erc721/NftV1Collection.sol\":1056:1061  to[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_190\n      jumpi\n      tag_190\n      tag_152\n      jump\t// in\n    tag_190:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/erc721/NftV1Collection.sol\":1063:1074  metadataUrl */\n      dup4\n        /* \"contracts/erc721/NftV1Collection.sol\":1050:1055  _mint */\n      tag_155\n        /* \"contracts/erc721/NftV1Collection.sol\":1050:1075  _mint(to[i], metadataUrl) */\n      jump\t// in\n    tag_188:\n        /* \"contracts/erc721/NftV1Collection.sol\":1032:1035  i++ */\n      0x01\n      add\n        /* \"contracts/erc721/NftV1Collection.sol\":998:1086  for(uint256 i = 0; i < to.length; i++) {... */\n      jump(tag_185)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1283:1296  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1330  _requireOwned(tokenId) */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1322:1329  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1321  _requireOwned */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1330  _requireOwned(tokenId) */\n      jump\t// in\n    tag_196:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1341:1364  string memory _tokenURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1386  _tokenURIs[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1377  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1386  _tokenURIs[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1341:1386  string memory _tokenURI = _tokenURIs[tokenId] */\n      dup1\n      sload\n      tag_197\n      swap1\n      tag_115\n      jump\t// in\n    tag_197:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_198\n      swap1\n      tag_115\n      jump\t// in\n    tag_198:\n      dup1\n      iszero\n      tag_199\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_200\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_199)\n    tag_200:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_201:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_201\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_199:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1396:1414  string memory base */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1427  _baseURI() */\n      tag_202\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3250:3259  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1427  _baseURI() */\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1396:1427  string memory base = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1506:1510  base */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1500:1518  bytes(base).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1522:1523  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1500:1523  bytes(base).length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1496:1566  if (bytes(base).length == 0) {... */\n      tag_204\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1546:1555  _tokenURI */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1496:1566  if (bytes(base).length == 0) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1665:1688  bytes(_tokenURI).length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1665:1692  bytes(_tokenURI).length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1661:1756  if (bytes(_tokenURI).length > 0) {... */\n      tag_205\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1729:1733  base */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1735:1744  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1715:1745  string.concat(base, _tokenURI) */\n      add(0x20, mload(0x40))\n      tag_206\n      swap3\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1708:1745  return string.concat(base, _tokenURI) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1661:1756  if (bytes(_tokenURI).length > 0) {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1796  super.tokenURI(tokenId) */\n      tag_208\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1788:1795  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1787  super.tokenURI */\n      tag_209\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1796  super.tokenURI(tokenId) */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1766:1796  return super.tokenURI(tokenId) */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/erc721/NftV1Collection.sol\":496:627  function mint(address to, string memory metadataUrl) external onlyOwner{... */\n    tag_96:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_211\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_211:\n        /* \"contracts/erc721/NftV1Collection.sol\":577:599  _mint(to, metadataUrl) */\n      tag_213\n        /* \"contracts/erc721/NftV1Collection.sol\":583:585  to */\n      dup3\n        /* \"contracts/erc721/NftV1Collection.sol\":587:598  metadataUrl */\n      dup3\n        /* \"contracts/erc721/NftV1Collection.sol\":577:582  _mint */\n      tag_155\n        /* \"contracts/erc721/NftV1Collection.sol\":577:599  _mint(to, metadataUrl) */\n      jump\t// in\n    tag_213:\n        /* \"contracts/erc721/NftV1Collection.sol\":614:620  Mint() */\n      mload(0x40)\n      0x00\n      dup1\n      mload\n      0x20\n      data_f4db1d2d8c78bb068fedc1ff59e5527a703b6f0e58a740d5ac3015d7a2341d3d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap1\n      0x00\n      swap1\n      log1\n        /* \"contracts/erc721/NftV1Collection.sol\":496:627  function mint(address to, string memory metadataUrl) external onlyOwner{... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_216\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_216:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_218\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_220\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_165\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_220:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/erc721/NftV1Collection.sol\":1449:1654  function exchangeNewToken(address to, uint256 tokenId, string memory metadataUrl) external onlyOwner {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_222\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_222:\n        /* \"contracts/erc721/NftV1Collection.sol\":1588:1590  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/erc721/NftV1Collection.sol\":1568:1590  ownerOf(tokenId) == to */\n      and\n        /* \"contracts/erc721/NftV1Collection.sol\":1568:1584  ownerOf(tokenId) */\n      tag_224\n        /* \"contracts/erc721/NftV1Collection.sol\":1576:1583  tokenId */\n      dup4\n        /* \"contracts/erc721/NftV1Collection.sol\":1568:1575  ownerOf */\n      tag_57\n        /* \"contracts/erc721/NftV1Collection.sol\":1568:1584  ownerOf(tokenId) */\n      jump\t// in\n    tag_224:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/erc721/NftV1Collection.sol\":1568:1590  ownerOf(tokenId) == to */\n      and\n      eq\n        /* \"contracts/erc721/NftV1Collection.sol\":1560:1591  require(ownerOf(tokenId) == to) */\n      tag_225\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_225:\n        /* \"contracts/erc721/NftV1Collection.sol\":1601:1615  _burn(tokenId) */\n      tag_226\n        /* \"contracts/erc721/NftV1Collection.sol\":1607:1614  tokenId */\n      dup3\n        /* \"contracts/erc721/NftV1Collection.sol\":1601:1606  _burn */\n      tag_227\n        /* \"contracts/erc721/NftV1Collection.sol\":1601:1615  _burn(tokenId) */\n      jump\t// in\n    tag_226:\n        /* \"contracts/erc721/NftV1Collection.sol\":1625:1647  _mint(to, metadataUrl) */\n      tag_140\n        /* \"contracts/erc721/NftV1Collection.sol\":1631:1633  to */\n      dup4\n        /* \"contracts/erc721/NftV1Collection.sol\":1635:1646  metadataUrl */\n      dup3\n        /* \"contracts/erc721/NftV1Collection.sol\":1625:1630  _mint */\n      tag_155\n        /* \"contracts/erc721/NftV1Collection.sol\":1625:1647  _mint(to, metadataUrl) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      tag_230\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_111\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_111\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16233  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      tag_235\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16245:16252  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16244  _ownerOf */\n      tag_236\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16253  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_111\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x7e273289)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":5845:5870   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":5818:5836   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      tag_132\n        /* \"#utility.yul\":5699:5876   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_243\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8955  address from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      tag_245\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8967:8974  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8966  _ownerOf */\n      tag_236\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8975  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      dup4\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_247\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_247\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_248\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_247:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      dup2\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_250\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_243\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_250:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_249:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      dup6\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_251\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup10\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      swap2\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup8\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_254\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_254:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_164\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"contracts/erc721/NftV1Collection.sol\":1119:1308  function _mint(address to, string memory metadataUrl) internal onlyOwner{... */\n    tag_155:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_259\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_259:\n        /* \"contracts/erc721/NftV1Collection.sol\":1219:1227  _tokenId */\n      0x08\n        /* \"contracts/erc721/NftV1Collection.sol\":1219:1229  _tokenId++ */\n      dup1\n      sload\n        /* \"contracts/erc721/NftV1Collection.sol\":1201:1216  uint256 tokenId */\n      0x00\n      swap2\n      dup3\n        /* \"contracts/erc721/NftV1Collection.sol\":1219:1229  _tokenId++ */\n      tag_261\n      dup4\n      tag_262\n      jump\t// in\n    tag_261:\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"contracts/erc721/NftV1Collection.sol\":1201:1229  uint256 tokenId = _tokenId++ */\n      swap1\n      pop\n        /* \"contracts/erc721/NftV1Collection.sol\":1239:1257  _mint(to, tokenId) */\n      tag_263\n        /* \"contracts/erc721/NftV1Collection.sol\":1245:1247  to */\n      dup4\n        /* \"contracts/erc721/NftV1Collection.sol\":1249:1256  tokenId */\n      dup3\n        /* \"contracts/erc721/NftV1Collection.sol\":1239:1244  _mint */\n      tag_264\n        /* \"contracts/erc721/NftV1Collection.sol\":1239:1257  _mint(to, tokenId) */\n      jump\t// in\n    tag_263:\n        /* \"contracts/erc721/NftV1Collection.sol\":1267:1301  _setTokenURI(tokenId, metadataUrl) */\n      tag_140\n        /* \"contracts/erc721/NftV1Collection.sol\":1280:1287  tokenId */\n      dup2\n        /* \"contracts/erc721/NftV1Collection.sol\":1289:1300  metadataUrl */\n      dup4\n        /* \"contracts/erc721/NftV1Collection.sol\":1267:1279  _setTokenURI */\n      tag_181\n        /* \"contracts/erc721/NftV1Collection.sol\":1267:1301  _setTokenURI(tokenId, metadataUrl) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x07\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_176:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_268\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15765:15773  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      shl(0xe3, 0x0b611743)\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_268:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1922:2089  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2032  _tokenURIs[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2023  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2032  _tokenURIs[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2044  _tokenURIs[tokenId] = _tokenURI */\n      tag_272\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2035:2044  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2032  _tokenURIs[tokenId] */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2044  _tokenURIs[tokenId] = _tokenURI */\n      tag_273\n      jump\t// in\n    tag_272:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2059:2082  MetadataUpdate(tokenId) */\n      mload(0x40)\n        /* \"#utility.yul\":5845:5870   */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2059:2082  MetadataUpdate(tokenId) */\n      0xf8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7\n      swap1\n        /* \"#utility.yul\":5833:5835   */\n      0x20\n        /* \"#utility.yul\":5818:5836   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2059:2082  MetadataUpdate(tokenId) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1922:2089  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_194:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      tag_136\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      dup5\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      tag_278\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup8\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup8\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      0x04\n      add\n      tag_279\n      jump\t// in\n    tag_278:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_280\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_281\n      swap2\n      dup2\n      add\n      swap1\n      tag_282\n      jump\t// in\n    tag_281:\n      0x01\n    tag_280:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_283\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_288\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_287)\n    tag_288:\n      0x60\n      swap2\n      pop\n    tag_287:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_289\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17452:17454  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_283:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      dup2\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_293\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17294:17296  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_293:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2741:2754  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      tag_297\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2780:2787  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2779  _requireOwned */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      jump\t// in\n    tag_297:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2820  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      tag_298\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3250:3259  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n    tag_298:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2833  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2875  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2856:2863  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2871  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2875  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_299\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_300)\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2892:2899  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      tag_301\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2908  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2917  tokenId.toString */\n      tag_302\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      jump\t// in\n    tag_301:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2878:2920  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_303\n      swap3\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_303:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_300:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2843:2925  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11462:11689  function _burn(uint256 tokenId) internal {... */\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11513:11534  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11537:11577  _update(address(0), tokenId, address(0)) */\n      tag_305\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11553:11554  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11557:11564  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11574:11575  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11537:11544  _update */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11537:11577  _update(address(0), tokenId, address(0)) */\n      jump\t// in\n    tag_305:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11513:11577  address previousOwner = _update(address(0), tokenId, address(0)) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11591:11618  previousOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11587:11683  if (previousOwner == address(0)) {... */\n      tag_126\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11641:11672  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x7e273289)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":5845:5870   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":5818:5836   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11641:11672  ERC721NonexistentToken(tokenId) */\n      tag_132\n        /* \"#utility.yul\":5699:5876   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5773:5780  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_311\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_311:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_312\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_313\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_313:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      tag_314\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_314:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_315\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_316\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_316:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_315:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_317\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15211:15215  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      shl(0xe0, 0xa9fbf51f)\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_317:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_319\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_319:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_312:\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_321\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_322\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_321:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_140\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_324\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x7e273289)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":5845:5870   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":5818:5836   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      tag_132\n        /* \"#utility.yul\":5699:5876   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_324:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x177e802f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13753:13785   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13735:13786   */\n      mstore\n        /* \"#utility.yul\":13802:13820   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":13795:13829   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":13708:13726   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      tag_132\n        /* \"#utility.yul\":13561:13835   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n    tag_264:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n      tag_330\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10091:10092  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n    tag_330:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10135  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      tag_332\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10146:10148  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10150:10157  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10167:10168  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10145  _update */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_332:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10170  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      dup2\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n      tag_140\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10262:10263  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x39e35637)\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_302:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_336\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_337\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_336:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      dup2\n      gt\n      iszero\n      tag_339\n      jumpi\n      tag_339\n      tag_340\n      jump\t// in\n    tag_339:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_341\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_341:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_342:\n      not(0x00)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      add\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      dup7\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_342\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      swap4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_322:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      tag_208\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_351\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_351\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_351:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_208\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6640  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      tag_353\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6621:6628  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6620  _getApproved */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      jump\t// in\n    tag_353:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_337:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n      dup1\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      dup4\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_355\n      jumpi\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_355:\n      shl(0x20, 0x04ee2d6d415b85acef81)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_358\n      jumpi\n      shl(0x20, 0x04ee2d6d415b85acef81)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_358:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_361\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_361:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_364\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_364:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_367\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_367:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_370\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_370:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_111\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      swap3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_374:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_220\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:395   */\n    tag_26:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_390:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_300\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_374\n      jump\t// in\n        /* \"#utility.yul\":592:892   */\n    tag_375:\n        /* \"#utility.yul\":645:648   */\n      0x00\n        /* \"#utility.yul\":683:688   */\n      dup2\n        /* \"#utility.yul\":677:689   */\n      mload\n        /* \"#utility.yul\":710:716   */\n      dup1\n        /* \"#utility.yul\":705:708   */\n      dup5\n        /* \"#utility.yul\":698:717   */\n      mstore\n        /* \"#utility.yul\":766:772   */\n      dup1\n        /* \"#utility.yul\":759:763   */\n      0x20\n        /* \"#utility.yul\":752:757   */\n      dup5\n        /* \"#utility.yul\":748:764   */\n      add\n        /* \"#utility.yul\":741:745   */\n      0x20\n        /* \"#utility.yul\":736:739   */\n      dup7\n        /* \"#utility.yul\":732:746   */\n      add\n        /* \"#utility.yul\":726:773   */\n      mcopy\n        /* \"#utility.yul\":818:819   */\n      0x00\n        /* \"#utility.yul\":811:815   */\n      0x20\n        /* \"#utility.yul\":802:808   */\n      dup3\n        /* \"#utility.yul\":797:800   */\n      dup7\n        /* \"#utility.yul\":793:809   */\n      add\n        /* \"#utility.yul\":789:816   */\n      add\n        /* \"#utility.yul\":782:820   */\n      mstore\n        /* \"#utility.yul\":881:885   */\n      0x20\n        /* \"#utility.yul\":874:876   */\n      0x1f\n        /* \"#utility.yul\":870:877   */\n      not\n        /* \"#utility.yul\":865:867   */\n      0x1f\n        /* \"#utility.yul\":857:863   */\n      dup4\n        /* \"#utility.yul\":853:868   */\n      add\n        /* \"#utility.yul\":849:878   */\n      and\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":840:879   */\n      add\n        /* \"#utility.yul\":836:886   */\n      add\n        /* \"#utility.yul\":829:886   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":592:892   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1128   */\n    tag_33:\n        /* \"#utility.yul\":1046:1048   */\n      0x20\n        /* \"#utility.yul\":1035:1044   */\n      dup2\n        /* \"#utility.yul\":1028:1049   */\n      mstore\n        /* \"#utility.yul\":1009:1013   */\n      0x00\n        /* \"#utility.yul\":1066:1122   */\n      tag_300\n        /* \"#utility.yul\":1118:1120   */\n      0x20\n        /* \"#utility.yul\":1107:1116   */\n      dup4\n        /* \"#utility.yul\":1103:1121   */\n      add\n        /* \"#utility.yul\":1095:1101   */\n      dup5\n        /* \"#utility.yul\":1066:1122   */\n      tag_375\n      jump\t// in\n        /* \"#utility.yul\":1133:1313   */\n    tag_36:\n        /* \"#utility.yul\":1192:1198   */\n      0x00\n        /* \"#utility.yul\":1245:1247   */\n      0x20\n        /* \"#utility.yul\":1233:1242   */\n      dup3\n        /* \"#utility.yul\":1224:1231   */\n      dup5\n        /* \"#utility.yul\":1220:1243   */\n      sub\n        /* \"#utility.yul\":1216:1248   */\n      slt\n        /* \"#utility.yul\":1213:1265   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":1261:1262   */\n      0x00\n        /* \"#utility.yul\":1258:1259   */\n      dup1\n        /* \"#utility.yul\":1251:1263   */\n      revert\n        /* \"#utility.yul\":1213:1265   */\n    tag_397:\n      pop\n        /* \"#utility.yul\":1284:1307   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1133:1313   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1318:1521   */\n    tag_39:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1482:1514   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1464:1515   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1452:1454   */\n      0x20\n        /* \"#utility.yul\":1437:1455   */\n      add\n      swap1\n        /* \"#utility.yul\":1318:1521   */\n      jump\t// out\n        /* \"#utility.yul\":1526:1699   */\n    tag_376:\n        /* \"#utility.yul\":1594:1614   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1643:1674   */\n      dup2\n      and\n        /* \"#utility.yul\":1633:1675   */\n      dup2\n      eq\n        /* \"#utility.yul\":1623:1693   */\n      tag_400\n      jumpi\n        /* \"#utility.yul\":1689:1690   */\n      0x00\n        /* \"#utility.yul\":1686:1687   */\n      dup1\n        /* \"#utility.yul\":1679:1691   */\n      revert\n        /* \"#utility.yul\":1623:1693   */\n    tag_400:\n        /* \"#utility.yul\":1526:1699   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1704:1958   */\n    tag_42:\n        /* \"#utility.yul\":1772:1778   */\n      0x00\n        /* \"#utility.yul\":1780:1786   */\n      dup1\n        /* \"#utility.yul\":1833:1835   */\n      0x40\n        /* \"#utility.yul\":1821:1830   */\n      dup4\n        /* \"#utility.yul\":1812:1819   */\n      dup6\n        /* \"#utility.yul\":1808:1831   */\n      sub\n        /* \"#utility.yul\":1804:1836   */\n      slt\n        /* \"#utility.yul\":1801:1853   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":1849:1850   */\n      0x00\n        /* \"#utility.yul\":1846:1847   */\n      dup1\n        /* \"#utility.yul\":1839:1851   */\n      revert\n        /* \"#utility.yul\":1801:1853   */\n    tag_402:\n        /* \"#utility.yul\":1872:1901   */\n      tag_403\n        /* \"#utility.yul\":1891:1900   */\n      dup4\n        /* \"#utility.yul\":1872:1901   */\n      tag_376\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":1862:1901   */\n      swap5\n        /* \"#utility.yul\":1948:1950   */\n      0x20\n        /* \"#utility.yul\":1933:1951   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1920:1952   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1704:1958   */\n      jump\t// out\n        /* \"#utility.yul\":1963:2291   */\n    tag_46:\n        /* \"#utility.yul\":2040:2046   */\n      0x00\n        /* \"#utility.yul\":2048:2054   */\n      dup1\n        /* \"#utility.yul\":2056:2062   */\n      0x00\n        /* \"#utility.yul\":2109:2111   */\n      0x60\n        /* \"#utility.yul\":2097:2106   */\n      dup5\n        /* \"#utility.yul\":2088:2095   */\n      dup7\n        /* \"#utility.yul\":2084:2107   */\n      sub\n        /* \"#utility.yul\":2080:2112   */\n      slt\n        /* \"#utility.yul\":2077:2129   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":2125:2126   */\n      0x00\n        /* \"#utility.yul\":2122:2123   */\n      dup1\n        /* \"#utility.yul\":2115:2127   */\n      revert\n        /* \"#utility.yul\":2077:2129   */\n    tag_405:\n        /* \"#utility.yul\":2148:2177   */\n      tag_406\n        /* \"#utility.yul\":2167:2176   */\n      dup5\n        /* \"#utility.yul\":2148:2177   */\n      tag_376\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":2138:2177   */\n      swap3\n      pop\n        /* \"#utility.yul\":2196:2234   */\n      tag_407\n        /* \"#utility.yul\":2230:2232   */\n      0x20\n        /* \"#utility.yul\":2219:2228   */\n      dup6\n        /* \"#utility.yul\":2215:2233   */\n      add\n        /* \"#utility.yul\":2196:2234   */\n      tag_376\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":2186:2234   */\n      swap2\n      pop\n        /* \"#utility.yul\":2281:2283   */\n      0x40\n        /* \"#utility.yul\":2270:2279   */\n      dup5\n        /* \"#utility.yul\":2266:2284   */\n      add\n        /* \"#utility.yul\":2253:2285   */\n      calldataload\n        /* \"#utility.yul\":2243:2285   */\n      swap1\n      pop\n        /* \"#utility.yul\":1963:2291   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2296:2423   */\n    tag_340:\n        /* \"#utility.yul\":2357:2367   */\n      0x4e487b71\n        /* \"#utility.yul\":2352:2355   */\n      0xe0\n        /* \"#utility.yul\":2348:2368   */\n      shl\n        /* \"#utility.yul\":2345:2346   */\n      0x00\n        /* \"#utility.yul\":2338:2369   */\n      mstore\n        /* \"#utility.yul\":2388:2392   */\n      0x41\n        /* \"#utility.yul\":2385:2386   */\n      0x04\n        /* \"#utility.yul\":2378:2393   */\n      mstore\n        /* \"#utility.yul\":2412:2416   */\n      0x24\n        /* \"#utility.yul\":2409:2410   */\n      0x00\n        /* \"#utility.yul\":2402:2417   */\n      revert\n        /* \"#utility.yul\":2428:2703   */\n    tag_377:\n        /* \"#utility.yul\":2499:2501   */\n      0x40\n        /* \"#utility.yul\":2493:2502   */\n      mload\n        /* \"#utility.yul\":2564:2566   */\n      0x1f\n        /* \"#utility.yul\":2545:2558   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2541:2568   */\n      and\n        /* \"#utility.yul\":2529:2569   */\n      dup2\n      add\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":2584:2618   */\n      dup2\n      gt\n        /* \"#utility.yul\":2620:2642   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2581:2643   */\n      or\n        /* \"#utility.yul\":2578:2666   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":2646:2664   */\n      tag_411\n      tag_340\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":2682:2684   */\n      0x40\n        /* \"#utility.yul\":2675:2697   */\n      mstore\n        /* \"#utility.yul\":2428:2703   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2708:2891   */\n    tag_378:\n        /* \"#utility.yul\":2768:2772   */\n      0x00\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":2790:2820   */\n      dup3\n      gt\n        /* \"#utility.yul\":2787:2843   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":2823:2841   */\n      tag_414\n      tag_340\n      jump\t// in\n    tag_414:\n      pop\n        /* \"#utility.yul\":2868:2869   */\n      0x05\n        /* \"#utility.yul\":2864:2878   */\n      shl\n        /* \"#utility.yul\":2880:2884   */\n      0x20\n        /* \"#utility.yul\":2860:2885   */\n      add\n      swap1\n        /* \"#utility.yul\":2708:2891   */\n      jump\t// out\n        /* \"#utility.yul\":2896:3570   */\n    tag_379:\n        /* \"#utility.yul\":2950:2955   */\n      0x00\n        /* \"#utility.yul\":3003:3006   */\n      dup3\n        /* \"#utility.yul\":2996:3000   */\n      0x1f\n        /* \"#utility.yul\":2988:2994   */\n      dup4\n        /* \"#utility.yul\":2984:3001   */\n      add\n        /* \"#utility.yul\":2980:3007   */\n      slt\n        /* \"#utility.yul\":2970:3025   */\n      tag_416\n      jumpi\n        /* \"#utility.yul\":3021:3022   */\n      0x00\n        /* \"#utility.yul\":3018:3019   */\n      dup1\n        /* \"#utility.yul\":3011:3023   */\n      revert\n        /* \"#utility.yul\":2970:3025   */\n    tag_416:\n        /* \"#utility.yul\":3057:3063   */\n      dup2\n        /* \"#utility.yul\":3044:3064   */\n      calldataload\n        /* \"#utility.yul\":3083:3087   */\n      0x20\n        /* \"#utility.yul\":3107:3167   */\n      tag_417\n        /* \"#utility.yul\":3123:3166   */\n      tag_418\n        /* \"#utility.yul\":3163:3165   */\n      dup4\n        /* \"#utility.yul\":3123:3166   */\n      tag_378\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":3107:3167   */\n      tag_377\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":3189:3192   */\n      dup1\n        /* \"#utility.yul\":3213:3215   */\n      dup4\n        /* \"#utility.yul\":3208:3211   */\n      dup3\n        /* \"#utility.yul\":3201:3216   */\n      mstore\n        /* \"#utility.yul\":3241:3245   */\n      0x20\n        /* \"#utility.yul\":3236:3239   */\n      dup3\n        /* \"#utility.yul\":3232:3246   */\n      add\n        /* \"#utility.yul\":3225:3246   */\n      swap2\n      pop\n        /* \"#utility.yul\":3298:3302   */\n      0x20\n        /* \"#utility.yul\":3292:3294   */\n      dup5\n        /* \"#utility.yul\":3289:3290   */\n      0x05\n        /* \"#utility.yul\":3285:3295   */\n      shl\n        /* \"#utility.yul\":3277:3283   */\n      dup8\n        /* \"#utility.yul\":3273:3296   */\n      add\n        /* \"#utility.yul\":3269:3303   */\n      add\n        /* \"#utility.yul\":3255:3303   */\n      swap4\n      pop\n        /* \"#utility.yul\":3326:3329   */\n      dup7\n        /* \"#utility.yul\":3318:3324   */\n      dup5\n        /* \"#utility.yul\":3315:3330   */\n      gt\n        /* \"#utility.yul\":3312:3347   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":3343:3344   */\n      0x00\n        /* \"#utility.yul\":3340:3341   */\n      dup1\n        /* \"#utility.yul\":3333:3345   */\n      revert\n        /* \"#utility.yul\":3312:3347   */\n    tag_419:\n        /* \"#utility.yul\":3379:3383   */\n      0x20\n        /* \"#utility.yul\":3371:3377   */\n      dup7\n        /* \"#utility.yul\":3367:3384   */\n      add\n        /* \"#utility.yul\":3393:3541   */\n    tag_420:\n        /* \"#utility.yul\":3409:3415   */\n      dup5\n        /* \"#utility.yul\":3404:3407   */\n      dup2\n        /* \"#utility.yul\":3401:3416   */\n      lt\n        /* \"#utility.yul\":3393:3541   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":3475:3498   */\n      tag_423\n        /* \"#utility.yul\":3494:3497   */\n      dup2\n        /* \"#utility.yul\":3475:3498   */\n      tag_376\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":3463:3499   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3519:3531   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":3426:3438   */\n      dup4\n      add\n        /* \"#utility.yul\":3393:3541   */\n      jump(tag_420)\n    tag_422:\n      pop\n        /* \"#utility.yul\":3559:3564   */\n      swap7\n        /* \"#utility.yul\":2896:3570   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3575:3982   */\n    tag_380:\n        /* \"#utility.yul\":3640:3645   */\n      0x00\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":3663:3693   */\n      dup4\n      gt\n        /* \"#utility.yul\":3660:3716   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":3696:3714   */\n      tag_426\n      tag_340\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":3734:3791   */\n      tag_427\n        /* \"#utility.yul\":3779:3781   */\n      0x1f\n        /* \"#utility.yul\":3758:3773   */\n      dup5\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3754:3783   */\n      and\n        /* \"#utility.yul\":3785:3789   */\n      0x20\n        /* \"#utility.yul\":3750:3790   */\n      add\n        /* \"#utility.yul\":3734:3791   */\n      tag_377\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":3725:3791   */\n      swap1\n      pop\n        /* \"#utility.yul\":3814:3820   */\n      dup3\n        /* \"#utility.yul\":3807:3812   */\n      dup2\n        /* \"#utility.yul\":3800:3821   */\n      mstore\n        /* \"#utility.yul\":3854:3857   */\n      dup4\n        /* \"#utility.yul\":3845:3851   */\n      dup4\n        /* \"#utility.yul\":3840:3843   */\n      dup4\n        /* \"#utility.yul\":3836:3852   */\n      add\n        /* \"#utility.yul\":3833:3858   */\n      gt\n        /* \"#utility.yul\":3830:3875   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":3871:3872   */\n      0x00\n        /* \"#utility.yul\":3868:3869   */\n      dup1\n        /* \"#utility.yul\":3861:3873   */\n      revert\n        /* \"#utility.yul\":3830:3875   */\n    tag_428:\n        /* \"#utility.yul\":3920:3926   */\n      dup3\n        /* \"#utility.yul\":3915:3918   */\n      dup3\n        /* \"#utility.yul\":3908:3912   */\n      0x20\n        /* \"#utility.yul\":3901:3906   */\n      dup4\n        /* \"#utility.yul\":3897:3913   */\n      add\n        /* \"#utility.yul\":3884:3927   */\n      calldatacopy\n        /* \"#utility.yul\":3974:3975   */\n      0x00\n        /* \"#utility.yul\":3967:3971   */\n      0x20\n        /* \"#utility.yul\":3958:3964   */\n      dup5\n        /* \"#utility.yul\":3951:3956   */\n      dup4\n        /* \"#utility.yul\":3947:3965   */\n      add\n        /* \"#utility.yul\":3943:3972   */\n      add\n        /* \"#utility.yul\":3936:3976   */\n      mstore\n        /* \"#utility.yul\":3575:3982   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3987:4209   */\n    tag_381:\n        /* \"#utility.yul\":4030:4035   */\n      0x00\n        /* \"#utility.yul\":4083:4086   */\n      dup3\n        /* \"#utility.yul\":4076:4080   */\n      0x1f\n        /* \"#utility.yul\":4068:4074   */\n      dup4\n        /* \"#utility.yul\":4064:4081   */\n      add\n        /* \"#utility.yul\":4060:4087   */\n      slt\n        /* \"#utility.yul\":4050:4105   */\n      tag_430\n      jumpi\n        /* \"#utility.yul\":4101:4102   */\n      0x00\n        /* \"#utility.yul\":4098:4099   */\n      dup1\n        /* \"#utility.yul\":4091:4103   */\n      revert\n        /* \"#utility.yul\":4050:4105   */\n    tag_430:\n        /* \"#utility.yul\":4123:4203   */\n      tag_300\n        /* \"#utility.yul\":4199:4202   */\n      dup4\n        /* \"#utility.yul\":4190:4196   */\n      dup4\n        /* \"#utility.yul\":4177:4197   */\n      calldataload\n        /* \"#utility.yul\":4170:4174   */\n      0x20\n        /* \"#utility.yul\":4162:4168   */\n      dup6\n        /* \"#utility.yul\":4158:4175   */\n      add\n        /* \"#utility.yul\":4123:4203   */\n      tag_380\n      jump\t// in\n        /* \"#utility.yul\":4214:5503   */\n    tag_53:\n        /* \"#utility.yul\":4342:4348   */\n      0x00\n        /* \"#utility.yul\":4350:4356   */\n      dup1\n        /* \"#utility.yul\":4403:4405   */\n      0x40\n        /* \"#utility.yul\":4391:4400   */\n      dup4\n        /* \"#utility.yul\":4382:4389   */\n      dup6\n        /* \"#utility.yul\":4378:4401   */\n      sub\n        /* \"#utility.yul\":4374:4406   */\n      slt\n        /* \"#utility.yul\":4371:4423   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":4419:4420   */\n      0x00\n        /* \"#utility.yul\":4416:4417   */\n      dup1\n        /* \"#utility.yul\":4409:4421   */\n      revert\n        /* \"#utility.yul\":4371:4423   */\n    tag_433:\n        /* \"#utility.yul\":4446:4469   */\n      dup3\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":4518:4532   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4515:4549   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":4545:4546   */\n      0x00\n        /* \"#utility.yul\":4542:4543   */\n      dup1\n        /* \"#utility.yul\":4535:4547   */\n      revert\n        /* \"#utility.yul\":4515:4549   */\n    tag_434:\n        /* \"#utility.yul\":4568:4629   */\n      tag_435\n        /* \"#utility.yul\":4621:4628   */\n      dup7\n        /* \"#utility.yul\":4612:4618   */\n      dup4\n        /* \"#utility.yul\":4601:4610   */\n      dup8\n        /* \"#utility.yul\":4597:4619   */\n      add\n        /* \"#utility.yul\":4568:4629   */\n      tag_379\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":4558:4629   */\n      swap4\n      pop\n        /* \"#utility.yul\":4648:4650   */\n      0x20\n        /* \"#utility.yul\":4638:4650   */\n      swap2\n      pop\n        /* \"#utility.yul\":4703:4705   */\n      dup2\n        /* \"#utility.yul\":4692:4701   */\n      dup6\n        /* \"#utility.yul\":4688:4706   */\n      add\n        /* \"#utility.yul\":4675:4707   */\n      calldataload\n        /* \"#utility.yul\":4732:4734   */\n      dup2\n        /* \"#utility.yul\":4722:4730   */\n      dup2\n        /* \"#utility.yul\":4719:4735   */\n      gt\n        /* \"#utility.yul\":4716:4752   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":4748:4749   */\n      0x00\n        /* \"#utility.yul\":4745:4746   */\n      dup1\n        /* \"#utility.yul\":4738:4750   */\n      revert\n        /* \"#utility.yul\":4716:4752   */\n    tag_436:\n        /* \"#utility.yul\":4771:4795   */\n      dup6\n      add\n        /* \"#utility.yul\":4826:4830   */\n      0x1f\n        /* \"#utility.yul\":4818:4831   */\n      dup2\n      add\n        /* \"#utility.yul\":4814:4841   */\n      dup8\n      sgt\n        /* \"#utility.yul\":4804:4859   */\n      tag_437\n      jumpi\n        /* \"#utility.yul\":4855:4856   */\n      0x00\n        /* \"#utility.yul\":4852:4853   */\n      dup1\n        /* \"#utility.yul\":4845:4857   */\n      revert\n        /* \"#utility.yul\":4804:4859   */\n    tag_437:\n        /* \"#utility.yul\":4891:4893   */\n      dup1\n        /* \"#utility.yul\":4878:4894   */\n      calldataload\n        /* \"#utility.yul\":4914:4974   */\n      tag_438\n        /* \"#utility.yul\":4930:4973   */\n      tag_418\n        /* \"#utility.yul\":4970:4972   */\n      dup3\n        /* \"#utility.yul\":4930:4973   */\n      tag_378\n      jump\t// in\n        /* \"#utility.yul\":4914:4974   */\n    tag_438:\n        /* \"#utility.yul\":5008:5023   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":5090:5091   */\n      0x05\n        /* \"#utility.yul\":5086:5096   */\n      swap2\n      swap1\n      swap2\n      shl\n        /* \"#utility.yul\":5078:5097   */\n      dup3\n      add\n        /* \"#utility.yul\":5074:5102   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":5039:5051   */\n      dup5\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":5114:5133   */\n      dup10\n      dup4\n      gt\n        /* \"#utility.yul\":5111:5150   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":5146:5147   */\n      0x00\n        /* \"#utility.yul\":5143:5144   */\n      dup1\n        /* \"#utility.yul\":5136:5148   */\n      revert\n        /* \"#utility.yul\":5111:5150   */\n    tag_440:\n        /* \"#utility.yul\":5178:5180   */\n      dup6\n        /* \"#utility.yul\":5174:5176   */\n      dup5\n        /* \"#utility.yul\":5170:5181   */\n      add\n        /* \"#utility.yul\":5190:5473   */\n    tag_441:\n        /* \"#utility.yul\":5206:5212   */\n      dup4\n        /* \"#utility.yul\":5201:5204   */\n      dup2\n        /* \"#utility.yul\":5198:5213   */\n      lt\n        /* \"#utility.yul\":5190:5473   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":5292:5295   */\n      dup1\n        /* \"#utility.yul\":5279:5296   */\n      calldataload\n        /* \"#utility.yul\":5328:5330   */\n      dup7\n        /* \"#utility.yul\":5315:5326   */\n      dup2\n        /* \"#utility.yul\":5312:5331   */\n      gt\n        /* \"#utility.yul\":5309:5348   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":5344:5345   */\n      0x00\n        /* \"#utility.yul\":5341:5342   */\n      dup1\n        /* \"#utility.yul\":5334:5346   */\n      revert\n        /* \"#utility.yul\":5309:5348   */\n    tag_444:\n        /* \"#utility.yul\":5373:5430   */\n      tag_445\n        /* \"#utility.yul\":5422:5429   */\n      dup13\n        /* \"#utility.yul\":5417:5419   */\n      dup10\n        /* \"#utility.yul\":5403:5414   */\n      dup4\n        /* \"#utility.yul\":5399:5401   */\n      dup10\n        /* \"#utility.yul\":5395:5415   */\n      add\n        /* \"#utility.yul\":5391:5420   */\n      add\n        /* \"#utility.yul\":5373:5430   */\n      tag_381\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":5361:5431   */\n      dup5\n      mstore\n      pop\n        /* \"#utility.yul\":5451:5463   */\n      swap2\n      dup7\n      add\n      swap2\n        /* \"#utility.yul\":5223:5235   */\n      dup7\n      add\n        /* \"#utility.yul\":5190:5473   */\n      jump(tag_441)\n    tag_443:\n        /* \"#utility.yul\":5194:5197   */\n      pop\n        /* \"#utility.yul\":5492:5497   */\n      dup1\n        /* \"#utility.yul\":5482:5497   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4214:5503   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5508:5694   */\n    tag_61:\n        /* \"#utility.yul\":5567:5573   */\n      0x00\n        /* \"#utility.yul\":5620:5622   */\n      0x20\n        /* \"#utility.yul\":5608:5617   */\n      dup3\n        /* \"#utility.yul\":5599:5606   */\n      dup5\n        /* \"#utility.yul\":5595:5618   */\n      sub\n        /* \"#utility.yul\":5591:5623   */\n      slt\n        /* \"#utility.yul\":5588:5640   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":5636:5637   */\n      0x00\n        /* \"#utility.yul\":5633:5634   */\n      dup1\n        /* \"#utility.yul\":5626:5638   */\n      revert\n        /* \"#utility.yul\":5588:5640   */\n    tag_447:\n        /* \"#utility.yul\":5659:5688   */\n      tag_300\n        /* \"#utility.yul\":5678:5687   */\n      dup3\n        /* \"#utility.yul\":5659:5688   */\n      tag_376\n      jump\t// in\n        /* \"#utility.yul\":5881:6228   */\n    tag_75:\n        /* \"#utility.yul\":5946:5952   */\n      0x00\n        /* \"#utility.yul\":5954:5960   */\n      dup1\n        /* \"#utility.yul\":6007:6009   */\n      0x40\n        /* \"#utility.yul\":5995:6004   */\n      dup4\n        /* \"#utility.yul\":5986:5993   */\n      dup6\n        /* \"#utility.yul\":5982:6005   */\n      sub\n        /* \"#utility.yul\":5978:6010   */\n      slt\n        /* \"#utility.yul\":5975:6027   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":6023:6024   */\n      0x00\n        /* \"#utility.yul\":6020:6021   */\n      dup1\n        /* \"#utility.yul\":6013:6025   */\n      revert\n        /* \"#utility.yul\":5975:6027   */\n    tag_451:\n        /* \"#utility.yul\":6046:6075   */\n      tag_452\n        /* \"#utility.yul\":6065:6074   */\n      dup4\n        /* \"#utility.yul\":6046:6075   */\n      tag_376\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":6036:6075   */\n      swap2\n      pop\n        /* \"#utility.yul\":6125:6127   */\n      0x20\n        /* \"#utility.yul\":6114:6123   */\n      dup4\n        /* \"#utility.yul\":6110:6128   */\n      add\n        /* \"#utility.yul\":6097:6129   */\n      calldataload\n        /* \"#utility.yul\":6172:6177   */\n      dup1\n        /* \"#utility.yul\":6165:6178   */\n      iszero\n        /* \"#utility.yul\":6158:6179   */\n      iszero\n        /* \"#utility.yul\":6151:6156   */\n      dup2\n        /* \"#utility.yul\":6148:6180   */\n      eq\n        /* \"#utility.yul\":6138:6198   */\n      tag_453\n      jumpi\n        /* \"#utility.yul\":6194:6195   */\n      0x00\n        /* \"#utility.yul\":6191:6192   */\n      dup1\n        /* \"#utility.yul\":6184:6196   */\n      revert\n        /* \"#utility.yul\":6138:6198   */\n    tag_453:\n        /* \"#utility.yul\":6217:6222   */\n      dup1\n        /* \"#utility.yul\":6207:6222   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5881:6228   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6233:6623   */\n    tag_79:\n        /* \"#utility.yul\":6311:6317   */\n      0x00\n        /* \"#utility.yul\":6319:6325   */\n      dup1\n        /* \"#utility.yul\":6372:6374   */\n      0x40\n        /* \"#utility.yul\":6360:6369   */\n      dup4\n        /* \"#utility.yul\":6351:6358   */\n      dup6\n        /* \"#utility.yul\":6347:6370   */\n      sub\n        /* \"#utility.yul\":6343:6375   */\n      slt\n        /* \"#utility.yul\":6340:6392   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":6388:6389   */\n      0x00\n        /* \"#utility.yul\":6385:6386   */\n      dup1\n        /* \"#utility.yul\":6378:6390   */\n      revert\n        /* \"#utility.yul\":6340:6392   */\n    tag_455:\n        /* \"#utility.yul\":6411:6434   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":6485:6487   */\n      0x20\n        /* \"#utility.yul\":6470:6488   */\n      dup4\n      add\n        /* \"#utility.yul\":6457:6489   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":6501:6531   */\n      dup2\n      gt\n        /* \"#utility.yul\":6498:6548   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":6544:6545   */\n      0x00\n        /* \"#utility.yul\":6541:6542   */\n      dup1\n        /* \"#utility.yul\":6534:6546   */\n      revert\n        /* \"#utility.yul\":6498:6548   */\n    tag_456:\n        /* \"#utility.yul\":6567:6617   */\n      tag_457\n        /* \"#utility.yul\":6609:6616   */\n      dup6\n        /* \"#utility.yul\":6600:6606   */\n      dup3\n        /* \"#utility.yul\":6589:6598   */\n      dup7\n        /* \"#utility.yul\":6585:6607   */\n      add\n        /* \"#utility.yul\":6567:6617   */\n      tag_381\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":6557:6617   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6233:6623   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6628:7197   */\n    tag_83:\n        /* \"#utility.yul\":6731:6737   */\n      0x00\n        /* \"#utility.yul\":6739:6745   */\n      dup1\n        /* \"#utility.yul\":6792:6794   */\n      0x40\n        /* \"#utility.yul\":6780:6789   */\n      dup4\n        /* \"#utility.yul\":6771:6778   */\n      dup6\n        /* \"#utility.yul\":6767:6790   */\n      sub\n        /* \"#utility.yul\":6763:6795   */\n      slt\n        /* \"#utility.yul\":6760:6812   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":6808:6809   */\n      0x00\n        /* \"#utility.yul\":6805:6806   */\n      dup1\n        /* \"#utility.yul\":6798:6810   */\n      revert\n        /* \"#utility.yul\":6760:6812   */\n    tag_459:\n        /* \"#utility.yul\":6835:6858   */\n      dup3\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":6907:6921   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6904:6938   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":6934:6935   */\n      0x00\n        /* \"#utility.yul\":6931:6932   */\n      dup1\n        /* \"#utility.yul\":6924:6936   */\n      revert\n        /* \"#utility.yul\":6904:6938   */\n    tag_460:\n        /* \"#utility.yul\":6957:7018   */\n      tag_461\n        /* \"#utility.yul\":7010:7017   */\n      dup7\n        /* \"#utility.yul\":7001:7007   */\n      dup4\n        /* \"#utility.yul\":6990:6999   */\n      dup8\n        /* \"#utility.yul\":6986:7008   */\n      add\n        /* \"#utility.yul\":6957:7018   */\n      tag_379\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":6947:7018   */\n      swap4\n      pop\n        /* \"#utility.yul\":7071:7073   */\n      0x20\n        /* \"#utility.yul\":7060:7069   */\n      dup6\n        /* \"#utility.yul\":7056:7074   */\n      add\n        /* \"#utility.yul\":7043:7075   */\n      calldataload\n        /* \"#utility.yul\":7027:7075   */\n      swap2\n      pop\n        /* \"#utility.yul\":7100:7102   */\n      dup1\n        /* \"#utility.yul\":7090:7098   */\n      dup3\n        /* \"#utility.yul\":7087:7103   */\n      gt\n        /* \"#utility.yul\":7084:7120   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":7116:7117   */\n      0x00\n        /* \"#utility.yul\":7113:7114   */\n      dup1\n        /* \"#utility.yul\":7106:7118   */\n      revert\n        /* \"#utility.yul\":7084:7120   */\n    tag_462:\n      pop\n        /* \"#utility.yul\":7139:7191   */\n      tag_457\n        /* \"#utility.yul\":7183:7190   */\n      dup6\n        /* \"#utility.yul\":7172:7180   */\n      dup3\n        /* \"#utility.yul\":7161:7170   */\n      dup7\n        /* \"#utility.yul\":7157:7181   */\n      add\n        /* \"#utility.yul\":7139:7191   */\n      tag_381\n      jump\t// in\n        /* \"#utility.yul\":7202:7869   */\n    tag_87:\n        /* \"#utility.yul\":7297:7303   */\n      0x00\n        /* \"#utility.yul\":7305:7311   */\n      dup1\n        /* \"#utility.yul\":7313:7319   */\n      0x00\n        /* \"#utility.yul\":7321:7327   */\n      dup1\n        /* \"#utility.yul\":7374:7377   */\n      0x80\n        /* \"#utility.yul\":7362:7371   */\n      dup6\n        /* \"#utility.yul\":7353:7360   */\n      dup8\n        /* \"#utility.yul\":7349:7372   */\n      sub\n        /* \"#utility.yul\":7345:7378   */\n      slt\n        /* \"#utility.yul\":7342:7395   */\n      iszero\n      tag_465\n      jumpi\n        /* \"#utility.yul\":7391:7392   */\n      0x00\n        /* \"#utility.yul\":7388:7389   */\n      dup1\n        /* \"#utility.yul\":7381:7393   */\n      revert\n        /* \"#utility.yul\":7342:7395   */\n    tag_465:\n        /* \"#utility.yul\":7414:7443   */\n      tag_466\n        /* \"#utility.yul\":7433:7442   */\n      dup6\n        /* \"#utility.yul\":7414:7443   */\n      tag_376\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":7404:7443   */\n      swap4\n      pop\n        /* \"#utility.yul\":7462:7500   */\n      tag_467\n        /* \"#utility.yul\":7496:7498   */\n      0x20\n        /* \"#utility.yul\":7485:7494   */\n      dup7\n        /* \"#utility.yul\":7481:7499   */\n      add\n        /* \"#utility.yul\":7462:7500   */\n      tag_376\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":7452:7500   */\n      swap3\n      pop\n        /* \"#utility.yul\":7547:7549   */\n      0x40\n        /* \"#utility.yul\":7532:7550   */\n      dup6\n      add\n        /* \"#utility.yul\":7519:7551   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":7602:7604   */\n      0x60\n        /* \"#utility.yul\":7587:7605   */\n      dup6\n      add\n        /* \"#utility.yul\":7574:7606   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":7618:7648   */\n      dup2\n      gt\n        /* \"#utility.yul\":7615:7665   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":7661:7662   */\n      0x00\n        /* \"#utility.yul\":7658:7659   */\n      dup1\n        /* \"#utility.yul\":7651:7663   */\n      revert\n        /* \"#utility.yul\":7615:7665   */\n    tag_468:\n        /* \"#utility.yul\":7684:7706   */\n      dup6\n      add\n        /* \"#utility.yul\":7737:7741   */\n      0x1f\n        /* \"#utility.yul\":7729:7742   */\n      dup2\n      add\n        /* \"#utility.yul\":7725:7752   */\n      dup8\n      sgt\n        /* \"#utility.yul\":7715:7770   */\n      tag_469\n      jumpi\n        /* \"#utility.yul\":7766:7767   */\n      0x00\n        /* \"#utility.yul\":7763:7764   */\n      dup1\n        /* \"#utility.yul\":7756:7768   */\n      revert\n        /* \"#utility.yul\":7715:7770   */\n    tag_469:\n        /* \"#utility.yul\":7789:7863   */\n      tag_470\n        /* \"#utility.yul\":7855:7862   */\n      dup8\n        /* \"#utility.yul\":7850:7852   */\n      dup3\n        /* \"#utility.yul\":7837:7853   */\n      calldataload\n        /* \"#utility.yul\":7832:7834   */\n      0x20\n        /* \"#utility.yul\":7828:7830   */\n      dup5\n        /* \"#utility.yul\":7824:7835   */\n      add\n        /* \"#utility.yul\":7789:7863   */\n      tag_380\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":7779:7863   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":7202:7869   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7874:8270   */\n    tag_95:\n        /* \"#utility.yul\":7952:7958   */\n      0x00\n        /* \"#utility.yul\":7960:7966   */\n      dup1\n        /* \"#utility.yul\":8013:8015   */\n      0x40\n        /* \"#utility.yul\":8001:8010   */\n      dup4\n        /* \"#utility.yul\":7992:7999   */\n      dup6\n        /* \"#utility.yul\":7988:8011   */\n      sub\n        /* \"#utility.yul\":7984:8016   */\n      slt\n        /* \"#utility.yul\":7981:8033   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":8029:8030   */\n      0x00\n        /* \"#utility.yul\":8026:8027   */\n      dup1\n        /* \"#utility.yul\":8019:8031   */\n      revert\n        /* \"#utility.yul\":7981:8033   */\n    tag_472:\n        /* \"#utility.yul\":8052:8081   */\n      tag_473\n        /* \"#utility.yul\":8071:8080   */\n      dup4\n        /* \"#utility.yul\":8052:8081   */\n      tag_376\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":8042:8081   */\n      swap2\n      pop\n        /* \"#utility.yul\":8132:8134   */\n      0x20\n        /* \"#utility.yul\":8117:8135   */\n      dup4\n      add\n        /* \"#utility.yul\":8104:8136   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":8148:8178   */\n      dup2\n      gt\n        /* \"#utility.yul\":8145:8195   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":8191:8192   */\n      0x00\n        /* \"#utility.yul\":8188:8189   */\n      dup1\n        /* \"#utility.yul\":8181:8193   */\n      revert\n        /* \"#utility.yul\":8275:8535   */\n    tag_99:\n        /* \"#utility.yul\":8343:8349   */\n      0x00\n        /* \"#utility.yul\":8351:8357   */\n      dup1\n        /* \"#utility.yul\":8404:8406   */\n      0x40\n        /* \"#utility.yul\":8392:8401   */\n      dup4\n        /* \"#utility.yul\":8383:8390   */\n      dup6\n        /* \"#utility.yul\":8379:8402   */\n      sub\n        /* \"#utility.yul\":8375:8407   */\n      slt\n        /* \"#utility.yul\":8372:8424   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":8420:8421   */\n      0x00\n        /* \"#utility.yul\":8417:8418   */\n      dup1\n        /* \"#utility.yul\":8410:8422   */\n      revert\n        /* \"#utility.yul\":8372:8424   */\n    tag_477:\n        /* \"#utility.yul\":8443:8472   */\n      tag_478\n        /* \"#utility.yul\":8462:8471   */\n      dup4\n        /* \"#utility.yul\":8443:8472   */\n      tag_376\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":8433:8472   */\n      swap2\n      pop\n        /* \"#utility.yul\":8491:8529   */\n      tag_479\n        /* \"#utility.yul\":8525:8527   */\n      0x20\n        /* \"#utility.yul\":8514:8523   */\n      dup5\n        /* \"#utility.yul\":8510:8528   */\n      add\n        /* \"#utility.yul\":8491:8529   */\n      tag_376\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":8481:8529   */\n      swap1\n      pop\n        /* \"#utility.yul\":8275:8535   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8540:9004   */\n    tag_107:\n        /* \"#utility.yul\":8627:8633   */\n      0x00\n        /* \"#utility.yul\":8635:8641   */\n      dup1\n        /* \"#utility.yul\":8643:8649   */\n      0x00\n        /* \"#utility.yul\":8696:8698   */\n      0x60\n        /* \"#utility.yul\":8684:8693   */\n      dup5\n        /* \"#utility.yul\":8675:8682   */\n      dup7\n        /* \"#utility.yul\":8671:8694   */\n      sub\n        /* \"#utility.yul\":8667:8699   */\n      slt\n        /* \"#utility.yul\":8664:8716   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":8712:8713   */\n      0x00\n        /* \"#utility.yul\":8709:8710   */\n      dup1\n        /* \"#utility.yul\":8702:8714   */\n      revert\n        /* \"#utility.yul\":8664:8716   */\n    tag_481:\n        /* \"#utility.yul\":8735:8764   */\n      tag_482\n        /* \"#utility.yul\":8754:8763   */\n      dup5\n        /* \"#utility.yul\":8735:8764   */\n      tag_376\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":8725:8764   */\n      swap3\n      pop\n        /* \"#utility.yul\":8811:8813   */\n      0x20\n        /* \"#utility.yul\":8796:8814   */\n      dup5\n      add\n        /* \"#utility.yul\":8783:8815   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":8866:8868   */\n      0x40\n        /* \"#utility.yul\":8851:8869   */\n      dup5\n      add\n        /* \"#utility.yul\":8838:8870   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":8882:8912   */\n      dup2\n      gt\n        /* \"#utility.yul\":8879:8929   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":8925:8926   */\n      0x00\n        /* \"#utility.yul\":8922:8923   */\n      dup1\n        /* \"#utility.yul\":8915:8927   */\n      revert\n        /* \"#utility.yul\":8879:8929   */\n    tag_483:\n        /* \"#utility.yul\":8948:8998   */\n      tag_484\n        /* \"#utility.yul\":8990:8997   */\n      dup7\n        /* \"#utility.yul\":8981:8987   */\n      dup3\n        /* \"#utility.yul\":8970:8979   */\n      dup8\n        /* \"#utility.yul\":8966:8988   */\n      add\n        /* \"#utility.yul\":8948:8998   */\n      tag_381\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":8938:8998   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":8540:9004   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":9009:9389   */\n    tag_115:\n        /* \"#utility.yul\":9088:9089   */\n      0x01\n        /* \"#utility.yul\":9084:9096   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":9131:9143   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":9152:9213   */\n      tag_486\n      jumpi\n        /* \"#utility.yul\":9206:9210   */\n      0x7f\n        /* \"#utility.yul\":9198:9204   */\n      dup3\n        /* \"#utility.yul\":9194:9211   */\n      and\n        /* \"#utility.yul\":9184:9211   */\n      swap2\n      pop\n        /* \"#utility.yul\":9152:9213   */\n    tag_486:\n        /* \"#utility.yul\":9259:9261   */\n      0x20\n        /* \"#utility.yul\":9251:9257   */\n      dup3\n        /* \"#utility.yul\":9248:9262   */\n      lt\n        /* \"#utility.yul\":9228:9246   */\n      dup2\n        /* \"#utility.yul\":9225:9263   */\n      sub\n        /* \"#utility.yul\":9222:9383   */\n      tag_487\n      jumpi\n        /* \"#utility.yul\":9305:9315   */\n      0x4e487b71\n        /* \"#utility.yul\":9300:9303   */\n      0xe0\n        /* \"#utility.yul\":9296:9316   */\n      shl\n        /* \"#utility.yul\":9293:9294   */\n      0x00\n        /* \"#utility.yul\":9286:9317   */\n      mstore\n        /* \"#utility.yul\":9340:9344   */\n      0x22\n        /* \"#utility.yul\":9337:9338   */\n      0x04\n        /* \"#utility.yul\":9330:9345   */\n      mstore\n        /* \"#utility.yul\":9368:9372   */\n      0x24\n        /* \"#utility.yul\":9365:9366   */\n      0x00\n        /* \"#utility.yul\":9358:9373   */\n      revert\n        /* \"#utility.yul\":9222:9383   */\n    tag_487:\n      pop\n        /* \"#utility.yul\":9009:9389   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9774:9901   */\n    tag_152:\n        /* \"#utility.yul\":9835:9845   */\n      0x4e487b71\n        /* \"#utility.yul\":9830:9833   */\n      0xe0\n        /* \"#utility.yul\":9826:9846   */\n      shl\n        /* \"#utility.yul\":9823:9824   */\n      0x00\n        /* \"#utility.yul\":9816:9847   */\n      mstore\n        /* \"#utility.yul\":9866:9870   */\n      0x32\n        /* \"#utility.yul\":9863:9864   */\n      0x04\n        /* \"#utility.yul\":9856:9871   */\n      mstore\n        /* \"#utility.yul\":9890:9894   */\n      0x24\n        /* \"#utility.yul\":9887:9888   */\n      0x00\n        /* \"#utility.yul\":9880:9895   */\n      revert\n        /* \"#utility.yul\":9906:10118   */\n    tag_382:\n        /* \"#utility.yul\":9948:9951   */\n      0x00\n        /* \"#utility.yul\":9986:9991   */\n      dup2\n        /* \"#utility.yul\":9980:9992   */\n      mload\n        /* \"#utility.yul\":10030:10036   */\n      dup1\n        /* \"#utility.yul\":10023:10027   */\n      0x20\n        /* \"#utility.yul\":10016:10021   */\n      dup5\n        /* \"#utility.yul\":10012:10028   */\n      add\n        /* \"#utility.yul\":10007:10010   */\n      dup6\n        /* \"#utility.yul\":10001:10037   */\n      mcopy\n        /* \"#utility.yul\":10092:10093   */\n      0x00\n        /* \"#utility.yul\":10056:10072   */\n      swap4\n      add\n        /* \"#utility.yul\":10081:10094   */\n      swap3\n      dup4\n      mstore\n      pop\n        /* \"#utility.yul\":10056:10072   */\n      swap1\n      swap2\n        /* \"#utility.yul\":9906:10118   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10123:10390   */\n    tag_207:\n        /* \"#utility.yul\":10302:10305   */\n      0x00\n        /* \"#utility.yul\":10327:10384   */\n      tag_208\n        /* \"#utility.yul\":10353:10383   */\n      tag_493\n        /* \"#utility.yul\":10379:10382   */\n      dup4\n        /* \"#utility.yul\":10371:10377   */\n      dup7\n        /* \"#utility.yul\":10353:10383   */\n      tag_382\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":10345:10351   */\n      dup5\n        /* \"#utility.yul\":10327:10384   */\n      tag_382\n      jump\t// in\n        /* \"#utility.yul\":10395:10627   */\n    tag_262:\n        /* \"#utility.yul\":10434:10437   */\n      0x00\n        /* \"#utility.yul\":10455:10472   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":10452:10592   */\n      tag_495\n      jumpi\n        /* \"#utility.yul\":10514:10524   */\n      0x4e487b71\n        /* \"#utility.yul\":10509:10512   */\n      0xe0\n        /* \"#utility.yul\":10505:10525   */\n      shl\n        /* \"#utility.yul\":10502:10503   */\n      0x00\n        /* \"#utility.yul\":10495:10526   */\n      mstore\n        /* \"#utility.yul\":10549:10553   */\n      0x11\n        /* \"#utility.yul\":10546:10547   */\n      0x04\n        /* \"#utility.yul\":10539:10554   */\n      mstore\n        /* \"#utility.yul\":10577:10581   */\n      0x24\n        /* \"#utility.yul\":10574:10575   */\n      0x00\n        /* \"#utility.yul\":10567:10582   */\n      revert\n        /* \"#utility.yul\":10452:10592   */\n    tag_495:\n      pop\n        /* \"#utility.yul\":10619:10620   */\n      0x01\n        /* \"#utility.yul\":10608:10621   */\n      add\n      swap1\n        /* \"#utility.yul\":10395:10627   */\n      jump\t// out\n        /* \"#utility.yul\":10758:11276   */\n    tag_384:\n        /* \"#utility.yul\":10860:10862   */\n      0x1f\n        /* \"#utility.yul\":10855:10858   */\n      dup3\n        /* \"#utility.yul\":10852:10863   */\n      gt\n        /* \"#utility.yul\":10849:11270   */\n      iszero\n      tag_140\n      jumpi\n        /* \"#utility.yul\":10896:10901   */\n      dup1\n        /* \"#utility.yul\":10893:10894   */\n      0x00\n        /* \"#utility.yul\":10886:10902   */\n      mstore\n        /* \"#utility.yul\":10940:10944   */\n      0x20\n        /* \"#utility.yul\":10937:10938   */\n      0x00\n        /* \"#utility.yul\":10927:10945   */\n      keccak256\n        /* \"#utility.yul\":11010:11012   */\n      0x1f\n        /* \"#utility.yul\":10998:11008   */\n      dup5\n        /* \"#utility.yul\":10994:11013   */\n      add\n        /* \"#utility.yul\":10991:10992   */\n      0x05\n        /* \"#utility.yul\":10987:11014   */\n      shr\n        /* \"#utility.yul\":10981:10985   */\n      dup2\n        /* \"#utility.yul\":10977:11015   */\n      add\n        /* \"#utility.yul\":11046:11050   */\n      0x20\n        /* \"#utility.yul\":11034:11044   */\n      dup6\n        /* \"#utility.yul\":11031:11051   */\n      lt\n        /* \"#utility.yul\":11028:11075   */\n      iszero\n      tag_499\n      jumpi\n      pop\n        /* \"#utility.yul\":11069:11073   */\n      dup1\n        /* \"#utility.yul\":11028:11075   */\n    tag_499:\n        /* \"#utility.yul\":11124:11126   */\n      0x1f\n        /* \"#utility.yul\":11119:11122   */\n      dup5\n        /* \"#utility.yul\":11115:11127   */\n      add\n        /* \"#utility.yul\":11112:11113   */\n      0x05\n        /* \"#utility.yul\":11108:11128   */\n      shr\n        /* \"#utility.yul\":11102:11106   */\n      dup3\n        /* \"#utility.yul\":11098:11129   */\n      add\n        /* \"#utility.yul\":11088:11129   */\n      swap2\n      pop\n        /* \"#utility.yul\":11179:11260   */\n    tag_500:\n        /* \"#utility.yul\":11197:11199   */\n      dup2\n        /* \"#utility.yul\":11190:11195   */\n      dup2\n        /* \"#utility.yul\":11187:11200   */\n      lt\n        /* \"#utility.yul\":11179:11260   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":11256:11257   */\n      0x00\n        /* \"#utility.yul\":11242:11258   */\n      dup2\n      sstore\n        /* \"#utility.yul\":11223:11224   */\n      0x01\n        /* \"#utility.yul\":11212:11225   */\n      add\n        /* \"#utility.yul\":11179:11260   */\n      jump(tag_500)\n        /* \"#utility.yul\":11452:12797   */\n    tag_273:\n        /* \"#utility.yul\":11572:11582   */\n      dup2\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":11594:11624   */\n      dup2\n      gt\n        /* \"#utility.yul\":11591:11647   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":11627:11645   */\n      tag_506\n      tag_340\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":11656:11753   */\n      tag_507\n        /* \"#utility.yul\":11746:11752   */\n      dup2\n        /* \"#utility.yul\":11706:11744   */\n      tag_508\n        /* \"#utility.yul\":11738:11742   */\n      dup5\n        /* \"#utility.yul\":11732:11743   */\n      sload\n        /* \"#utility.yul\":11706:11744   */\n      tag_115\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":11700:11704   */\n      dup5\n        /* \"#utility.yul\":11656:11753   */\n      tag_384\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":11808:11812   */\n      0x20\n      dup1\n        /* \"#utility.yul\":11865:11867   */\n      0x1f\n        /* \"#utility.yul\":11854:11868   */\n      dup4\n      gt\n        /* \"#utility.yul\":11882:11883   */\n      0x01\n        /* \"#utility.yul\":11877:12540   */\n      dup2\n      eq\n      tag_510\n      jumpi\n        /* \"#utility.yul\":12584:12585   */\n      0x00\n        /* \"#utility.yul\":12601:12607   */\n      dup5\n        /* \"#utility.yul\":12598:12687   */\n      iszero\n      tag_511\n      jumpi\n      pop\n        /* \"#utility.yul\":12653:12672   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":12647:12673   */\n      mload\n        /* \"#utility.yul\":12598:12687   */\n    tag_511:\n      not(0x00)\n        /* \"#utility.yul\":11409:11410   */\n      0x03\n        /* \"#utility.yul\":11405:11416   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":11401:11425   */\n      shr\n        /* \"#utility.yul\":11397:11426   */\n      not\n        /* \"#utility.yul\":11387:11427   */\n      and\n        /* \"#utility.yul\":11433:11434   */\n      0x01\n        /* \"#utility.yul\":11429:11440   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":11384:11441   */\n      or\n        /* \"#utility.yul\":12700:12781   */\n      dup6\n      sstore\n        /* \"#utility.yul\":11847:12791   */\n      jump(tag_509)\n        /* \"#utility.yul\":11877:12540   */\n    tag_510:\n        /* \"#utility.yul\":10705:10706   */\n      0x00\n        /* \"#utility.yul\":10698:10712   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":10742:10746   */\n      0x20\n        /* \"#utility.yul\":10729:10747   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":11913:11933   */\n      dup7\n      and\n      swap2\n        /* \"#utility.yul\":12031:12267   */\n    tag_514:\n        /* \"#utility.yul\":12045:12052   */\n      dup3\n        /* \"#utility.yul\":12042:12043   */\n      dup2\n        /* \"#utility.yul\":12039:12053   */\n      lt\n        /* \"#utility.yul\":12031:12267   */\n      iszero\n      tag_516\n      jumpi\n        /* \"#utility.yul\":12134:12153   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":12128:12154   */\n      mload\n        /* \"#utility.yul\":12113:12155   */\n      dup3\n      sstore\n        /* \"#utility.yul\":12226:12253   */\n      swap5\n      dup5\n      add\n      swap5\n        /* \"#utility.yul\":12194:12195   */\n      0x01\n        /* \"#utility.yul\":12182:12196   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":12061:12080   */\n      dup5\n      add\n        /* \"#utility.yul\":12031:12267   */\n      jump(tag_514)\n    tag_516:\n        /* \"#utility.yul\":12035:12038   */\n      pop\n        /* \"#utility.yul\":12295:12301   */\n      dup6\n        /* \"#utility.yul\":12286:12293   */\n      dup3\n        /* \"#utility.yul\":12283:12302   */\n      lt\n        /* \"#utility.yul\":12280:12481   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":12356:12375   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":12350:12376   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":12439:12440   */\n      0x03\n        /* \"#utility.yul\":12435:12449   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":12451:12454   */\n      0xf8\n        /* \"#utility.yul\":12431:12455   */\n      and\n        /* \"#utility.yul\":12427:12464   */\n      shr\n        /* \"#utility.yul\":12423:12465   */\n      not\n        /* \"#utility.yul\":12408:12466   */\n      and\n        /* \"#utility.yul\":12393:12467   */\n      dup2\n      sstore\n        /* \"#utility.yul\":12280:12481   */\n    tag_517:\n      pop\n      pop\n        /* \"#utility.yul\":12527:12528   */\n      0x01\n        /* \"#utility.yul\":12518:12524   */\n      dup5\n        /* \"#utility.yul\":12515:12516   */\n      0x01\n        /* \"#utility.yul\":12511:12525   */\n      shl\n        /* \"#utility.yul\":12507:12529   */\n      add\n        /* \"#utility.yul\":12501:12505   */\n      dup6\n        /* \"#utility.yul\":12494:12530   */\n      sstore\n        /* \"#utility.yul\":11847:12791   */\n    tag_509:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":11452:12797   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12802:13302   */\n    tag_279:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13071:13086   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":13053:13087   */\n      dup3\n      mstore\n        /* \"#utility.yul\":13123:13138   */\n      dup5\n      and\n        /* \"#utility.yul\":13118:13120   */\n      0x20\n        /* \"#utility.yul\":13103:13121   */\n      dup3\n      add\n        /* \"#utility.yul\":13096:13139   */\n      mstore\n        /* \"#utility.yul\":13170:13172   */\n      0x40\n        /* \"#utility.yul\":13155:13173   */\n      dup2\n      add\n        /* \"#utility.yul\":13148:13182   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":13218:13221   */\n      0x80\n        /* \"#utility.yul\":13213:13215   */\n      0x60\n        /* \"#utility.yul\":13198:13216   */\n      dup3\n      add\n        /* \"#utility.yul\":13191:13222   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12996:13000   */\n      0x00\n      swap1\n        /* \"#utility.yul\":13239:13296   */\n      tag_519\n      swap1\n        /* \"#utility.yul\":13276:13295   */\n      dup4\n      add\n        /* \"#utility.yul\":13268:13274   */\n      dup5\n        /* \"#utility.yul\":13239:13296   */\n      tag_375\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":13231:13296   */\n      swap7\n        /* \"#utility.yul\":12802:13302   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13307:13556   */\n    tag_282:\n        /* \"#utility.yul\":13376:13382   */\n      0x00\n        /* \"#utility.yul\":13429:13431   */\n      0x20\n        /* \"#utility.yul\":13417:13426   */\n      dup3\n        /* \"#utility.yul\":13408:13415   */\n      dup5\n        /* \"#utility.yul\":13404:13427   */\n      sub\n        /* \"#utility.yul\":13400:13432   */\n      slt\n        /* \"#utility.yul\":13397:13449   */\n      iszero\n      tag_521\n      jumpi\n        /* \"#utility.yul\":13445:13446   */\n      0x00\n        /* \"#utility.yul\":13442:13443   */\n      dup1\n        /* \"#utility.yul\":13435:13447   */\n      revert\n        /* \"#utility.yul\":13397:13449   */\n    tag_521:\n        /* \"#utility.yul\":13477:13486   */\n      dup2\n        /* \"#utility.yul\":13471:13487   */\n      mload\n        /* \"#utility.yul\":13496:13526   */\n      tag_300\n        /* \"#utility.yul\":13520:13525   */\n      dup2\n        /* \"#utility.yul\":13496:13526   */\n      tag_374\n      jump\t// in\n    stop\n    data_f4db1d2d8c78bb068fedc1ff59e5527a703b6f0e58a740d5ac3015d7a2341d3d 34c73884fbbb790762253ae313e57da96c00670344647f0cb8d41ee92b9f1971\n\n    auxdata: 0xa264697066735822122067d34c6e7e5b7cfb7b4b7041f269d920a29b96d5434814400ddb38770c496a2264736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3125": {
									"entryPoint": null,
									"id": 3125,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_386": {
									"entryPoint": null,
									"id": 386,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 143,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 560,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 224,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4361:17",
										"nodeType": "YulBlock",
										"src": "0:4361:17",
										"statements": [
											{
												"nativeSrc": "6:3:17",
												"nodeType": "YulBlock",
												"src": "6:3:17",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:17",
													"nodeType": "YulBlock",
													"src": "46:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:17",
																		"nodeType": "YulLiteral",
																		"src": "63:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:17",
																				"nodeType": "YulLiteral",
																				"src": "70:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:17",
																				"nodeType": "YulLiteral",
																				"src": "75:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:17"
																		},
																		"nativeSrc": "66:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:17"
																},
																"nativeSrc": "56:31:17",
																"nodeType": "YulFunctionCall",
																"src": "56:31:17"
															},
															"nativeSrc": "56:31:17",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:17",
																		"nodeType": "YulLiteral",
																		"src": "103:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:17",
																		"nodeType": "YulLiteral",
																		"src": "106:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:17"
																},
																"nativeSrc": "96:15:17",
																"nodeType": "YulFunctionCall",
																"src": "96:15:17"
															},
															"nativeSrc": "96:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:17",
																		"nodeType": "YulLiteral",
																		"src": "127:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:17",
																		"nodeType": "YulLiteral",
																		"src": "130:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:17"
																},
																"nativeSrc": "120:15:17",
																"nodeType": "YulFunctionCall",
																"src": "120:15:17"
															},
															"nativeSrc": "120:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:17",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:17"
											},
											{
												"body": {
													"nativeSrc": "210:652:17",
													"nodeType": "YulBlock",
													"src": "210:652:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:17",
																"nodeType": "YulBlock",
																"src": "259:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:17",
																					"nodeType": "YulLiteral",
																					"src": "268:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:17",
																					"nodeType": "YulLiteral",
																					"src": "271:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:17"
																			},
																			"nativeSrc": "261:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:17"
																		},
																		"nativeSrc": "261:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:17",
																						"nodeType": "YulLiteral",
																						"src": "246:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:17"
																				},
																				"nativeSrc": "234:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:17"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:17"
																		},
																		"nativeSrc": "230:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:17"
																},
																"nativeSrc": "223:35:17",
																"nodeType": "YulFunctionCall",
																"src": "223:35:17"
															},
															"nativeSrc": "220:55:17",
															"nodeType": "YulIf",
															"src": "220:55:17"
														},
														{
															"nativeSrc": "284:23:17",
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "300:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "294:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:17"
																},
																"nativeSrc": "294:13:17",
																"nodeType": "YulFunctionCall",
																"src": "294:13:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "288:2:17",
																	"nodeType": "YulTypedName",
																	"src": "288:2:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "316:28:17",
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "334:2:17",
																				"nodeType": "YulLiteral",
																				"src": "334:2:17",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "338:1:17",
																				"nodeType": "YulLiteral",
																				"src": "338:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "330:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:17"
																		},
																		"nativeSrc": "330:10:17",
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "342:1:17",
																		"nodeType": "YulLiteral",
																		"src": "342:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "326:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:17"
																},
																"nativeSrc": "326:18:17",
																"nodeType": "YulFunctionCall",
																"src": "326:18:17"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "320:2:17",
																	"nodeType": "YulTypedName",
																	"src": "320:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "367:22:17",
																"nodeType": "YulBlock",
																"src": "367:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "369:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:17"
																			},
																			"nativeSrc": "369:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:17"
																		},
																		"nativeSrc": "369:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "359:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:17"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "363:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "356:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:17"
																},
																"nativeSrc": "356:10:17",
																"nodeType": "YulFunctionCall",
																"src": "356:10:17"
															},
															"nativeSrc": "353:36:17",
															"nodeType": "YulIf",
															"src": "353:36:17"
														},
														{
															"nativeSrc": "398:17:17",
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "412:2:17",
																		"nodeType": "YulLiteral",
																		"src": "412:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "408:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:17"
																},
																"nativeSrc": "408:7:17",
																"nodeType": "YulFunctionCall",
																"src": "408:7:17"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "402:2:17",
																	"nodeType": "YulTypedName",
																	"src": "402:2:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "424:23:17",
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "444:2:17",
																		"nodeType": "YulLiteral",
																		"src": "444:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "438:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:17"
																},
																"nativeSrc": "438:9:17",
																"nodeType": "YulFunctionCall",
																"src": "438:9:17"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "428:6:17",
																	"nodeType": "YulTypedName",
																	"src": "428:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "456:71:17",
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "478:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nativeSrc": "502:2:17",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:17"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "506:4:17",
																										"nodeType": "YulLiteral",
																										"src": "506:4:17",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "498:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:17"
																								},
																								"nativeSrc": "498:13:17",
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:17"
																							},
																							{
																								"name": "_3",
																								"nativeSrc": "513:2:17",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:17"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "494:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:17"
																						},
																						"nativeSrc": "494:22:17",
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "518:2:17",
																						"nodeType": "YulLiteral",
																						"src": "518:2:17",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "490:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:17"
																				},
																				"nativeSrc": "490:31:17",
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:17"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "523:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "486:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:17"
																		},
																		"nativeSrc": "486:40:17",
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "474:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:17"
																},
																"nativeSrc": "474:53:17",
																"nodeType": "YulFunctionCall",
																"src": "474:53:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "460:10:17",
																	"nodeType": "YulTypedName",
																	"src": "460:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "586:22:17",
																"nodeType": "YulBlock",
																"src": "586:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "588:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:17"
																			},
																			"nativeSrc": "588:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:17"
																		},
																		"nativeSrc": "588:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "545:10:17",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:17"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "557:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:17"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "542:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:17"
																		},
																		"nativeSrc": "542:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "565:10:17",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "577:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "562:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:17"
																		},
																		"nativeSrc": "562:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "539:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:17"
																},
																"nativeSrc": "539:46:17",
																"nodeType": "YulFunctionCall",
																"src": "539:46:17"
															},
															"nativeSrc": "536:72:17",
															"nodeType": "YulIf",
															"src": "536:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "624:2:17",
																		"nodeType": "YulLiteral",
																		"src": "624:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "628:10:17",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "617:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:17"
																},
																"nativeSrc": "617:22:17",
																"nodeType": "YulFunctionCall",
																"src": "617:22:17"
															},
															"nativeSrc": "617:22:17",
															"nodeType": "YulExpressionStatement",
															"src": "617:22:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "655:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:17"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "663:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "648:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:17"
																},
																"nativeSrc": "648:18:17",
																"nodeType": "YulFunctionCall",
																"src": "648:18:17"
															},
															"nativeSrc": "648:18:17",
															"nodeType": "YulExpressionStatement",
															"src": "648:18:17"
														},
														{
															"body": {
																"nativeSrc": "714:16:17",
																"nodeType": "YulBlock",
																"src": "714:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "723:1:17",
																					"nodeType": "YulLiteral",
																					"src": "723:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "726:1:17",
																					"nodeType": "YulLiteral",
																					"src": "726:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "716:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "716:6:17"
																			},
																			"nativeSrc": "716:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "716:12:17"
																		},
																		"nativeSrc": "716:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "716:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "689:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "689:6:17"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "697:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "697:2:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "685:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "685:3:17"
																				},
																				"nativeSrc": "685:15:17",
																				"nodeType": "YulFunctionCall",
																				"src": "685:15:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "702:4:17",
																				"nodeType": "YulLiteral",
																				"src": "702:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "681:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "681:3:17"
																		},
																		"nativeSrc": "681:26:17",
																		"nodeType": "YulFunctionCall",
																		"src": "681:26:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "709:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "709:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "678:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "678:2:17"
																},
																"nativeSrc": "678:35:17",
																"nodeType": "YulFunctionCall",
																"src": "678:35:17"
															},
															"nativeSrc": "675:55:17",
															"nodeType": "YulIf",
															"src": "675:55:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "749:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "749:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "757:4:17",
																				"nodeType": "YulLiteral",
																				"src": "757:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "745:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "745:3:17"
																		},
																		"nativeSrc": "745:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "745:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "768:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "768:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "776:4:17",
																				"nodeType": "YulLiteral",
																				"src": "776:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "764:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "764:3:17"
																		},
																		"nativeSrc": "764:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "764:17:17"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "783:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "783:2:17"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "739:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "739:5:17"
																},
																"nativeSrc": "739:47:17",
																"nodeType": "YulFunctionCall",
																"src": "739:47:17"
															},
															"nativeSrc": "739:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "739:47:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "810:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "810:6:17"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "818:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "818:2:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "806:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "806:3:17"
																				},
																				"nativeSrc": "806:15:17",
																				"nodeType": "YulFunctionCall",
																				"src": "806:15:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "823:4:17",
																				"nodeType": "YulLiteral",
																				"src": "823:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "802:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "802:3:17"
																		},
																		"nativeSrc": "802:26:17",
																		"nodeType": "YulFunctionCall",
																		"src": "802:26:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:17",
																		"nodeType": "YulLiteral",
																		"src": "830:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "795:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "795:6:17"
																},
																"nativeSrc": "795:37:17",
																"nodeType": "YulFunctionCall",
																"src": "795:37:17"
															},
															"nativeSrc": "795:37:17",
															"nodeType": "YulExpressionStatement",
															"src": "795:37:17"
														},
														{
															"nativeSrc": "841:15:17",
															"nodeType": "YulAssignment",
															"src": "841:15:17",
															"value": {
																"name": "memPtr",
																"nativeSrc": "850:6:17",
																"nodeType": "YulIdentifier",
																"src": "850:6:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "841:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "841:5:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:716:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:17",
														"nodeType": "YulTypedName",
														"src": "184:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:17",
														"nodeType": "YulTypedName",
														"src": "192:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:17",
														"nodeType": "YulTypedName",
														"src": "200:5:17",
														"type": ""
													}
												],
												"src": "146:716:17"
											},
											{
												"body": {
													"nativeSrc": "1002:594:17",
													"nodeType": "YulBlock",
													"src": "1002:594:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "1048:16:17",
																"nodeType": "YulBlock",
																"src": "1048:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1057:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1057:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1060:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1060:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1050:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1050:6:17"
																			},
																			"nativeSrc": "1050:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1050:12:17"
																		},
																		"nativeSrc": "1050:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "1050:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1023:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "1023:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1032:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1032:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1019:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1019:3:17"
																		},
																		"nativeSrc": "1019:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1019:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1044:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1044:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1015:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1015:3:17"
																},
																"nativeSrc": "1015:32:17",
																"nodeType": "YulFunctionCall",
																"src": "1015:32:17"
															},
															"nativeSrc": "1012:52:17",
															"nodeType": "YulIf",
															"src": "1012:52:17"
														},
														{
															"nativeSrc": "1073:29:17",
															"nodeType": "YulVariableDeclaration",
															"src": "1073:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1092:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1092:9:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1086:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "1086:5:17"
																},
																"nativeSrc": "1086:16:17",
																"nodeType": "YulFunctionCall",
																"src": "1086:16:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1077:5:17",
																	"nodeType": "YulTypedName",
																	"src": "1077:5:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1165:16:17",
																"nodeType": "YulBlock",
																"src": "1165:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1174:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1174:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1177:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1177:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1167:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1167:6:17"
																			},
																			"nativeSrc": "1167:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1167:12:17"
																		},
																		"nativeSrc": "1167:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "1167:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1124:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "1124:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1135:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "1135:5:17"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1150:3:17",
																										"nodeType": "YulLiteral",
																										"src": "1150:3:17",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1155:1:17",
																										"nodeType": "YulLiteral",
																										"src": "1155:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1146:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "1146:3:17"
																								},
																								"nativeSrc": "1146:11:17",
																								"nodeType": "YulFunctionCall",
																								"src": "1146:11:17"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1159:1:17",
																								"nodeType": "YulLiteral",
																								"src": "1159:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1142:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "1142:3:17"
																						},
																						"nativeSrc": "1142:19:17",
																						"nodeType": "YulFunctionCall",
																						"src": "1142:19:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1131:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "1131:3:17"
																				},
																				"nativeSrc": "1131:31:17",
																				"nodeType": "YulFunctionCall",
																				"src": "1131:31:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1121:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "1121:2:17"
																		},
																		"nativeSrc": "1121:42:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1121:42:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1114:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1114:6:17"
																},
																"nativeSrc": "1114:50:17",
																"nodeType": "YulFunctionCall",
																"src": "1114:50:17"
															},
															"nativeSrc": "1111:70:17",
															"nodeType": "YulIf",
															"src": "1111:70:17"
														},
														{
															"nativeSrc": "1190:15:17",
															"nodeType": "YulAssignment",
															"src": "1190:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "1200:5:17",
																"nodeType": "YulIdentifier",
																"src": "1200:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1190:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1190:6:17"
																}
															]
														},
														{
															"nativeSrc": "1214:39:17",
															"nodeType": "YulVariableDeclaration",
															"src": "1214:39:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1238:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1238:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1249:2:17",
																				"nodeType": "YulLiteral",
																				"src": "1249:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1234:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1234:3:17"
																		},
																		"nativeSrc": "1234:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1234:18:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1228:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "1228:5:17"
																},
																"nativeSrc": "1228:25:17",
																"nodeType": "YulFunctionCall",
																"src": "1228:25:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1218:6:17",
																	"nodeType": "YulTypedName",
																	"src": "1218:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1262:28:17",
															"nodeType": "YulVariableDeclaration",
															"src": "1262:28:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1280:2:17",
																				"nodeType": "YulLiteral",
																				"src": "1280:2:17",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1284:1:17",
																				"nodeType": "YulLiteral",
																				"src": "1284:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1276:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1276:3:17"
																		},
																		"nativeSrc": "1276:10:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1276:10:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:17",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1272:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:17"
																},
																"nativeSrc": "1272:18:17",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1266:2:17",
																	"nodeType": "YulTypedName",
																	"src": "1266:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1317:16:17",
																"nodeType": "YulBlock",
																"src": "1317:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1326:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1326:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1329:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1329:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1319:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1319:6:17"
																			},
																			"nativeSrc": "1319:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1319:12:17"
																		},
																		"nativeSrc": "1319:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "1319:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1305:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1305:6:17"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1313:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "1313:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1302:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "1302:2:17"
																},
																"nativeSrc": "1302:14:17",
																"nodeType": "YulFunctionCall",
																"src": "1302:14:17"
															},
															"nativeSrc": "1299:34:17",
															"nodeType": "YulIf",
															"src": "1299:34:17"
														},
														{
															"nativeSrc": "1342:71:17",
															"nodeType": "YulAssignment",
															"src": "1342:71:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1385:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1385:9:17"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1396:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1396:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1381:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1381:3:17"
																		},
																		"nativeSrc": "1381:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1381:22:17"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1405:7:17",
																		"nodeType": "YulIdentifier",
																		"src": "1405:7:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1352:28:17",
																	"nodeType": "YulIdentifier",
																	"src": "1352:28:17"
																},
																"nativeSrc": "1352:61:17",
																"nodeType": "YulFunctionCall",
																"src": "1352:61:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1342:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:17"
																}
															]
														},
														{
															"nativeSrc": "1422:41:17",
															"nodeType": "YulVariableDeclaration",
															"src": "1422:41:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1448:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1448:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1459:2:17",
																				"nodeType": "YulLiteral",
																				"src": "1459:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1444:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1444:3:17"
																		},
																		"nativeSrc": "1444:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1444:18:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1438:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "1438:5:17"
																},
																"nativeSrc": "1438:25:17",
																"nodeType": "YulFunctionCall",
																"src": "1438:25:17"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1426:8:17",
																	"nodeType": "YulTypedName",
																	"src": "1426:8:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1492:16:17",
																"nodeType": "YulBlock",
																"src": "1492:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1501:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1501:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1504:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1504:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1494:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1494:6:17"
																			},
																			"nativeSrc": "1494:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1494:12:17"
																		},
																		"nativeSrc": "1494:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "1494:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1478:8:17",
																		"nodeType": "YulIdentifier",
																		"src": "1478:8:17"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1488:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "1488:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1475:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "1475:2:17"
																},
																"nativeSrc": "1475:16:17",
																"nodeType": "YulFunctionCall",
																"src": "1475:16:17"
															},
															"nativeSrc": "1472:36:17",
															"nodeType": "YulIf",
															"src": "1472:36:17"
														},
														{
															"nativeSrc": "1517:73:17",
															"nodeType": "YulAssignment",
															"src": "1517:73:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1560:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1560:9:17"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1571:8:17",
																				"nodeType": "YulIdentifier",
																				"src": "1571:8:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1556:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1556:3:17"
																		},
																		"nativeSrc": "1556:24:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1556:24:17"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1582:7:17",
																		"nodeType": "YulIdentifier",
																		"src": "1582:7:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1527:28:17",
																	"nodeType": "YulIdentifier",
																	"src": "1527:28:17"
																},
																"nativeSrc": "1527:63:17",
																"nodeType": "YulFunctionCall",
																"src": "1527:63:17"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1517:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1517:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "867:729:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "952:9:17",
														"nodeType": "YulTypedName",
														"src": "952:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "963:7:17",
														"nodeType": "YulTypedName",
														"src": "963:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "975:6:17",
														"nodeType": "YulTypedName",
														"src": "975:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "983:6:17",
														"nodeType": "YulTypedName",
														"src": "983:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "991:6:17",
														"nodeType": "YulTypedName",
														"src": "991:6:17",
														"type": ""
													}
												],
												"src": "867:729:17"
											},
											{
												"body": {
													"nativeSrc": "1656:325:17",
													"nodeType": "YulBlock",
													"src": "1656:325:17",
													"statements": [
														{
															"nativeSrc": "1666:22:17",
															"nodeType": "YulAssignment",
															"src": "1666:22:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1680:1:17",
																		"nodeType": "YulLiteral",
																		"src": "1680:1:17",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1683:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "1683:4:17"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1676:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1676:3:17"
																},
																"nativeSrc": "1676:12:17",
																"nodeType": "YulFunctionCall",
																"src": "1676:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1666:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1666:6:17"
																}
															]
														},
														{
															"nativeSrc": "1697:38:17",
															"nodeType": "YulVariableDeclaration",
															"src": "1697:38:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1727:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "1727:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1733:1:17",
																		"nodeType": "YulLiteral",
																		"src": "1733:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1723:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1723:3:17"
																},
																"nativeSrc": "1723:12:17",
																"nodeType": "YulFunctionCall",
																"src": "1723:12:17"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1701:18:17",
																	"nodeType": "YulTypedName",
																	"src": "1701:18:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1774:31:17",
																"nodeType": "YulBlock",
																"src": "1774:31:17",
																"statements": [
																	{
																		"nativeSrc": "1776:27:17",
																		"nodeType": "YulAssignment",
																		"src": "1776:27:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1790:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "1790:6:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1798:4:17",
																					"nodeType": "YulLiteral",
																					"src": "1798:4:17",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1786:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "1786:3:17"
																			},
																			"nativeSrc": "1786:17:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1786:17:17"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1776:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1776:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1754:18:17",
																		"nodeType": "YulIdentifier",
																		"src": "1754:18:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1747:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1747:6:17"
																},
																"nativeSrc": "1747:26:17",
																"nodeType": "YulFunctionCall",
																"src": "1747:26:17"
															},
															"nativeSrc": "1744:61:17",
															"nodeType": "YulIf",
															"src": "1744:61:17"
														},
														{
															"body": {
																"nativeSrc": "1864:111:17",
																"nodeType": "YulBlock",
																"src": "1864:111:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1885:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1885:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1892:3:17",
																							"nodeType": "YulLiteral",
																							"src": "1892:3:17",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1897:10:17",
																							"nodeType": "YulLiteral",
																							"src": "1897:10:17",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1888:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "1888:3:17"
																					},
																					"nativeSrc": "1888:20:17",
																					"nodeType": "YulFunctionCall",
																					"src": "1888:20:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1878:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1878:6:17"
																			},
																			"nativeSrc": "1878:31:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1878:31:17"
																		},
																		"nativeSrc": "1878:31:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "1878:31:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1929:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1929:1:17",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1932:4:17",
																					"nodeType": "YulLiteral",
																					"src": "1932:4:17",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1922:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1922:6:17"
																			},
																			"nativeSrc": "1922:15:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1922:15:17"
																		},
																		"nativeSrc": "1922:15:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "1922:15:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1957:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1957:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1960:4:17",
																					"nodeType": "YulLiteral",
																					"src": "1960:4:17",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1950:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1950:6:17"
																			},
																			"nativeSrc": "1950:15:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1950:15:17"
																		},
																		"nativeSrc": "1950:15:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "1950:15:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1820:18:17",
																		"nodeType": "YulIdentifier",
																		"src": "1820:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1843:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1843:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1851:2:17",
																				"nodeType": "YulLiteral",
																				"src": "1851:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1840:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "1840:2:17"
																		},
																		"nativeSrc": "1840:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1840:14:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1817:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "1817:2:17"
																},
																"nativeSrc": "1817:38:17",
																"nodeType": "YulFunctionCall",
																"src": "1817:38:17"
															},
															"nativeSrc": "1814:161:17",
															"nodeType": "YulIf",
															"src": "1814:161:17"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1601:380:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1636:4:17",
														"nodeType": "YulTypedName",
														"src": "1636:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1645:6:17",
														"nodeType": "YulTypedName",
														"src": "1645:6:17",
														"type": ""
													}
												],
												"src": "1601:380:17"
											},
											{
												"body": {
													"nativeSrc": "2042:65:17",
													"nodeType": "YulBlock",
													"src": "2042:65:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2059:1:17",
																		"nodeType": "YulLiteral",
																		"src": "2059:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2062:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "2062:3:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2052:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2052:6:17"
																},
																"nativeSrc": "2052:14:17",
																"nodeType": "YulFunctionCall",
																"src": "2052:14:17"
															},
															"nativeSrc": "2052:14:17",
															"nodeType": "YulExpressionStatement",
															"src": "2052:14:17"
														},
														{
															"nativeSrc": "2075:26:17",
															"nodeType": "YulAssignment",
															"src": "2075:26:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2093:1:17",
																		"nodeType": "YulLiteral",
																		"src": "2093:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2096:4:17",
																		"nodeType": "YulLiteral",
																		"src": "2096:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2083:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "2083:9:17"
																},
																"nativeSrc": "2083:18:17",
																"nodeType": "YulFunctionCall",
																"src": "2083:18:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2075:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "2075:4:17"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1986:121:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2025:3:17",
														"nodeType": "YulTypedName",
														"src": "2025:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2033:4:17",
														"nodeType": "YulTypedName",
														"src": "2033:4:17",
														"type": ""
													}
												],
												"src": "1986:121:17"
											},
											{
												"body": {
													"nativeSrc": "2193:437:17",
													"nodeType": "YulBlock",
													"src": "2193:437:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "2226:398:17",
																"nodeType": "YulBlock",
																"src": "2226:398:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2247:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2247:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2250:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "2250:5:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2240:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2240:6:17"
																			},
																			"nativeSrc": "2240:16:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2240:16:17"
																		},
																		"nativeSrc": "2240:16:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2240:16:17"
																	},
																	{
																		"nativeSrc": "2269:30:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2269:30:17",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2291:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2291:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2294:4:17",
																					"nodeType": "YulLiteral",
																					"src": "2294:4:17",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2281:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2281:9:17"
																			},
																			"nativeSrc": "2281:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2281:18:17"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2273:4:17",
																				"nodeType": "YulTypedName",
																				"src": "2273:4:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2312:57:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2312:57:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2335:4:17",
																					"nodeType": "YulIdentifier",
																					"src": "2335:4:17"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2345:1:17",
																							"nodeType": "YulLiteral",
																							"src": "2345:1:17",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2352:10:17",
																									"nodeType": "YulIdentifier",
																									"src": "2352:10:17"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2364:2:17",
																									"nodeType": "YulLiteral",
																									"src": "2364:2:17",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2348:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "2348:3:17"
																							},
																							"nativeSrc": "2348:19:17",
																							"nodeType": "YulFunctionCall",
																							"src": "2348:19:17"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2341:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "2341:3:17"
																					},
																					"nativeSrc": "2341:27:17",
																					"nodeType": "YulFunctionCall",
																					"src": "2341:27:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2331:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "2331:3:17"
																			},
																			"nativeSrc": "2331:38:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2331:38:17"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2316:11:17",
																				"nodeType": "YulTypedName",
																				"src": "2316:11:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2406:23:17",
																			"nodeType": "YulBlock",
																			"src": "2406:23:17",
																			"statements": [
																				{
																					"nativeSrc": "2408:19:17",
																					"nodeType": "YulAssignment",
																					"src": "2408:19:17",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2423:4:17",
																						"nodeType": "YulIdentifier",
																						"src": "2423:4:17"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2408:11:17",
																							"nodeType": "YulIdentifier",
																							"src": "2408:11:17"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2388:10:17",
																					"nodeType": "YulIdentifier",
																					"src": "2388:10:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2400:4:17",
																					"nodeType": "YulLiteral",
																					"src": "2400:4:17",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2385:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "2385:2:17"
																			},
																			"nativeSrc": "2385:20:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2385:20:17"
																		},
																		"nativeSrc": "2382:47:17",
																		"nodeType": "YulIf",
																		"src": "2382:47:17"
																	},
																	{
																		"nativeSrc": "2442:41:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2442:41:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2456:4:17",
																					"nodeType": "YulIdentifier",
																					"src": "2456:4:17"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2466:1:17",
																							"nodeType": "YulLiteral",
																							"src": "2466:1:17",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2473:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "2473:3:17"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2478:2:17",
																									"nodeType": "YulLiteral",
																									"src": "2478:2:17",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2469:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "2469:3:17"
																							},
																							"nativeSrc": "2469:12:17",
																							"nodeType": "YulFunctionCall",
																							"src": "2469:12:17"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2462:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "2462:3:17"
																					},
																					"nativeSrc": "2462:20:17",
																					"nodeType": "YulFunctionCall",
																					"src": "2462:20:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2452:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "2452:3:17"
																			},
																			"nativeSrc": "2452:31:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2452:31:17"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2446:2:17",
																				"nodeType": "YulTypedName",
																				"src": "2446:2:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2496:24:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2496:24:17",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2509:11:17",
																			"nodeType": "YulIdentifier",
																			"src": "2509:11:17"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2500:5:17",
																				"nodeType": "YulTypedName",
																				"src": "2500:5:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2594:20:17",
																			"nodeType": "YulBlock",
																			"src": "2594:20:17",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2603:5:17",
																								"nodeType": "YulIdentifier",
																								"src": "2603:5:17"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2610:1:17",
																								"nodeType": "YulLiteral",
																								"src": "2610:1:17",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2596:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "2596:6:17"
																						},
																						"nativeSrc": "2596:16:17",
																						"nodeType": "YulFunctionCall",
																						"src": "2596:16:17"
																					},
																					"nativeSrc": "2596:16:17",
																					"nodeType": "YulExpressionStatement",
																					"src": "2596:16:17"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2544:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "2544:5:17"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2551:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "2551:2:17"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2541:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "2541:2:17"
																			},
																			"nativeSrc": "2541:13:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2541:13:17"
																		},
																		"nativeSrc": "2533:81:17",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2555:26:17",
																			"nodeType": "YulBlock",
																			"src": "2555:26:17",
																			"statements": [
																				{
																					"nativeSrc": "2557:22:17",
																					"nodeType": "YulAssignment",
																					"src": "2557:22:17",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2570:5:17",
																								"nodeType": "YulIdentifier",
																								"src": "2570:5:17"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2577:1:17",
																								"nodeType": "YulLiteral",
																								"src": "2577:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2566:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "2566:3:17"
																						},
																						"nativeSrc": "2566:13:17",
																						"nodeType": "YulFunctionCall",
																						"src": "2566:13:17"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2557:5:17",
																							"nodeType": "YulIdentifier",
																							"src": "2557:5:17"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2537:3:17",
																			"nodeType": "YulBlock",
																			"src": "2537:3:17",
																			"statements": []
																		},
																		"src": "2533:81:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2209:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "2209:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2214:2:17",
																		"nodeType": "YulLiteral",
																		"src": "2214:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2206:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "2206:2:17"
																},
																"nativeSrc": "2206:11:17",
																"nodeType": "YulFunctionCall",
																"src": "2206:11:17"
															},
															"nativeSrc": "2203:421:17",
															"nodeType": "YulIf",
															"src": "2203:421:17"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2112:518:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2165:5:17",
														"nodeType": "YulTypedName",
														"src": "2165:5:17",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2172:3:17",
														"nodeType": "YulTypedName",
														"src": "2172:3:17",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2177:10:17",
														"nodeType": "YulTypedName",
														"src": "2177:10:17",
														"type": ""
													}
												],
												"src": "2112:518:17"
											},
											{
												"body": {
													"nativeSrc": "2720:81:17",
													"nodeType": "YulBlock",
													"src": "2720:81:17",
													"statements": [
														{
															"nativeSrc": "2730:65:17",
															"nodeType": "YulAssignment",
															"src": "2730:65:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2745:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2763:1:17",
																										"nodeType": "YulLiteral",
																										"src": "2763:1:17",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2766:3:17",
																										"nodeType": "YulIdentifier",
																										"src": "2766:3:17"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2759:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "2759:3:17"
																								},
																								"nativeSrc": "2759:11:17",
																								"nodeType": "YulFunctionCall",
																								"src": "2759:11:17"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2776:1:17",
																										"nodeType": "YulLiteral",
																										"src": "2776:1:17",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2772:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "2772:3:17"
																								},
																								"nativeSrc": "2772:6:17",
																								"nodeType": "YulFunctionCall",
																								"src": "2772:6:17"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2755:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "2755:3:17"
																						},
																						"nativeSrc": "2755:24:17",
																						"nodeType": "YulFunctionCall",
																						"src": "2755:24:17"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2751:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "2751:3:17"
																				},
																				"nativeSrc": "2751:29:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2751:29:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2741:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2741:3:17"
																		},
																		"nativeSrc": "2741:40:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2741:40:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2787:1:17",
																				"nodeType": "YulLiteral",
																				"src": "2787:1:17",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2790:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "2790:3:17"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2783:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2783:3:17"
																		},
																		"nativeSrc": "2783:11:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2783:11:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2738:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "2738:2:17"
																},
																"nativeSrc": "2738:57:17",
																"nodeType": "YulFunctionCall",
																"src": "2738:57:17"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2730:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "2730:4:17"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2635:166:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2697:4:17",
														"nodeType": "YulTypedName",
														"src": "2697:4:17",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2703:3:17",
														"nodeType": "YulTypedName",
														"src": "2703:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2711:4:17",
														"nodeType": "YulTypedName",
														"src": "2711:4:17",
														"type": ""
													}
												],
												"src": "2635:166:17"
											},
											{
												"body": {
													"nativeSrc": "2902:1249:17",
													"nodeType": "YulBlock",
													"src": "2902:1249:17",
													"statements": [
														{
															"nativeSrc": "2912:24:17",
															"nodeType": "YulVariableDeclaration",
															"src": "2912:24:17",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2932:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "2932:3:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2926:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "2926:5:17"
																},
																"nativeSrc": "2926:10:17",
																"nodeType": "YulFunctionCall",
																"src": "2926:10:17"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2916:6:17",
																	"nodeType": "YulTypedName",
																	"src": "2916:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2979:22:17",
																"nodeType": "YulBlock",
																"src": "2979:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2981:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "2981:16:17"
																			},
																			"nativeSrc": "2981:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2981:18:17"
																		},
																		"nativeSrc": "2981:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2981:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2951:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "2951:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2967:2:17",
																						"nodeType": "YulLiteral",
																						"src": "2967:2:17",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2971:1:17",
																						"nodeType": "YulLiteral",
																						"src": "2971:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2963:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "2963:3:17"
																				},
																				"nativeSrc": "2963:10:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2963:10:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2975:1:17",
																				"nodeType": "YulLiteral",
																				"src": "2975:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2959:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2959:3:17"
																		},
																		"nativeSrc": "2959:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2959:18:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2948:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "2948:2:17"
																},
																"nativeSrc": "2948:30:17",
																"nodeType": "YulFunctionCall",
																"src": "2948:30:17"
															},
															"nativeSrc": "2945:56:17",
															"nodeType": "YulIf",
															"src": "2945:56:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3054:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "3054:4:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3092:4:17",
																						"nodeType": "YulIdentifier",
																						"src": "3092:4:17"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3086:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "3086:5:17"
																				},
																				"nativeSrc": "3086:11:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3086:11:17"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3060:25:17",
																			"nodeType": "YulIdentifier",
																			"src": "3060:25:17"
																		},
																		"nativeSrc": "3060:38:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3060:38:17"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3100:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "3100:6:17"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "3010:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "3010:43:17"
																},
																"nativeSrc": "3010:97:17",
																"nodeType": "YulFunctionCall",
																"src": "3010:97:17"
															},
															"nativeSrc": "3010:97:17",
															"nodeType": "YulExpressionStatement",
															"src": "3010:97:17"
														},
														{
															"nativeSrc": "3116:18:17",
															"nodeType": "YulVariableDeclaration",
															"src": "3116:18:17",
															"value": {
																"kind": "number",
																"nativeSrc": "3133:1:17",
																"nodeType": "YulLiteral",
																"src": "3133:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3120:9:17",
																	"nodeType": "YulTypedName",
																	"src": "3120:9:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3143:23:17",
															"nodeType": "YulVariableDeclaration",
															"src": "3143:23:17",
															"value": {
																"kind": "number",
																"nativeSrc": "3162:4:17",
																"nodeType": "YulLiteral",
																"src": "3162:4:17",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "3147:11:17",
																	"nodeType": "YulTypedName",
																	"src": "3147:11:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3175:17:17",
															"nodeType": "YulAssignment",
															"src": "3175:17:17",
															"value": {
																"kind": "number",
																"nativeSrc": "3188:4:17",
																"nodeType": "YulLiteral",
																"src": "3188:4:17",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3175:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "3175:9:17"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3238:656:17",
																		"nodeType": "YulBlock",
																		"src": "3238:656:17",
																		"statements": [
																			{
																				"nativeSrc": "3252:35:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3252:35:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3271:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "3271:6:17"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3283:2:17",
																									"nodeType": "YulLiteral",
																									"src": "3283:2:17",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3279:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "3279:3:17"
																							},
																							"nativeSrc": "3279:7:17",
																							"nodeType": "YulFunctionCall",
																							"src": "3279:7:17"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3267:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "3267:3:17"
																					},
																					"nativeSrc": "3267:20:17",
																					"nodeType": "YulFunctionCall",
																					"src": "3267:20:17"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3256:7:17",
																						"nodeType": "YulTypedName",
																						"src": "3256:7:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3300:49:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3300:49:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3344:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "3344:4:17"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3314:29:17",
																						"nodeType": "YulIdentifier",
																						"src": "3314:29:17"
																					},
																					"nativeSrc": "3314:35:17",
																					"nodeType": "YulFunctionCall",
																					"src": "3314:35:17"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3304:6:17",
																						"nodeType": "YulTypedName",
																						"src": "3304:6:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3362:10:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3362:10:17",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3371:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3371:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3366:1:17",
																						"nodeType": "YulTypedName",
																						"src": "3366:1:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3449:172:17",
																					"nodeType": "YulBlock",
																					"src": "3449:172:17",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3474:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "3474:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3492:3:17",
																														"nodeType": "YulIdentifier",
																														"src": "3492:3:17"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3497:9:17",
																														"nodeType": "YulIdentifier",
																														"src": "3497:9:17"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3488:3:17",
																													"nodeType": "YulIdentifier",
																													"src": "3488:3:17"
																												},
																												"nativeSrc": "3488:19:17",
																												"nodeType": "YulFunctionCall",
																												"src": "3488:19:17"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3482:5:17",
																											"nodeType": "YulIdentifier",
																											"src": "3482:5:17"
																										},
																										"nativeSrc": "3482:26:17",
																										"nodeType": "YulFunctionCall",
																										"src": "3482:26:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3467:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "3467:6:17"
																								},
																								"nativeSrc": "3467:42:17",
																								"nodeType": "YulFunctionCall",
																								"src": "3467:42:17"
																							},
																							"nativeSrc": "3467:42:17",
																							"nodeType": "YulExpressionStatement",
																							"src": "3467:42:17"
																						},
																						{
																							"nativeSrc": "3526:24:17",
																							"nodeType": "YulAssignment",
																							"src": "3526:24:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3540:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "3540:6:17"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3548:1:17",
																										"nodeType": "YulLiteral",
																										"src": "3548:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3536:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "3536:3:17"
																								},
																								"nativeSrc": "3536:14:17",
																								"nodeType": "YulFunctionCall",
																								"src": "3536:14:17"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3526:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "3526:6:17"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3567:40:17",
																							"nodeType": "YulAssignment",
																							"src": "3567:40:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3584:9:17",
																										"nodeType": "YulIdentifier",
																										"src": "3584:9:17"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3595:11:17",
																										"nodeType": "YulIdentifier",
																										"src": "3595:11:17"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3580:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "3580:3:17"
																								},
																								"nativeSrc": "3580:27:17",
																								"nodeType": "YulFunctionCall",
																								"src": "3580:27:17"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3567:9:17",
																									"nodeType": "YulIdentifier",
																									"src": "3567:9:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3396:1:17",
																							"nodeType": "YulIdentifier",
																							"src": "3396:1:17"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3399:7:17",
																							"nodeType": "YulIdentifier",
																							"src": "3399:7:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3393:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "3393:2:17"
																					},
																					"nativeSrc": "3393:14:17",
																					"nodeType": "YulFunctionCall",
																					"src": "3393:14:17"
																				},
																				"nativeSrc": "3385:236:17",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3408:28:17",
																					"nodeType": "YulBlock",
																					"src": "3408:28:17",
																					"statements": [
																						{
																							"nativeSrc": "3410:24:17",
																							"nodeType": "YulAssignment",
																							"src": "3410:24:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3419:1:17",
																										"nodeType": "YulIdentifier",
																										"src": "3419:1:17"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3422:11:17",
																										"nodeType": "YulIdentifier",
																										"src": "3422:11:17"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3415:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "3415:3:17"
																								},
																								"nativeSrc": "3415:19:17",
																								"nodeType": "YulFunctionCall",
																								"src": "3415:19:17"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3410:1:17",
																									"nodeType": "YulIdentifier",
																									"src": "3410:1:17"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3389:3:17",
																					"nodeType": "YulBlock",
																					"src": "3389:3:17",
																					"statements": []
																				},
																				"src": "3385:236:17"
																			},
																			{
																				"body": {
																					"nativeSrc": "3669:166:17",
																					"nodeType": "YulBlock",
																					"src": "3669:166:17",
																					"statements": [
																						{
																							"nativeSrc": "3687:43:17",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3687:43:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3714:3:17",
																												"nodeType": "YulIdentifier",
																												"src": "3714:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3719:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "3719:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3710:3:17",
																											"nodeType": "YulIdentifier",
																											"src": "3710:3:17"
																										},
																										"nativeSrc": "3710:19:17",
																										"nodeType": "YulFunctionCall",
																										"src": "3710:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3704:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "3704:5:17"
																								},
																								"nativeSrc": "3704:26:17",
																								"nodeType": "YulFunctionCall",
																								"src": "3704:26:17"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3691:9:17",
																									"nodeType": "YulTypedName",
																									"src": "3691:9:17",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3754:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "3754:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3766:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "3766:9:17"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3793:1:17",
																																				"nodeType": "YulLiteral",
																																				"src": "3793:1:17",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3796:6:17",
																																				"nodeType": "YulIdentifier",
																																				"src": "3796:6:17"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3789:3:17",
																																			"nodeType": "YulIdentifier",
																																			"src": "3789:3:17"
																																		},
																																		"nativeSrc": "3789:14:17",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3789:14:17"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3805:3:17",
																																		"nodeType": "YulLiteral",
																																		"src": "3805:3:17",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3785:3:17",
																																	"nodeType": "YulIdentifier",
																																	"src": "3785:3:17"
																																},
																																"nativeSrc": "3785:24:17",
																																"nodeType": "YulFunctionCall",
																																"src": "3785:24:17"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3815:1:17",
																																		"nodeType": "YulLiteral",
																																		"src": "3815:1:17",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3811:3:17",
																																	"nodeType": "YulIdentifier",
																																	"src": "3811:3:17"
																																},
																																"nativeSrc": "3811:6:17",
																																"nodeType": "YulFunctionCall",
																																"src": "3811:6:17"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3781:3:17",
																															"nodeType": "YulIdentifier",
																															"src": "3781:3:17"
																														},
																														"nativeSrc": "3781:37:17",
																														"nodeType": "YulFunctionCall",
																														"src": "3781:37:17"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3777:3:17",
																													"nodeType": "YulIdentifier",
																													"src": "3777:3:17"
																												},
																												"nativeSrc": "3777:42:17",
																												"nodeType": "YulFunctionCall",
																												"src": "3777:42:17"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3762:3:17",
																											"nodeType": "YulIdentifier",
																											"src": "3762:3:17"
																										},
																										"nativeSrc": "3762:58:17",
																										"nodeType": "YulFunctionCall",
																										"src": "3762:58:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3747:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "3747:6:17"
																								},
																								"nativeSrc": "3747:74:17",
																								"nodeType": "YulFunctionCall",
																								"src": "3747:74:17"
																							},
																							"nativeSrc": "3747:74:17",
																							"nodeType": "YulExpressionStatement",
																							"src": "3747:74:17"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3640:7:17",
																							"nodeType": "YulIdentifier",
																							"src": "3640:7:17"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3649:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "3649:6:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3637:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "3637:2:17"
																					},
																					"nativeSrc": "3637:19:17",
																					"nodeType": "YulFunctionCall",
																					"src": "3637:19:17"
																				},
																				"nativeSrc": "3634:201:17",
																				"nodeType": "YulIf",
																				"src": "3634:201:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3855:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "3855:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3869:1:17",
																											"nodeType": "YulLiteral",
																											"src": "3869:1:17",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3872:6:17",
																											"nodeType": "YulIdentifier",
																											"src": "3872:6:17"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3865:3:17",
																										"nodeType": "YulIdentifier",
																										"src": "3865:3:17"
																									},
																									"nativeSrc": "3865:14:17",
																									"nodeType": "YulFunctionCall",
																									"src": "3865:14:17"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3881:1:17",
																									"nodeType": "YulLiteral",
																									"src": "3881:1:17",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3861:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "3861:3:17"
																							},
																							"nativeSrc": "3861:22:17",
																							"nodeType": "YulFunctionCall",
																							"src": "3861:22:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3848:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "3848:6:17"
																					},
																					"nativeSrc": "3848:36:17",
																					"nodeType": "YulFunctionCall",
																					"src": "3848:36:17"
																				},
																				"nativeSrc": "3848:36:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "3848:36:17"
																			}
																		]
																	},
																	"nativeSrc": "3231:663:17",
																	"nodeType": "YulCase",
																	"src": "3231:663:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3236:1:17",
																		"nodeType": "YulLiteral",
																		"src": "3236:1:17",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3911:234:17",
																		"nodeType": "YulBlock",
																		"src": "3911:234:17",
																		"statements": [
																			{
																				"nativeSrc": "3925:14:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3925:14:17",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3938:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3938:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3929:5:17",
																						"nodeType": "YulTypedName",
																						"src": "3929:5:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3974:67:17",
																					"nodeType": "YulBlock",
																					"src": "3974:67:17",
																					"statements": [
																						{
																							"nativeSrc": "3992:35:17",
																							"nodeType": "YulAssignment",
																							"src": "3992:35:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4011:3:17",
																												"nodeType": "YulIdentifier",
																												"src": "4011:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4016:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "4016:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4007:3:17",
																											"nodeType": "YulIdentifier",
																											"src": "4007:3:17"
																										},
																										"nativeSrc": "4007:19:17",
																										"nodeType": "YulFunctionCall",
																										"src": "4007:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4001:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "4001:5:17"
																								},
																								"nativeSrc": "4001:26:17",
																								"nodeType": "YulFunctionCall",
																								"src": "4001:26:17"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3992:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "3992:5:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3955:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "3955:6:17"
																				},
																				"nativeSrc": "3952:89:17",
																				"nodeType": "YulIf",
																				"src": "3952:89:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4061:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "4061:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4120:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "4120:5:17"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4127:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "4127:6:17"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "4067:52:17",
																								"nodeType": "YulIdentifier",
																								"src": "4067:52:17"
																							},
																							"nativeSrc": "4067:67:17",
																							"nodeType": "YulFunctionCall",
																							"src": "4067:67:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4054:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "4054:6:17"
																					},
																					"nativeSrc": "4054:81:17",
																					"nodeType": "YulFunctionCall",
																					"src": "4054:81:17"
																				},
																				"nativeSrc": "4054:81:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "4054:81:17"
																			}
																		]
																	},
																	"nativeSrc": "3903:242:17",
																	"nodeType": "YulCase",
																	"src": "3903:242:17",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3211:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "3211:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3219:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3219:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3208:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "3208:2:17"
																},
																"nativeSrc": "3208:14:17",
																"nodeType": "YulFunctionCall",
																"src": "3208:14:17"
															},
															"nativeSrc": "3201:944:17",
															"nodeType": "YulSwitch",
															"src": "3201:944:17"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2806:1345:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2887:4:17",
														"nodeType": "YulTypedName",
														"src": "2887:4:17",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2893:3:17",
														"nodeType": "YulTypedName",
														"src": "2893:3:17",
														"type": ""
													}
												],
												"src": "2806:1345:17"
											},
											{
												"body": {
													"nativeSrc": "4257:102:17",
													"nodeType": "YulBlock",
													"src": "4257:102:17",
													"statements": [
														{
															"nativeSrc": "4267:26:17",
															"nodeType": "YulAssignment",
															"src": "4267:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4279:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "4279:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4290:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4290:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4275:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4275:3:17"
																},
																"nativeSrc": "4275:18:17",
																"nodeType": "YulFunctionCall",
																"src": "4275:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4267:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "4267:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4309:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "4309:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4324:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4324:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4340:3:17",
																								"nodeType": "YulLiteral",
																								"src": "4340:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4345:1:17",
																								"nodeType": "YulLiteral",
																								"src": "4345:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4336:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "4336:3:17"
																						},
																						"nativeSrc": "4336:11:17",
																						"nodeType": "YulFunctionCall",
																						"src": "4336:11:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4349:1:17",
																						"nodeType": "YulLiteral",
																						"src": "4349:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4332:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4332:3:17"
																				},
																				"nativeSrc": "4332:19:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4332:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4320:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4320:3:17"
																		},
																		"nativeSrc": "4320:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4320:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4302:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4302:6:17"
																},
																"nativeSrc": "4302:51:17",
																"nodeType": "YulFunctionCall",
																"src": "4302:51:17"
															},
															"nativeSrc": "4302:51:17",
															"nodeType": "YulExpressionStatement",
															"src": "4302:51:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4156:203:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4226:9:17",
														"nodeType": "YulTypedName",
														"src": "4226:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4237:6:17",
														"nodeType": "YulTypedName",
														"src": "4237:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4248:4:17",
														"nodeType": "YulTypedName",
														"src": "4248:4:17",
														"type": ""
													}
												],
												"src": "4156:203:17"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        mcopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let offset := mload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040525f600855348015610013575f80fd5b50604051611af2380380611af28339810160408190526100329161017c565b8282825f610040838261027c565b50600161004d828261027c565b5050506001600160a01b03811661007d57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6100868161008f565b5050505061033b565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112610103575f80fd5b81516001600160401b038082111561011d5761011d6100e0565b604051601f8301601f19908116603f01168101908282118183101715610145576101456100e0565b8160405283815286602085880101111561015d575f80fd5b8360208701602083015e5f602085830101528094505050505092915050565b5f805f6060848603121561018e575f80fd5b83516001600160a01b03811681146101a4575f80fd5b60208501519093506001600160401b03808211156101c0575f80fd5b6101cc878388016100f4565b935060408601519150808211156101e1575f80fd5b506101ee868287016100f4565b9150509250925092565b600181811c9082168061020c57607f821691505b60208210810361022a57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561027757805f5260205f20601f840160051c810160208510156102555750805b601f840160051c820191505b81811015610274575f8155600101610261565b50505b505050565b81516001600160401b03811115610295576102956100e0565b6102a9816102a384546101f8565b84610230565b602080601f8311600181146102dc575f84156102c55750858301515b5f19600386901b1c1916600185901b178555610333565b5f85815260208120601f198616915b8281101561030a578886015182559484019460019091019084016102eb565b508582101561032757878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b6117aa806103485f395ff3fe608060405234801561000f575f80fd5b5060043610610105575f3560e01c806301ffc9a71461010957806306fdde0314610131578063081812fc14610146578063095ea7b31461016657806323b872dd1461017b57806342842e0e1461018e5780634c7bc5cf146101a15780636352211e146101b457806370a08231146101c7578063715018a6146101e85780638da5cb5b146101f057806395d89b41146101f8578063a22cb46514610200578063aef9509814610213578063b6c3207414610226578063b88d4fde14610239578063c87b56dd1461024c578063d0def5211461025f578063e985e9c514610272578063f2fde38b14610285578063fc12768b14610298575b5f80fd5b61011c61011736600461102f565b6102ab565b60405190151581526020015b60405180910390f35b6101396102d5565b6040516101289190611078565b61015961015436600461108a565b610364565b60405161012891906110a1565b6101796101743660046110d0565b610378565b005b6101796101893660046110f8565b610387565b61017961019c3660046110f8565b610419565b6101796101af36600461127c565b610438565b6101596101c236600461108a565b6104b6565b6101da6101d5366004611348565b6104c0565b604051908152602001610128565b610179610505565b610159610518565b610139610527565b61017961020e366004611361565b610536565b61017961022136600461139a565b610541565b6101796102343660046113dd565b610553565b610179610247366004611432565b610591565b61013961025a36600461108a565b6105a8565b61017961026d3660046114a8565b6106b3565b61011c6102803660046114dc565b6106de565b610179610293366004611348565b61070b565b6101796102a636600461150d565b610748565b5f6001600160e01b03198216632483248360e11b14806102cf57506102cf82610788565b92915050565b60605f80546102e39061155f565b80601f016020809104026020016040519081016040528092919081815260200182805461030f9061155f565b801561035a5780601f106103315761010080835404028352916020019161035a565b820191905f5260205f20905b81548152906001019060200180831161033d57829003601f168201915b5050505050905090565b5f61036e826107d7565b506102cf8261080e565b610383828233610828565b5050565b6001600160a01b0382166103b9575f604051633250574960e11b81526004016103b091906110a1565b60405180910390fd5b5f6103c5838333610835565b9050836001600160a01b0316816001600160a01b031614610413576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016103b0565b50505050565b61043383838360405180602001604052805f815250610591565b505050565b610440610922565b805182511461044d575f80fd5b5f5b825181101561049c5761049483828151811061046d5761046d611597565b602002602001015183838151811061048757610487611597565b6020026020010151610954565b60010161044f565b506040515f80516020611755833981519152905f90a15050565b5f6102cf826107d7565b5f6001600160a01b0382166104ea575f6040516322718ad960e21b81526004016103b091906110a1565b506001600160a01b03165f9081526003602052604090205490565b61050d610922565b6105165f610986565b565b6007546001600160a01b031690565b6060600180546102e39061155f565b6103833383836109d7565b610549610922565b6103838282610a6c565b61055b610922565b5f5b825181101561049c5761058983828151811061057b5761057b611597565b602002602001015183610954565b60010161055d565b61059c848484610387565b61041384848484610abb565b60606105b3826107d7565b505f82815260066020526040812080546105cc9061155f565b80601f01602080910402602001604051908101604052809291908181526020018280546105f89061155f565b80156106435780601f1061061a57610100808354040283529160200191610643565b820191905f5260205f20905b81548152906001019060200180831161062657829003601f168201915b505050505090505f61065f60408051602081019091525f815290565b905080515f03610670575092915050565b8151156106a257808260405160200161068a9291906115c2565b60405160208183030381529060405292505050919050565b6106ab84610bcf565b949350505050565b6106bb610922565b6106c58282610954565b6040515f80516020611755833981519152905f90a15050565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b610713610922565b6001600160a01b03811661073c575f604051631e4fbdf760e01b81526004016103b091906110a1565b61074581610986565b50565b610750610922565b826001600160a01b0316610763836104b6565b6001600160a01b031614610775575f80fd5b61077e82610c40565b6104338382610954565b5f6001600160e01b031982166380ac58cd60e01b14806107b857506001600160e01b03198216635b5e139f60e01b145b806102cf57506301ffc9a760e01b6001600160e01b03198316146102cf565b5f806107e283610c78565b90506001600160a01b0381166102cf57604051637e27328960e01b8152600481018490526024016103b0565b5f908152600460205260409020546001600160a01b031690565b6104338383836001610c92565b5f8061084084610c78565b90506001600160a01b0383161561085c5761085c818486610d8d565b6001600160a01b03811615610896576108775f855f80610c92565b6001600160a01b0381165f90815260036020526040902080545f190190555b6001600160a01b038516156108c4576001600160a01b0385165f908152600360205260409020805460010190555b5f8481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b3361092b610518565b6001600160a01b031614610516573360405163118cdaa760e01b81526004016103b091906110a1565b61095c610922565b600880545f918261096c836115d6565b91905055905061097c8382610df1565b6104338183610a6c565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b038216610a005781604051630b61174360e31b81526004016103b091906110a1565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b5f828152600660205260409020610a83828261163e565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b6001600160a01b0383163b1561041357604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610afd9033908890879087906004016116fd565b6020604051808303815f875af1925050508015610b37575060408051601f3d908101601f19168201909252610b3491810190611739565b60015b610b95573d808015610b64576040519150601f19603f3d011682016040523d82523d5f602084013e610b69565b606091505b5080515f03610b8d5783604051633250574960e11b81526004016103b091906110a1565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b14610bc85783604051633250574960e11b81526004016103b091906110a1565b5050505050565b6060610bda826107d7565b505f610bf060408051602081019091525f815290565b90505f815111610c0e5760405180602001604052805f815250610c39565b80610c1884610e52565b604051602001610c299291906115c2565b6040516020818303038152906040525b9392505050565b5f610c4c5f835f610835565b90506001600160a01b03811661038357604051637e27328960e01b8152600481018390526024016103b0565b5f908152600260205260409020546001600160a01b031690565b8080610ca657506001600160a01b03821615155b15610d5e575f610cb5846107d7565b90506001600160a01b03831615801590610ce15750826001600160a01b0316816001600160a01b031614155b8015610cf45750610cf281846106de565b155b15610d14578260405163a9fbf51f60e01b81526004016103b091906110a1565b8115610d5c5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50505f90815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610d98838383610ee1565b610433576001600160a01b038316610dc657604051637e27328960e01b8152600481018290526024016103b0565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016103b0565b6001600160a01b038216610e1a575f604051633250574960e11b81526004016103b091906110a1565b5f610e2683835f610835565b90506001600160a01b03811615610433575f6040516339e3563760e11b81526004016103b091906110a1565b60605f610e5e83610f45565b60010190505f816001600160401b03811115610e7c57610e7c611131565b6040519080825280601f01601f191660200182016040528015610ea6576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610eb057509392505050565b5f6001600160a01b038316158015906106ab5750826001600160a01b0316846001600160a01b03161480610f1a5750610f1a84846106de565b806106ab5750826001600160a01b0316610f338361080e565b6001600160a01b031614949350505050565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610f835772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6904ee2d6d415b85acef8160201b8310610fad576904ee2d6d415b85acef8160201b830492506020015b662386f26fc100008310610fcb57662386f26fc10000830492506010015b6305f5e1008310610fe3576305f5e100830492506008015b6127108310610ff757612710830492506004015b60648310611009576064830492506002015b600a83106102cf5760010192915050565b6001600160e01b031981168114610745575f80fd5b5f6020828403121561103f575f80fd5b8135610c398161101a565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610c39602083018461104a565b5f6020828403121561109a575f80fd5b5035919050565b6001600160a01b0391909116815260200190565b80356001600160a01b03811681146110cb575f80fd5b919050565b5f80604083850312156110e1575f80fd5b6110ea836110b5565b946020939093013593505050565b5f805f6060848603121561110a575f80fd5b611113846110b5565b9250611121602085016110b5565b9150604084013590509250925092565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f191681016001600160401b038111828210171561116d5761116d611131565b604052919050565b5f6001600160401b0382111561118d5761118d611131565b5060051b60200190565b5f82601f8301126111a6575f80fd5b813560206111bb6111b683611175565b611145565b8083825260208201915060208460051b8701019350868411156111dc575f80fd5b602086015b848110156111ff576111f2816110b5565b83529183019183016111e1565b509695505050505050565b5f6001600160401b0383111561122257611222611131565b611235601f8401601f1916602001611145565b9050828152838383011115611248575f80fd5b828260208301375f602084830101529392505050565b5f82601f83011261126d575f80fd5b610c398383356020850161120a565b5f806040838503121561128d575f80fd5b82356001600160401b03808211156112a3575f80fd5b6112af86838701611197565b93506020915081850135818111156112c5575f80fd5b8501601f810187136112d5575f80fd5b80356112e36111b682611175565b81815260059190911b82018401908481019089831115611301575f80fd5b8584015b838110156113375780358681111561131b575f80fd5b6113298c898389010161125e565b845250918601918601611305565b508096505050505050509250929050565b5f60208284031215611358575f80fd5b610c39826110b5565b5f8060408385031215611372575f80fd5b61137b836110b5565b91506020830135801515811461138f575f80fd5b809150509250929050565b5f80604083850312156113ab575f80fd5b8235915060208301356001600160401b038111156113c7575f80fd5b6113d38582860161125e565b9150509250929050565b5f80604083850312156113ee575f80fd5b82356001600160401b0380821115611404575f80fd5b61141086838701611197565b93506020850135915080821115611425575f80fd5b506113d38582860161125e565b5f805f8060808587031215611445575f80fd5b61144e856110b5565b935061145c602086016110b5565b92506040850135915060608501356001600160401b0381111561147d575f80fd5b8501601f8101871361148d575f80fd5b61149c8782356020840161120a565b91505092959194509250565b5f80604083850312156114b9575f80fd5b6114c2836110b5565b915060208301356001600160401b038111156113c7575f80fd5b5f80604083850312156114ed575f80fd5b6114f6836110b5565b9150611504602084016110b5565b90509250929050565b5f805f6060848603121561151f575f80fd5b611528846110b5565b92506020840135915060408401356001600160401b03811115611549575f80fd5b6115558682870161125e565b9150509250925092565b600181811c9082168061157357607f821691505b60208210810361159157634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52603260045260245ffd5b5f81518060208401855e5f93019283525090919050565b5f6106ab6115d083866115ab565b846115ab565b5f600182016115f357634e487b7160e01b5f52601160045260245ffd5b5060010190565b601f82111561043357805f5260205f20601f840160051c8101602085101561161f5750805b601f840160051c820191505b81811015610bc8575f815560010161162b565b81516001600160401b0381111561165757611657611131565b61166b81611665845461155f565b846115fa565b602080601f83116001811461169e575f84156116875750858301515b5f19600386901b1c1916600185901b1785556116f5565b5f85815260208120601f198616915b828110156116cc578886015182559484019460019091019084016116ad565b50858210156116e957878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f9061172f9083018461104a565b9695505050505050565b5f60208284031215611749575f80fd5b8151610c398161101a56fe34c73884fbbb790762253ae313e57da96c00670344647f0cb8d41ee92b9f1971a264697066735822122067d34c6e7e5b7cfb7b4b7041f269d920a29b96d5434814400ddb38770c496a2264736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH1 0x8 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1AF2 CODESIZE SUB DUP1 PUSH2 0x1AF2 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x32 SWAP2 PUSH2 0x17C JUMP JUMPDEST DUP3 DUP3 DUP3 PUSH0 PUSH2 0x40 DUP4 DUP3 PUSH2 0x27C JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x4D DUP3 DUP3 PUSH2 0x27C JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x86 DUP2 PUSH2 0x8F JUMP JUMPDEST POP POP POP POP PUSH2 0x33B JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x103 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x11D JUMPI PUSH2 0x11D PUSH2 0xE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x145 JUMPI PUSH2 0x145 PUSH2 0xE0 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x15D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD MCOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1CC DUP8 DUP4 DUP9 ADD PUSH2 0xF4 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EE DUP7 DUP3 DUP8 ADD PUSH2 0xF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x20C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x22A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x277 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x255 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x274 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x261 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x295 JUMPI PUSH2 0x295 PUSH2 0xE0 JUMP JUMPDEST PUSH2 0x2A9 DUP2 PUSH2 0x2A3 DUP5 SLOAD PUSH2 0x1F8 JUMP JUMPDEST DUP5 PUSH2 0x230 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2DC JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2C5 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x333 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x30A JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2EB JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x327 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x17AA DUP1 PUSH2 0x348 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x105 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x4C7BC5CF EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xAEF95098 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0xB6C32074 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xD0DEF521 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0xFC12768B EQ PUSH2 0x298 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11C PUSH2 0x117 CALLDATASIZE PUSH1 0x4 PUSH2 0x102F JUMP JUMPDEST PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x1078 JUMP JUMPDEST PUSH2 0x159 PUSH2 0x154 CALLDATASIZE PUSH1 0x4 PUSH2 0x108A JUMP JUMPDEST PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x10A1 JUMP JUMPDEST PUSH2 0x179 PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0x10D0 JUMP JUMPDEST PUSH2 0x378 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x179 PUSH2 0x189 CALLDATASIZE PUSH1 0x4 PUSH2 0x10F8 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST PUSH2 0x179 PUSH2 0x19C CALLDATASIZE PUSH1 0x4 PUSH2 0x10F8 JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH2 0x179 PUSH2 0x1AF CALLDATASIZE PUSH1 0x4 PUSH2 0x127C JUMP JUMPDEST PUSH2 0x438 JUMP JUMPDEST PUSH2 0x159 PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x108A JUMP JUMPDEST PUSH2 0x4B6 JUMP JUMPDEST PUSH2 0x1DA PUSH2 0x1D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1348 JUMP JUMPDEST PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x128 JUMP JUMPDEST PUSH2 0x179 PUSH2 0x505 JUMP JUMPDEST PUSH2 0x159 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x527 JUMP JUMPDEST PUSH2 0x179 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x1361 JUMP JUMPDEST PUSH2 0x536 JUMP JUMPDEST PUSH2 0x179 PUSH2 0x221 CALLDATASIZE PUSH1 0x4 PUSH2 0x139A JUMP JUMPDEST PUSH2 0x541 JUMP JUMPDEST PUSH2 0x179 PUSH2 0x234 CALLDATASIZE PUSH1 0x4 PUSH2 0x13DD JUMP JUMPDEST PUSH2 0x553 JUMP JUMPDEST PUSH2 0x179 PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0x1432 JUMP JUMPDEST PUSH2 0x591 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0x108A JUMP JUMPDEST PUSH2 0x5A8 JUMP JUMPDEST PUSH2 0x179 PUSH2 0x26D CALLDATASIZE PUSH1 0x4 PUSH2 0x14A8 JUMP JUMPDEST PUSH2 0x6B3 JUMP JUMPDEST PUSH2 0x11C PUSH2 0x280 CALLDATASIZE PUSH1 0x4 PUSH2 0x14DC JUMP JUMPDEST PUSH2 0x6DE JUMP JUMPDEST PUSH2 0x179 PUSH2 0x293 CALLDATASIZE PUSH1 0x4 PUSH2 0x1348 JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST PUSH2 0x179 PUSH2 0x2A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x150D JUMP JUMPDEST PUSH2 0x748 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x24832483 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x2CF JUMPI POP PUSH2 0x2CF DUP3 PUSH2 0x788 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x2E3 SWAP1 PUSH2 0x155F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x30F SWAP1 PUSH2 0x155F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x35A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x331 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x35A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x33D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x36E DUP3 PUSH2 0x7D7 JUMP JUMPDEST POP PUSH2 0x2CF DUP3 PUSH2 0x80E JUMP JUMPDEST PUSH2 0x383 DUP3 DUP3 CALLER PUSH2 0x828 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3B9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x10A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x3C5 DUP4 DUP4 CALLER PUSH2 0x835 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x413 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x433 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x591 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x440 PUSH2 0x922 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x44D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x49C JUMPI PUSH2 0x494 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x46D JUMPI PUSH2 0x46D PUSH2 0x1597 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x487 JUMPI PUSH2 0x487 PUSH2 0x1597 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x954 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x44F JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1755 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH0 SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2CF DUP3 PUSH2 0x7D7 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4EA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x10A1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x50D PUSH2 0x922 JUMP JUMPDEST PUSH2 0x516 PUSH0 PUSH2 0x986 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x2E3 SWAP1 PUSH2 0x155F JUMP JUMPDEST PUSH2 0x383 CALLER DUP4 DUP4 PUSH2 0x9D7 JUMP JUMPDEST PUSH2 0x549 PUSH2 0x922 JUMP JUMPDEST PUSH2 0x383 DUP3 DUP3 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x55B PUSH2 0x922 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x49C JUMPI PUSH2 0x589 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x57B JUMPI PUSH2 0x57B PUSH2 0x1597 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x55D JUMP JUMPDEST PUSH2 0x59C DUP5 DUP5 DUP5 PUSH2 0x387 JUMP JUMPDEST PUSH2 0x413 DUP5 DUP5 DUP5 DUP5 PUSH2 0xABB JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5B3 DUP3 PUSH2 0x7D7 JUMP JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x5CC SWAP1 PUSH2 0x155F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5F8 SWAP1 PUSH2 0x155F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x643 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x61A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x643 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x626 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0x65F PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 SUB PUSH2 0x670 JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x6A2 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x68A SWAP3 SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6AB DUP5 PUSH2 0xBCF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x6BB PUSH2 0x922 JUMP JUMPDEST PUSH2 0x6C5 DUP3 DUP3 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1755 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH0 SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x713 PUSH2 0x922 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x73C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x10A1 JUMP JUMPDEST PUSH2 0x745 DUP2 PUSH2 0x986 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x750 PUSH2 0x922 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x763 DUP4 PUSH2 0x4B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x775 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x77E DUP3 PUSH2 0xC40 JUMP JUMPDEST PUSH2 0x433 DUP4 DUP3 PUSH2 0x954 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x7B8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x2CF JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x2CF JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x7E2 DUP4 PUSH2 0xC78 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2CF JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x433 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xC92 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x840 DUP5 PUSH2 0xC78 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x85C JUMPI PUSH2 0x85C DUP2 DUP5 DUP7 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x896 JUMPI PUSH2 0x877 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0xC92 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x8C4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0x92B PUSH2 0x518 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x516 JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x10A1 JUMP JUMPDEST PUSH2 0x95C PUSH2 0x922 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH0 SWAP2 DUP3 PUSH2 0x96C DUP4 PUSH2 0x15D6 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x97C DUP4 DUP3 PUSH2 0xDF1 JUMP JUMPDEST PUSH2 0x433 DUP2 DUP4 PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA00 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x10A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xA83 DUP3 DUP3 PUSH2 0x163E JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x413 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xAFD SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x16FD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB37 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB34 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1739 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB95 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xB64 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0xB8D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x10A1 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0xBC8 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x10A1 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xBDA DUP3 PUSH2 0x7D7 JUMP JUMPDEST POP PUSH0 PUSH2 0xBF0 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0xC0E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xC39 JUMP JUMPDEST DUP1 PUSH2 0xC18 DUP5 PUSH2 0xE52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC29 SWAP3 SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC4C PUSH0 DUP4 PUSH0 PUSH2 0x835 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x383 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xCA6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xD5E JUMPI PUSH0 PUSH2 0xCB5 DUP5 PUSH2 0x7D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xCE1 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xCF4 JUMPI POP PUSH2 0xCF2 DUP2 DUP5 PUSH2 0x6DE JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xD14 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x10A1 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xD5C JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xD98 DUP4 DUP4 DUP4 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x433 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xDC6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE1A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x10A1 JUMP JUMPDEST PUSH0 PUSH2 0xE26 DUP4 DUP4 PUSH0 PUSH2 0x835 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x433 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x10A1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xE5E DUP4 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xE7C JUMPI PUSH2 0xE7C PUSH2 0x1131 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEA6 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xEB0 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x6AB JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xF1A JUMPI POP PUSH2 0xF1A DUP5 DUP5 PUSH2 0x6DE JUMP JUMPDEST DUP1 PUSH2 0x6AB JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF33 DUP4 PUSH2 0x80E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xF83 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH10 0x4EE2D6D415B85ACEF81 PUSH1 0x20 SHL DUP4 LT PUSH2 0xFAD JUMPI PUSH10 0x4EE2D6D415B85ACEF81 PUSH1 0x20 SHL DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xFCB JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xFE3 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xFF7 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1009 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2CF JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x745 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x103F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC39 DUP2 PUSH2 0x101A JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xC39 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x104A JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x109A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10CB JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10EA DUP4 PUSH2 0x10B5 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x110A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1113 DUP5 PUSH2 0x10B5 JUMP JUMPDEST SWAP3 POP PUSH2 0x1121 PUSH1 0x20 DUP6 ADD PUSH2 0x10B5 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x116D JUMPI PUSH2 0x116D PUSH2 0x1131 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x118D JUMPI PUSH2 0x118D PUSH2 0x1131 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x11BB PUSH2 0x11B6 DUP4 PUSH2 0x1175 JUMP JUMPDEST PUSH2 0x1145 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x11DC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x11FF JUMPI PUSH2 0x11F2 DUP2 PUSH2 0x10B5 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x11E1 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x1222 JUMPI PUSH2 0x1222 PUSH2 0x1131 JUMP JUMPDEST PUSH2 0x1235 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x1145 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x1248 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x126D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC39 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x120A JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x128D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x12A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12AF DUP7 DUP4 DUP8 ADD PUSH2 0x1197 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 SWAP2 POP DUP2 DUP6 ADD CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x12C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x12D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x12E3 PUSH2 0x11B6 DUP3 PUSH2 0x1175 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP10 DUP4 GT ISZERO PUSH2 0x1301 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 DUP5 ADD JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1337 JUMPI DUP1 CALLDATALOAD DUP7 DUP2 GT ISZERO PUSH2 0x131B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1329 DUP13 DUP10 DUP4 DUP10 ADD ADD PUSH2 0x125E JUMP JUMPDEST DUP5 MSTORE POP SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x1305 JUMP JUMPDEST POP DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1358 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC39 DUP3 PUSH2 0x10B5 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1372 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x137B DUP4 PUSH2 0x10B5 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x138F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13AB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x13C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13D3 DUP6 DUP3 DUP7 ADD PUSH2 0x125E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13EE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1404 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1410 DUP7 DUP4 DUP8 ADD PUSH2 0x1197 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1425 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D3 DUP6 DUP3 DUP7 ADD PUSH2 0x125E JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1445 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x144E DUP6 PUSH2 0x10B5 JUMP JUMPDEST SWAP4 POP PUSH2 0x145C PUSH1 0x20 DUP7 ADD PUSH2 0x10B5 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x147D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x148D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x149C DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x120A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x14C2 DUP4 PUSH2 0x10B5 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x13C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14ED JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x14F6 DUP4 PUSH2 0x10B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1504 PUSH1 0x20 DUP5 ADD PUSH2 0x10B5 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x151F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1528 DUP5 PUSH2 0x10B5 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1549 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1555 DUP7 DUP3 DUP8 ADD PUSH2 0x125E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1573 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1591 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6AB PUSH2 0x15D0 DUP4 DUP7 PUSH2 0x15AB JUMP JUMPDEST DUP5 PUSH2 0x15AB JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x15F3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x433 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x161F JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBC8 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x162B JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1657 JUMPI PUSH2 0x1657 PUSH2 0x1131 JUMP JUMPDEST PUSH2 0x166B DUP2 PUSH2 0x1665 DUP5 SLOAD PUSH2 0x155F JUMP JUMPDEST DUP5 PUSH2 0x15FA JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x169E JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1687 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x16F5 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x16CC JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x16AD JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x16E9 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x172F SWAP1 DUP4 ADD DUP5 PUSH2 0x104A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1749 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xC39 DUP2 PUSH2 0x101A JUMP INVALID CALLVALUE 0xC7 CODESIZE DUP5 0xFB 0xBB PUSH26 0x762253AE313E57DA96C00670344647F0CB8D41EE92B9F1971A2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0xD34C6E7E5B7CFB7B 0x4B PUSH17 0x41F269D920A29B96D5434814400DDB3877 0xC BLOBHASH PUSH11 0x2264736F6C634300081900 CALLER ",
							"sourceMap": "249:1407:16:-:0;;;337:1;310:28;;364:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;469:12;447:4;453:6;1447:5:5;:13;447:4:16;1447:5:5;:13;:::i;:::-;-1:-1:-1;1470:7:5;:17;1480:7;1470;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;4302:51:17;4275:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;1225:187;364:126:16;;;249:1407;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:127:17:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:716;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:17;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:17;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;709:3;702:4;697:2;689:6;685:15;681:26;678:35;675:55;;;726:1;723;716:12;675:55;783:2;776:4;768:6;764:17;757:4;749:6;745:17;739:47;830:1;823:4;818:2;810:6;806:15;802:26;795:37;850:6;841:15;;;;;;146:716;;;;:::o;867:729::-;975:6;983;991;1044:2;1032:9;1023:7;1019:23;1015:32;1012:52;;;1060:1;1057;1050:12;1012:52;1086:16;;-1:-1:-1;;;;;1131:31:17;;1121:42;;1111:70;;1177:1;1174;1167:12;1111:70;1249:2;1234:18;;1228:25;1200:5;;-1:-1:-1;;;;;;1302:14:17;;;1299:34;;;1329:1;1326;1319:12;1299:34;1352:61;1405:7;1396:6;1385:9;1381:22;1352:61;:::i;:::-;1342:71;;1459:2;1448:9;1444:18;1438:25;1422:41;;1488:2;1478:8;1475:16;1472:36;;;1504:1;1501;1494:12;1472:36;;1527:63;1582:7;1571:8;1560:9;1556:24;1527:63;:::i;:::-;1517:73;;;867:729;;;;;:::o;1601:380::-;1680:1;1676:12;;;;1723;;;1744:61;;1798:4;1790:6;1786:17;1776:27;;1744:61;1851:2;1843:6;1840:14;1820:18;1817:38;1814:161;;1897:10;1892:3;1888:20;1885:1;1878:31;1932:4;1929:1;1922:15;1960:4;1957:1;1950:15;1814:161;;1601:380;;;:::o;2112:518::-;2214:2;2209:3;2206:11;2203:421;;;2250:5;2247:1;2240:16;2294:4;2291:1;2281:18;2364:2;2352:10;2348:19;2345:1;2341:27;2335:4;2331:38;2400:4;2388:10;2385:20;2382:47;;;-1:-1:-1;2423:4:17;2382:47;2478:2;2473:3;2469:12;2466:1;2462:20;2456:4;2452:31;2442:41;;2533:81;2551:2;2544:5;2541:13;2533:81;;;2610:1;2596:16;;2577:1;2566:13;2533:81;;;2537:3;;2203:421;2112:518;;;:::o;2806:1345::-;2926:10;;-1:-1:-1;;;;;2948:30:17;;2945:56;;;2981:18;;:::i;:::-;3010:97;3100:6;3060:38;3092:4;3086:11;3060:38;:::i;:::-;3054:4;3010:97;:::i;:::-;3162:4;;3219:2;3208:14;;3236:1;3231:663;;;;3938:1;3955:6;3952:89;;;-1:-1:-1;4007:19:17;;;4001:26;3952:89;-1:-1:-1;;2763:1:17;2759:11;;;2755:24;2751:29;2741:40;2787:1;2783:11;;;2738:57;4054:81;;3201:944;;3231:663;2059:1;2052:14;;;2096:4;2083:18;;-1:-1:-1;;3267:20:17;;;3385:236;3399:7;3396:1;3393:14;3385:236;;;3488:19;;;3482:26;3467:42;;3580:27;;;;3548:1;3536:14;;;;3415:19;;3385:236;;;3389:3;3649:6;3640:7;3637:19;3634:201;;;3710:19;;;3704:26;-1:-1:-1;;3793:1:17;3789:14;;;3805:3;3785:24;3781:37;3777:42;3762:58;3747:74;;3634:201;;;3881:1;3872:6;3869:1;3865:14;3861:22;3855:4;3848:36;3201:944;;;;;2806:1345;;:::o;4156:203::-;249:1407:16;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1128": {
									"entryPoint": 2088,
									"id": 1128,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1194": {
									"entryPoint": 3218,
									"id": 1194,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_521": {
									"entryPoint": null,
									"id": 521,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_burn_1006": {
									"entryPoint": 3136,
									"id": 1006,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkAuthorized_776": {
									"entryPoint": 3469,
									"id": 776,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1324": {
									"entryPoint": 2747,
									"id": 1324,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2338,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getApproved_703": {
									"entryPoint": 2062,
									"id": 703,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_739": {
									"entryPoint": 3809,
									"id": 739,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_3247": {
									"entryPoint": 2388,
									"id": 3247,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_932": {
									"entryPoint": 3569,
									"id": 932,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1626": {
									"entryPoint": null,
									"id": 1626,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_690": {
									"entryPoint": 3192,
									"id": 690,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1260": {
									"entryPoint": 2007,
									"id": 1260,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_setApprovalForAll_1231": {
									"entryPoint": 2519,
									"id": 1231,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setTokenURI_1585": {
									"entryPoint": 2668,
									"id": 1585,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2438,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_882": {
									"entryPoint": 2101,
									"id": 882,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_537": {
									"entryPoint": 888,
									"id": 537,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_445": {
									"entryPoint": 1216,
									"id": 445,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@exchangeNewToken_3291": {
									"entryPoint": 1864,
									"id": 3291,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@getApproved_554": {
									"entryPoint": 868,
									"id": 554,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_587": {
									"entryPoint": 1758,
									"id": 587,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_2809": {
									"entryPoint": 3909,
									"id": 2809,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_3143": {
									"entryPoint": 1715,
									"id": 3143,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mint_3188": {
									"entryPoint": 1080,
									"id": 3188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mint_3222": {
									"entryPoint": 1363,
									"id": 3222,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_467": {
									"entryPoint": 725,
									"id": 467,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_458": {
									"entryPoint": 1206,
									"id": 458,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1304,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1285,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_651": {
									"entryPoint": 1049,
									"id": 651,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_677": {
									"entryPoint": 1425,
									"id": 677,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_570": {
									"entryPoint": 1334,
									"id": 570,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setUrl_3262": {
									"entryPoint": 1345,
									"id": 3262,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1509": {
									"entryPoint": 683,
									"id": 1509,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1922": {
									"entryPoint": null,
									"id": 1922,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_417": {
									"entryPoint": 1928,
									"id": 417,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_476": {
									"entryPoint": 1319,
									"id": 476,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1712": {
									"entryPoint": 3666,
									"id": 1712,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1566": {
									"entryPoint": 1448,
									"id": 1566,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_512": {
									"entryPoint": 3023,
									"id": 512,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_633": {
									"entryPoint": 903,
									"id": 633,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1803,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_address_dyn": {
									"entryPoint": 4503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_string": {
									"entryPoint": 4618,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 4702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 5170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_string_memory_ptr": {
									"entryPoint": 5288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_string_memory_ptr": {
									"entryPoint": 5389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 4732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_string_memory_ptr": {
									"entryPoint": 5085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 5945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_string_memory_ptr": {
									"entryPoint": 5018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_string": {
									"entryPoint": 5547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string_memory_ptr": {
									"entryPoint": 4170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5570,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5885,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4216,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 4421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_array_address_dyn": {
									"entryPoint": 4469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 5626,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 5694,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5527,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4401,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 4122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13969:17",
										"nodeType": "YulBlock",
										"src": "0:13969:17",
										"statements": [
											{
												"nativeSrc": "6:3:17",
												"nodeType": "YulBlock",
												"src": "6:3:17",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "58:87:17",
													"nodeType": "YulBlock",
													"src": "58:87:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "123:16:17",
																"nodeType": "YulBlock",
																"src": "123:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "132:1:17",
																					"nodeType": "YulLiteral",
																					"src": "132:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "135:1:17",
																					"nodeType": "YulLiteral",
																					"src": "135:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "125:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:17"
																			},
																			"nativeSrc": "125:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:17"
																		},
																		"nativeSrc": "125:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "81:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "92:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:17"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "103:3:17",
																								"nodeType": "YulLiteral",
																								"src": "103:3:17",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "108:10:17",
																								"nodeType": "YulLiteral",
																								"src": "108:10:17",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "99:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:17"
																						},
																						"nativeSrc": "99:20:17",
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "88:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:17"
																				},
																				"nativeSrc": "88:32:17",
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "78:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:17"
																		},
																		"nativeSrc": "78:43:17",
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "71:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:17"
																},
																"nativeSrc": "71:51:17",
																"nodeType": "YulFunctionCall",
																"src": "71:51:17"
															},
															"nativeSrc": "68:71:17",
															"nodeType": "YulIf",
															"src": "68:71:17"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nativeSrc": "14:131:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "47:5:17",
														"nodeType": "YulTypedName",
														"src": "47:5:17",
														"type": ""
													}
												],
												"src": "14:131:17"
											},
											{
												"body": {
													"nativeSrc": "219:176:17",
													"nodeType": "YulBlock",
													"src": "219:176:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "265:16:17",
																"nodeType": "YulBlock",
																"src": "265:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "274:1:17",
																					"nodeType": "YulLiteral",
																					"src": "274:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "277:1:17",
																					"nodeType": "YulLiteral",
																					"src": "277:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "267:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:17"
																			},
																			"nativeSrc": "267:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:17"
																		},
																		"nativeSrc": "267:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "240:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "249:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "236:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:17"
																		},
																		"nativeSrc": "236:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "261:2:17",
																		"nodeType": "YulLiteral",
																		"src": "261:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "232:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:17"
																},
																"nativeSrc": "232:32:17",
																"nodeType": "YulFunctionCall",
																"src": "232:32:17"
															},
															"nativeSrc": "229:52:17",
															"nodeType": "YulIf",
															"src": "229:52:17"
														},
														{
															"nativeSrc": "290:36:17",
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "316:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "303:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:17"
																},
																"nativeSrc": "303:23:17",
																"nodeType": "YulFunctionCall",
																"src": "303:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "294:5:17",
																	"nodeType": "YulTypedName",
																	"src": "294:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "359:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "335:23:17",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:17"
																},
																"nativeSrc": "335:30:17",
																"nodeType": "YulFunctionCall",
																"src": "335:30:17"
															},
															"nativeSrc": "335:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "335:30:17"
														},
														{
															"nativeSrc": "374:15:17",
															"nodeType": "YulAssignment",
															"src": "374:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "384:5:17",
																"nodeType": "YulIdentifier",
																"src": "384:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "374:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "150:245:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "185:9:17",
														"nodeType": "YulTypedName",
														"src": "185:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "196:7:17",
														"nodeType": "YulTypedName",
														"src": "196:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "208:6:17",
														"nodeType": "YulTypedName",
														"src": "208:6:17",
														"type": ""
													}
												],
												"src": "150:245:17"
											},
											{
												"body": {
													"nativeSrc": "495:92:17",
													"nodeType": "YulBlock",
													"src": "495:92:17",
													"statements": [
														{
															"nativeSrc": "505:26:17",
															"nodeType": "YulAssignment",
															"src": "505:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "517:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "528:2:17",
																		"nodeType": "YulLiteral",
																		"src": "528:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "513:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:17"
																},
																"nativeSrc": "513:18:17",
																"nodeType": "YulFunctionCall",
																"src": "513:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "505:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "547:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "572:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "565:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:17"
																				},
																				"nativeSrc": "565:14:17",
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "558:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:17"
																		},
																		"nativeSrc": "558:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "540:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:17"
																},
																"nativeSrc": "540:41:17",
																"nodeType": "YulFunctionCall",
																"src": "540:41:17"
															},
															"nativeSrc": "540:41:17",
															"nodeType": "YulExpressionStatement",
															"src": "540:41:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "400:187:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "464:9:17",
														"nodeType": "YulTypedName",
														"src": "464:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "475:6:17",
														"nodeType": "YulTypedName",
														"src": "475:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "486:4:17",
														"nodeType": "YulTypedName",
														"src": "486:4:17",
														"type": ""
													}
												],
												"src": "400:187:17"
											},
											{
												"body": {
													"nativeSrc": "653:239:17",
													"nodeType": "YulBlock",
													"src": "653:239:17",
													"statements": [
														{
															"nativeSrc": "663:26:17",
															"nodeType": "YulVariableDeclaration",
															"src": "663:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "683:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "683:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "677:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "677:5:17"
																},
																"nativeSrc": "677:12:17",
																"nodeType": "YulFunctionCall",
																"src": "677:12:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "667:6:17",
																	"nodeType": "YulTypedName",
																	"src": "667:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "705:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "705:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "710:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "710:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "698:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "698:6:17"
																},
																"nativeSrc": "698:19:17",
																"nodeType": "YulFunctionCall",
																"src": "698:19:17"
															},
															"nativeSrc": "698:19:17",
															"nodeType": "YulExpressionStatement",
															"src": "698:19:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "736:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "736:3:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "741:4:17",
																				"nodeType": "YulLiteral",
																				"src": "741:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "732:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:17"
																		},
																		"nativeSrc": "732:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "732:14:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "752:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "752:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "759:4:17",
																				"nodeType": "YulLiteral",
																				"src": "759:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "748:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "748:3:17"
																		},
																		"nativeSrc": "748:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "748:16:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "766:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "766:6:17"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "726:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "726:5:17"
																},
																"nativeSrc": "726:47:17",
																"nodeType": "YulFunctionCall",
																"src": "726:47:17"
															},
															"nativeSrc": "726:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "726:47:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "797:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "797:3:17"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "802:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "802:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "793:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "793:3:17"
																				},
																				"nativeSrc": "793:16:17",
																				"nodeType": "YulFunctionCall",
																				"src": "793:16:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "811:4:17",
																				"nodeType": "YulLiteral",
																				"src": "811:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "789:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "789:3:17"
																		},
																		"nativeSrc": "789:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "789:27:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "818:1:17",
																		"nodeType": "YulLiteral",
																		"src": "818:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "782:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "782:6:17"
																},
																"nativeSrc": "782:38:17",
																"nodeType": "YulFunctionCall",
																"src": "782:38:17"
															},
															"nativeSrc": "782:38:17",
															"nodeType": "YulExpressionStatement",
															"src": "782:38:17"
														},
														{
															"nativeSrc": "829:57:17",
															"nodeType": "YulAssignment",
															"src": "829:57:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "844:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "844:3:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "857:6:17",
																								"nodeType": "YulIdentifier",
																								"src": "857:6:17"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "865:2:17",
																								"nodeType": "YulLiteral",
																								"src": "865:2:17",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "853:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "853:3:17"
																						},
																						"nativeSrc": "853:15:17",
																						"nodeType": "YulFunctionCall",
																						"src": "853:15:17"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "874:2:17",
																								"nodeType": "YulLiteral",
																								"src": "874:2:17",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "870:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "870:3:17"
																						},
																						"nativeSrc": "870:7:17",
																						"nodeType": "YulFunctionCall",
																						"src": "870:7:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "849:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "849:3:17"
																				},
																				"nativeSrc": "849:29:17",
																				"nodeType": "YulFunctionCall",
																				"src": "849:29:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "840:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:17"
																		},
																		"nativeSrc": "840:39:17",
																		"nodeType": "YulFunctionCall",
																		"src": "840:39:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "881:4:17",
																		"nodeType": "YulLiteral",
																		"src": "881:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "836:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:17"
																},
																"nativeSrc": "836:50:17",
																"nodeType": "YulFunctionCall",
																"src": "836:50:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "829:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "829:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_string_memory_ptr",
												"nativeSrc": "592:300:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "630:5:17",
														"nodeType": "YulTypedName",
														"src": "630:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "637:3:17",
														"nodeType": "YulTypedName",
														"src": "637:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "645:3:17",
														"nodeType": "YulTypedName",
														"src": "645:3:17",
														"type": ""
													}
												],
												"src": "592:300:17"
											},
											{
												"body": {
													"nativeSrc": "1018:110:17",
													"nodeType": "YulBlock",
													"src": "1018:110:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1035:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1035:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1046:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1046:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1028:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1028:6:17"
																},
																"nativeSrc": "1028:21:17",
																"nodeType": "YulFunctionCall",
																"src": "1028:21:17"
															},
															"nativeSrc": "1028:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "1028:21:17"
														},
														{
															"nativeSrc": "1058:64:17",
															"nodeType": "YulAssignment",
															"src": "1058:64:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1095:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1095:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1107:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1107:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1118:2:17",
																				"nodeType": "YulLiteral",
																				"src": "1118:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1103:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1103:3:17"
																		},
																		"nativeSrc": "1103:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1103:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "1066:28:17",
																	"nodeType": "YulIdentifier",
																	"src": "1066:28:17"
																},
																"nativeSrc": "1066:56:17",
																"nodeType": "YulFunctionCall",
																"src": "1066:56:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1058:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "1058:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "897:231:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "987:9:17",
														"nodeType": "YulTypedName",
														"src": "987:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "998:6:17",
														"nodeType": "YulTypedName",
														"src": "998:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1009:4:17",
														"nodeType": "YulTypedName",
														"src": "1009:4:17",
														"type": ""
													}
												],
												"src": "897:231:17"
											},
											{
												"body": {
													"nativeSrc": "1203:110:17",
													"nodeType": "YulBlock",
													"src": "1203:110:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "1249:16:17",
																"nodeType": "YulBlock",
																"src": "1249:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1258:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1258:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1261:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1261:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1251:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1251:6:17"
																			},
																			"nativeSrc": "1251:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1251:12:17"
																		},
																		"nativeSrc": "1251:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "1251:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1224:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "1224:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1233:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1233:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:17"
																		},
																		"nativeSrc": "1220:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1245:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1216:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1216:3:17"
																},
																"nativeSrc": "1216:32:17",
																"nodeType": "YulFunctionCall",
																"src": "1216:32:17"
															},
															"nativeSrc": "1213:52:17",
															"nodeType": "YulIf",
															"src": "1213:52:17"
														},
														{
															"nativeSrc": "1274:33:17",
															"nodeType": "YulAssignment",
															"src": "1274:33:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1297:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1297:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1284:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "1284:12:17"
																},
																"nativeSrc": "1284:23:17",
																"nodeType": "YulFunctionCall",
																"src": "1284:23:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1274:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1274:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1133:180:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1169:9:17",
														"nodeType": "YulTypedName",
														"src": "1169:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1180:7:17",
														"nodeType": "YulTypedName",
														"src": "1180:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1192:6:17",
														"nodeType": "YulTypedName",
														"src": "1192:6:17",
														"type": ""
													}
												],
												"src": "1133:180:17"
											},
											{
												"body": {
													"nativeSrc": "1419:102:17",
													"nodeType": "YulBlock",
													"src": "1419:102:17",
													"statements": [
														{
															"nativeSrc": "1429:26:17",
															"nodeType": "YulAssignment",
															"src": "1429:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1441:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1441:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1452:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1437:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1437:3:17"
																},
																"nativeSrc": "1437:18:17",
																"nodeType": "YulFunctionCall",
																"src": "1437:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1429:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "1429:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1471:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1471:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1486:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1486:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1502:3:17",
																								"nodeType": "YulLiteral",
																								"src": "1502:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1507:1:17",
																								"nodeType": "YulLiteral",
																								"src": "1507:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1498:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "1498:3:17"
																						},
																						"nativeSrc": "1498:11:17",
																						"nodeType": "YulFunctionCall",
																						"src": "1498:11:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1511:1:17",
																						"nodeType": "YulLiteral",
																						"src": "1511:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1494:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:17"
																				},
																				"nativeSrc": "1494:19:17",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1482:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1482:3:17"
																		},
																		"nativeSrc": "1482:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1482:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1464:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1464:6:17"
																},
																"nativeSrc": "1464:51:17",
																"nodeType": "YulFunctionCall",
																"src": "1464:51:17"
															},
															"nativeSrc": "1464:51:17",
															"nodeType": "YulExpressionStatement",
															"src": "1464:51:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1318:203:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1388:9:17",
														"nodeType": "YulTypedName",
														"src": "1388:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1399:6:17",
														"nodeType": "YulTypedName",
														"src": "1399:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1410:4:17",
														"nodeType": "YulTypedName",
														"src": "1410:4:17",
														"type": ""
													}
												],
												"src": "1318:203:17"
											},
											{
												"body": {
													"nativeSrc": "1575:124:17",
													"nodeType": "YulBlock",
													"src": "1575:124:17",
													"statements": [
														{
															"nativeSrc": "1585:29:17",
															"nodeType": "YulAssignment",
															"src": "1585:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1607:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1607:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1594:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "1594:12:17"
																},
																"nativeSrc": "1594:20:17",
																"nodeType": "YulFunctionCall",
																"src": "1594:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1585:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "1585:5:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1677:16:17",
																"nodeType": "YulBlock",
																"src": "1677:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1686:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1686:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1689:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1689:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1679:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1679:6:17"
																			},
																			"nativeSrc": "1679:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1679:12:17"
																		},
																		"nativeSrc": "1679:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "1679:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1636:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "1636:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1647:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "1647:5:17"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1662:3:17",
																										"nodeType": "YulLiteral",
																										"src": "1662:3:17",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1667:1:17",
																										"nodeType": "YulLiteral",
																										"src": "1667:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1658:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "1658:3:17"
																								},
																								"nativeSrc": "1658:11:17",
																								"nodeType": "YulFunctionCall",
																								"src": "1658:11:17"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1671:1:17",
																								"nodeType": "YulLiteral",
																								"src": "1671:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1654:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "1654:3:17"
																						},
																						"nativeSrc": "1654:19:17",
																						"nodeType": "YulFunctionCall",
																						"src": "1654:19:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1643:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "1643:3:17"
																				},
																				"nativeSrc": "1643:31:17",
																				"nodeType": "YulFunctionCall",
																				"src": "1643:31:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1633:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "1633:2:17"
																		},
																		"nativeSrc": "1633:42:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1633:42:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1626:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1626:6:17"
																},
																"nativeSrc": "1626:50:17",
																"nodeType": "YulFunctionCall",
																"src": "1626:50:17"
															},
															"nativeSrc": "1623:70:17",
															"nodeType": "YulIf",
															"src": "1623:70:17"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1526:173:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1554:6:17",
														"nodeType": "YulTypedName",
														"src": "1554:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1565:5:17",
														"nodeType": "YulTypedName",
														"src": "1565:5:17",
														"type": ""
													}
												],
												"src": "1526:173:17"
											},
											{
												"body": {
													"nativeSrc": "1791:167:17",
													"nodeType": "YulBlock",
													"src": "1791:167:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "1837:16:17",
																"nodeType": "YulBlock",
																"src": "1837:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1846:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1846:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1849:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1849:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1839:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:17"
																			},
																			"nativeSrc": "1839:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1839:12:17"
																		},
																		"nativeSrc": "1839:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "1839:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1812:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "1812:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1821:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1821:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1808:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1808:3:17"
																		},
																		"nativeSrc": "1808:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1808:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1833:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1833:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1804:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1804:3:17"
																},
																"nativeSrc": "1804:32:17",
																"nodeType": "YulFunctionCall",
																"src": "1804:32:17"
															},
															"nativeSrc": "1801:52:17",
															"nodeType": "YulIf",
															"src": "1801:52:17"
														},
														{
															"nativeSrc": "1862:39:17",
															"nodeType": "YulAssignment",
															"src": "1862:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1891:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1891:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1872:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "1872:18:17"
																},
																"nativeSrc": "1872:29:17",
																"nodeType": "YulFunctionCall",
																"src": "1872:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1862:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1862:6:17"
																}
															]
														},
														{
															"nativeSrc": "1910:42:17",
															"nodeType": "YulAssignment",
															"src": "1910:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1937:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1937:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1948:2:17",
																				"nodeType": "YulLiteral",
																				"src": "1948:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1933:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1933:3:17"
																		},
																		"nativeSrc": "1933:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1933:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1920:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "1920:12:17"
																},
																"nativeSrc": "1920:32:17",
																"nodeType": "YulFunctionCall",
																"src": "1920:32:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1910:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1910:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1704:254:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1749:9:17",
														"nodeType": "YulTypedName",
														"src": "1749:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1760:7:17",
														"nodeType": "YulTypedName",
														"src": "1760:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1772:6:17",
														"nodeType": "YulTypedName",
														"src": "1772:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1780:6:17",
														"nodeType": "YulTypedName",
														"src": "1780:6:17",
														"type": ""
													}
												],
												"src": "1704:254:17"
											},
											{
												"body": {
													"nativeSrc": "2067:224:17",
													"nodeType": "YulBlock",
													"src": "2067:224:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "2113:16:17",
																"nodeType": "YulBlock",
																"src": "2113:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2122:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2122:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2125:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2125:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2115:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2115:6:17"
																			},
																			"nativeSrc": "2115:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2115:12:17"
																		},
																		"nativeSrc": "2115:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2115:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2088:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "2088:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2097:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2097:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2084:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2084:3:17"
																		},
																		"nativeSrc": "2084:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2084:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2109:2:17",
																		"nodeType": "YulLiteral",
																		"src": "2109:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2080:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2080:3:17"
																},
																"nativeSrc": "2080:32:17",
																"nodeType": "YulFunctionCall",
																"src": "2080:32:17"
															},
															"nativeSrc": "2077:52:17",
															"nodeType": "YulIf",
															"src": "2077:52:17"
														},
														{
															"nativeSrc": "2138:39:17",
															"nodeType": "YulAssignment",
															"src": "2138:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2167:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "2167:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2148:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "2148:18:17"
																},
																"nativeSrc": "2148:29:17",
																"nodeType": "YulFunctionCall",
																"src": "2148:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2138:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2138:6:17"
																}
															]
														},
														{
															"nativeSrc": "2186:48:17",
															"nodeType": "YulAssignment",
															"src": "2186:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2219:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2219:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2230:2:17",
																				"nodeType": "YulLiteral",
																				"src": "2230:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2215:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2215:3:17"
																		},
																		"nativeSrc": "2215:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2215:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2196:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "2196:18:17"
																},
																"nativeSrc": "2196:38:17",
																"nodeType": "YulFunctionCall",
																"src": "2196:38:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2186:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2186:6:17"
																}
															]
														},
														{
															"nativeSrc": "2243:42:17",
															"nodeType": "YulAssignment",
															"src": "2243:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2270:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2270:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2281:2:17",
																				"nodeType": "YulLiteral",
																				"src": "2281:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2266:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2266:3:17"
																		},
																		"nativeSrc": "2266:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2266:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2253:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "2253:12:17"
																},
																"nativeSrc": "2253:32:17",
																"nodeType": "YulFunctionCall",
																"src": "2253:32:17"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2243:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2243:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1963:328:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2017:9:17",
														"nodeType": "YulTypedName",
														"src": "2017:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2028:7:17",
														"nodeType": "YulTypedName",
														"src": "2028:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2040:6:17",
														"nodeType": "YulTypedName",
														"src": "2040:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2048:6:17",
														"nodeType": "YulTypedName",
														"src": "2048:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2056:6:17",
														"nodeType": "YulTypedName",
														"src": "2056:6:17",
														"type": ""
													}
												],
												"src": "1963:328:17"
											},
											{
												"body": {
													"nativeSrc": "2328:95:17",
													"nodeType": "YulBlock",
													"src": "2328:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2345:1:17",
																		"nodeType": "YulLiteral",
																		"src": "2345:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2352:3:17",
																				"nodeType": "YulLiteral",
																				"src": "2352:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2357:10:17",
																				"nodeType": "YulLiteral",
																				"src": "2357:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2348:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2348:3:17"
																		},
																		"nativeSrc": "2348:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2348:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2338:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2338:6:17"
																},
																"nativeSrc": "2338:31:17",
																"nodeType": "YulFunctionCall",
																"src": "2338:31:17"
															},
															"nativeSrc": "2338:31:17",
															"nodeType": "YulExpressionStatement",
															"src": "2338:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2385:1:17",
																		"nodeType": "YulLiteral",
																		"src": "2385:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2388:4:17",
																		"nodeType": "YulLiteral",
																		"src": "2388:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2378:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2378:6:17"
																},
																"nativeSrc": "2378:15:17",
																"nodeType": "YulFunctionCall",
																"src": "2378:15:17"
															},
															"nativeSrc": "2378:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "2378:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2409:1:17",
																		"nodeType": "YulLiteral",
																		"src": "2409:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2412:4:17",
																		"nodeType": "YulLiteral",
																		"src": "2412:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2402:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:17"
																},
																"nativeSrc": "2402:15:17",
																"nodeType": "YulFunctionCall",
																"src": "2402:15:17"
															},
															"nativeSrc": "2402:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "2402:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "2296:127:17",
												"nodeType": "YulFunctionDefinition",
												"src": "2296:127:17"
											},
											{
												"body": {
													"nativeSrc": "2473:230:17",
													"nodeType": "YulBlock",
													"src": "2473:230:17",
													"statements": [
														{
															"nativeSrc": "2483:19:17",
															"nodeType": "YulAssignment",
															"src": "2483:19:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2499:2:17",
																		"nodeType": "YulLiteral",
																		"src": "2499:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2493:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "2493:5:17"
																},
																"nativeSrc": "2493:9:17",
																"nodeType": "YulFunctionCall",
																"src": "2493:9:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2483:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2483:6:17"
																}
															]
														},
														{
															"nativeSrc": "2511:58:17",
															"nodeType": "YulVariableDeclaration",
															"src": "2511:58:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2533:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "2533:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nativeSrc": "2549:4:17",
																						"nodeType": "YulIdentifier",
																						"src": "2549:4:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2555:2:17",
																						"nodeType": "YulLiteral",
																						"src": "2555:2:17",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2545:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "2545:3:17"
																				},
																				"nativeSrc": "2545:13:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2545:13:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2564:2:17",
																						"nodeType": "YulLiteral",
																						"src": "2564:2:17",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2560:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "2560:3:17"
																				},
																				"nativeSrc": "2560:7:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2560:7:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2541:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2541:3:17"
																		},
																		"nativeSrc": "2541:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2541:27:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2529:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2529:3:17"
																},
																"nativeSrc": "2529:40:17",
																"nodeType": "YulFunctionCall",
																"src": "2529:40:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "2515:10:17",
																	"nodeType": "YulTypedName",
																	"src": "2515:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2644:22:17",
																"nodeType": "YulBlock",
																"src": "2644:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2646:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "2646:16:17"
																			},
																			"nativeSrc": "2646:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2646:18:17"
																		},
																		"nativeSrc": "2646:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2646:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2587:10:17",
																				"nodeType": "YulIdentifier",
																				"src": "2587:10:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2607:2:17",
																								"nodeType": "YulLiteral",
																								"src": "2607:2:17",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2611:1:17",
																								"nodeType": "YulLiteral",
																								"src": "2611:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2603:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "2603:3:17"
																						},
																						"nativeSrc": "2603:10:17",
																						"nodeType": "YulFunctionCall",
																						"src": "2603:10:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2615:1:17",
																						"nodeType": "YulLiteral",
																						"src": "2615:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2599:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "2599:3:17"
																				},
																				"nativeSrc": "2599:18:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2599:18:17"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2584:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "2584:2:17"
																		},
																		"nativeSrc": "2584:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2584:34:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2623:10:17",
																				"nodeType": "YulIdentifier",
																				"src": "2623:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "2635:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2635:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2620:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "2620:2:17"
																		},
																		"nativeSrc": "2620:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2620:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2581:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "2581:2:17"
																},
																"nativeSrc": "2581:62:17",
																"nodeType": "YulFunctionCall",
																"src": "2581:62:17"
															},
															"nativeSrc": "2578:88:17",
															"nodeType": "YulIf",
															"src": "2578:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2682:2:17",
																		"nodeType": "YulLiteral",
																		"src": "2682:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "2686:10:17",
																		"nodeType": "YulIdentifier",
																		"src": "2686:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2675:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2675:6:17"
																},
																"nativeSrc": "2675:22:17",
																"nodeType": "YulFunctionCall",
																"src": "2675:22:17"
															},
															"nativeSrc": "2675:22:17",
															"nodeType": "YulExpressionStatement",
															"src": "2675:22:17"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "2428:275:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "2453:4:17",
														"nodeType": "YulTypedName",
														"src": "2453:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2462:6:17",
														"nodeType": "YulTypedName",
														"src": "2462:6:17",
														"type": ""
													}
												],
												"src": "2428:275:17"
											},
											{
												"body": {
													"nativeSrc": "2777:114:17",
													"nodeType": "YulBlock",
													"src": "2777:114:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "2821:22:17",
																"nodeType": "YulBlock",
																"src": "2821:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2823:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "2823:16:17"
																			},
																			"nativeSrc": "2823:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2823:18:17"
																		},
																		"nativeSrc": "2823:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2823:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2793:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "2793:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2809:2:17",
																						"nodeType": "YulLiteral",
																						"src": "2809:2:17",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2813:1:17",
																						"nodeType": "YulLiteral",
																						"src": "2813:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2805:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "2805:3:17"
																				},
																				"nativeSrc": "2805:10:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2805:10:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2817:1:17",
																				"nodeType": "YulLiteral",
																				"src": "2817:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2801:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2801:3:17"
																		},
																		"nativeSrc": "2801:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2801:18:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2790:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "2790:2:17"
																},
																"nativeSrc": "2790:30:17",
																"nodeType": "YulFunctionCall",
																"src": "2790:30:17"
															},
															"nativeSrc": "2787:56:17",
															"nodeType": "YulIf",
															"src": "2787:56:17"
														},
														{
															"nativeSrc": "2852:33:17",
															"nodeType": "YulAssignment",
															"src": "2852:33:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2868:1:17",
																				"nodeType": "YulLiteral",
																				"src": "2868:1:17",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2871:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2871:6:17"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2864:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2864:3:17"
																		},
																		"nativeSrc": "2864:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2864:14:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2880:4:17",
																		"nodeType": "YulLiteral",
																		"src": "2880:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2860:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2860:3:17"
																},
																"nativeSrc": "2860:25:17",
																"nodeType": "YulFunctionCall",
																"src": "2860:25:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2852:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "2852:4:17"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_address_dyn",
												"nativeSrc": "2708:183:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "2757:6:17",
														"nodeType": "YulTypedName",
														"src": "2757:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "2768:4:17",
														"nodeType": "YulTypedName",
														"src": "2768:4:17",
														"type": ""
													}
												],
												"src": "2708:183:17"
											},
											{
												"body": {
													"nativeSrc": "2960:610:17",
													"nodeType": "YulBlock",
													"src": "2960:610:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "3009:16:17",
																"nodeType": "YulBlock",
																"src": "3009:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3018:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3018:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3021:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3021:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3011:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "3011:6:17"
																			},
																			"nativeSrc": "3011:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3011:12:17"
																		},
																		"nativeSrc": "3011:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "3011:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2988:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "2988:6:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2996:4:17",
																						"nodeType": "YulLiteral",
																						"src": "2996:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2984:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "2984:3:17"
																				},
																				"nativeSrc": "2984:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2984:17:17"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3003:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "3003:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2980:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2980:3:17"
																		},
																		"nativeSrc": "2980:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2980:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2973:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2973:6:17"
																},
																"nativeSrc": "2973:35:17",
																"nodeType": "YulFunctionCall",
																"src": "2973:35:17"
															},
															"nativeSrc": "2970:55:17",
															"nodeType": "YulIf",
															"src": "2970:55:17"
														},
														{
															"nativeSrc": "3034:30:17",
															"nodeType": "YulVariableDeclaration",
															"src": "3034:30:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3057:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "3057:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3044:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "3044:12:17"
																},
																"nativeSrc": "3044:20:17",
																"nodeType": "YulFunctionCall",
																"src": "3044:20:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3038:2:17",
																	"nodeType": "YulTypedName",
																	"src": "3038:2:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3073:14:17",
															"nodeType": "YulVariableDeclaration",
															"src": "3073:14:17",
															"value": {
																"kind": "number",
																"nativeSrc": "3083:4:17",
																"nodeType": "YulLiteral",
																"src": "3083:4:17",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "3077:2:17",
																	"nodeType": "YulTypedName",
																	"src": "3077:2:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3096:71:17",
															"nodeType": "YulVariableDeclaration",
															"src": "3096:71:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "3163:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "3163:2:17"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nativeSrc": "3123:39:17",
																			"nodeType": "YulIdentifier",
																			"src": "3123:39:17"
																		},
																		"nativeSrc": "3123:43:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3123:43:17"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "3107:15:17",
																	"nodeType": "YulIdentifier",
																	"src": "3107:15:17"
																},
																"nativeSrc": "3107:60:17",
																"nodeType": "YulFunctionCall",
																"src": "3107:60:17"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "3100:3:17",
																	"nodeType": "YulTypedName",
																	"src": "3100:3:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3176:16:17",
															"nodeType": "YulVariableDeclaration",
															"src": "3176:16:17",
															"value": {
																"name": "dst",
																"nativeSrc": "3189:3:17",
																"nodeType": "YulIdentifier",
																"src": "3189:3:17"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nativeSrc": "3180:5:17",
																	"nodeType": "YulTypedName",
																	"src": "3180:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "3208:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "3208:3:17"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3213:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "3213:2:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3201:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3201:6:17"
																},
																"nativeSrc": "3201:15:17",
																"nodeType": "YulFunctionCall",
																"src": "3201:15:17"
															},
															"nativeSrc": "3201:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "3201:15:17"
														},
														{
															"nativeSrc": "3225:21:17",
															"nodeType": "YulAssignment",
															"src": "3225:21:17",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "3236:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "3236:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3241:4:17",
																		"nodeType": "YulLiteral",
																		"src": "3241:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3232:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3232:3:17"
																},
																"nativeSrc": "3232:14:17",
																"nodeType": "YulFunctionCall",
																"src": "3232:14:17"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "3225:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3225:3:17"
																}
															]
														},
														{
															"nativeSrc": "3255:48:17",
															"nodeType": "YulVariableDeclaration",
															"src": "3255:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3277:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "3277:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3289:1:17",
																						"nodeType": "YulLiteral",
																						"src": "3289:1:17",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "3292:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "3292:2:17"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3285:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "3285:3:17"
																				},
																				"nativeSrc": "3285:10:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3285:10:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3273:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3273:3:17"
																		},
																		"nativeSrc": "3273:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3273:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3298:4:17",
																		"nodeType": "YulLiteral",
																		"src": "3298:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3269:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3269:3:17"
																},
																"nativeSrc": "3269:34:17",
																"nodeType": "YulFunctionCall",
																"src": "3269:34:17"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "3259:6:17",
																	"nodeType": "YulTypedName",
																	"src": "3259:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3331:16:17",
																"nodeType": "YulBlock",
																"src": "3331:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3340:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3340:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3343:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3343:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3333:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "3333:6:17"
																			},
																			"nativeSrc": "3333:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3333:12:17"
																		},
																		"nativeSrc": "3333:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "3333:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "3318:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "3318:6:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3326:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "3326:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3315:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "3315:2:17"
																},
																"nativeSrc": "3315:15:17",
																"nodeType": "YulFunctionCall",
																"src": "3315:15:17"
															},
															"nativeSrc": "3312:35:17",
															"nodeType": "YulIf",
															"src": "3312:35:17"
														},
														{
															"nativeSrc": "3356:28:17",
															"nodeType": "YulVariableDeclaration",
															"src": "3356:28:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3371:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "3371:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3379:4:17",
																		"nodeType": "YulLiteral",
																		"src": "3379:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3367:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3367:3:17"
																},
																"nativeSrc": "3367:17:17",
																"nodeType": "YulFunctionCall",
																"src": "3367:17:17"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "3360:3:17",
																	"nodeType": "YulTypedName",
																	"src": "3360:3:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3449:92:17",
																"nodeType": "YulBlock",
																"src": "3449:92:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "3470:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "3470:3:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "3494:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "3494:3:17"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nativeSrc": "3475:18:17",
																						"nodeType": "YulIdentifier",
																						"src": "3475:18:17"
																					},
																					"nativeSrc": "3475:23:17",
																					"nodeType": "YulFunctionCall",
																					"src": "3475:23:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3463:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "3463:6:17"
																			},
																			"nativeSrc": "3463:36:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3463:36:17"
																		},
																		"nativeSrc": "3463:36:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "3463:36:17"
																	},
																	{
																		"nativeSrc": "3512:19:17",
																		"nodeType": "YulAssignment",
																		"src": "3512:19:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "3523:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "3523:3:17"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "3528:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "3528:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3519:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "3519:3:17"
																			},
																			"nativeSrc": "3519:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3519:12:17"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "3512:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "3512:3:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3404:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "3404:3:17"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "3409:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "3409:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3401:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "3401:2:17"
																},
																"nativeSrc": "3401:15:17",
																"nodeType": "YulFunctionCall",
																"src": "3401:15:17"
															},
															"nativeSrc": "3393:148:17",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3417:23:17",
																"nodeType": "YulBlock",
																"src": "3417:23:17",
																"statements": [
																	{
																		"nativeSrc": "3419:19:17",
																		"nodeType": "YulAssignment",
																		"src": "3419:19:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "3430:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "3430:3:17"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "3435:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "3435:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3426:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "3426:3:17"
																			},
																			"nativeSrc": "3426:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3426:12:17"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "3419:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "3419:3:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3397:3:17",
																"nodeType": "YulBlock",
																"src": "3397:3:17",
																"statements": []
															},
															"src": "3393:148:17"
														},
														{
															"nativeSrc": "3550:14:17",
															"nodeType": "YulAssignment",
															"src": "3550:14:17",
															"value": {
																"name": "dst_1",
																"nativeSrc": "3559:5:17",
																"nodeType": "YulIdentifier",
																"src": "3559:5:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3550:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "3550:5:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_address_dyn",
												"nativeSrc": "2896:674:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2934:6:17",
														"nodeType": "YulTypedName",
														"src": "2934:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2942:3:17",
														"nodeType": "YulTypedName",
														"src": "2942:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2950:5:17",
														"nodeType": "YulTypedName",
														"src": "2950:5:17",
														"type": ""
													}
												],
												"src": "2896:674:17"
											},
											{
												"body": {
													"nativeSrc": "3650:332:17",
													"nodeType": "YulBlock",
													"src": "3650:332:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "3694:22:17",
																"nodeType": "YulBlock",
																"src": "3694:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3696:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "3696:16:17"
																			},
																			"nativeSrc": "3696:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3696:18:17"
																		},
																		"nativeSrc": "3696:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "3696:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3666:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "3666:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3682:2:17",
																						"nodeType": "YulLiteral",
																						"src": "3682:2:17",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3686:1:17",
																						"nodeType": "YulLiteral",
																						"src": "3686:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3678:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "3678:3:17"
																				},
																				"nativeSrc": "3678:10:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3678:10:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3690:1:17",
																				"nodeType": "YulLiteral",
																				"src": "3690:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3674:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3674:3:17"
																		},
																		"nativeSrc": "3674:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3674:18:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3663:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "3663:2:17"
																},
																"nativeSrc": "3663:30:17",
																"nodeType": "YulFunctionCall",
																"src": "3663:30:17"
															},
															"nativeSrc": "3660:56:17",
															"nodeType": "YulIf",
															"src": "3660:56:17"
														},
														{
															"nativeSrc": "3725:66:17",
															"nodeType": "YulAssignment",
															"src": "3725:66:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "3762:6:17",
																								"nodeType": "YulIdentifier",
																								"src": "3762:6:17"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3770:2:17",
																								"nodeType": "YulLiteral",
																								"src": "3770:2:17",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "3758:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "3758:3:17"
																						},
																						"nativeSrc": "3758:15:17",
																						"nodeType": "YulFunctionCall",
																						"src": "3758:15:17"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3779:2:17",
																								"nodeType": "YulLiteral",
																								"src": "3779:2:17",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "3775:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "3775:3:17"
																						},
																						"nativeSrc": "3775:7:17",
																						"nodeType": "YulFunctionCall",
																						"src": "3775:7:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "3754:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "3754:3:17"
																				},
																				"nativeSrc": "3754:29:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3754:29:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3785:4:17",
																				"nodeType": "YulLiteral",
																				"src": "3785:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3750:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3750:3:17"
																		},
																		"nativeSrc": "3750:40:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3750:40:17"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "3734:15:17",
																	"nodeType": "YulIdentifier",
																	"src": "3734:15:17"
																},
																"nativeSrc": "3734:57:17",
																"nodeType": "YulFunctionCall",
																"src": "3734:57:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3725:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "3725:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "3807:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "3807:5:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3814:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "3814:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3800:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3800:6:17"
																},
																"nativeSrc": "3800:21:17",
																"nodeType": "YulFunctionCall",
																"src": "3800:21:17"
															},
															"nativeSrc": "3800:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "3800:21:17"
														},
														{
															"body": {
																"nativeSrc": "3859:16:17",
																"nodeType": "YulBlock",
																"src": "3859:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3868:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3868:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3871:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3871:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3861:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "3861:6:17"
																			},
																			"nativeSrc": "3861:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3861:12:17"
																		},
																		"nativeSrc": "3861:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "3861:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "3840:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "3840:3:17"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3845:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "3845:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3836:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3836:3:17"
																		},
																		"nativeSrc": "3836:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3836:16:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3854:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "3854:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3833:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "3833:2:17"
																},
																"nativeSrc": "3833:25:17",
																"nodeType": "YulFunctionCall",
																"src": "3833:25:17"
															},
															"nativeSrc": "3830:45:17",
															"nodeType": "YulIf",
															"src": "3830:45:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array",
																				"nativeSrc": "3901:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "3901:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3908:4:17",
																				"nodeType": "YulLiteral",
																				"src": "3908:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3897:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3897:3:17"
																		},
																		"nativeSrc": "3897:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3897:16:17"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "3915:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "3915:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3920:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "3920:6:17"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "3884:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "3884:12:17"
																},
																"nativeSrc": "3884:43:17",
																"nodeType": "YulFunctionCall",
																"src": "3884:43:17"
															},
															"nativeSrc": "3884:43:17",
															"nodeType": "YulExpressionStatement",
															"src": "3884:43:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array",
																						"nativeSrc": "3951:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "3951:5:17"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "3958:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "3958:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3947:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "3947:3:17"
																				},
																				"nativeSrc": "3947:18:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3947:18:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3967:4:17",
																				"nodeType": "YulLiteral",
																				"src": "3967:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3943:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3943:3:17"
																		},
																		"nativeSrc": "3943:29:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3943:29:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3974:1:17",
																		"nodeType": "YulLiteral",
																		"src": "3974:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3936:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3936:6:17"
																},
																"nativeSrc": "3936:40:17",
																"nodeType": "YulFunctionCall",
																"src": "3936:40:17"
															},
															"nativeSrc": "3936:40:17",
															"nodeType": "YulExpressionStatement",
															"src": "3936:40:17"
														}
													]
												},
												"name": "abi_decode_available_length_string",
												"nativeSrc": "3575:407:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3619:3:17",
														"nodeType": "YulTypedName",
														"src": "3619:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3624:6:17",
														"nodeType": "YulTypedName",
														"src": "3624:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3632:3:17",
														"nodeType": "YulTypedName",
														"src": "3632:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3640:5:17",
														"nodeType": "YulTypedName",
														"src": "3640:5:17",
														"type": ""
													}
												],
												"src": "3575:407:17"
											},
											{
												"body": {
													"nativeSrc": "4040:169:17",
													"nodeType": "YulBlock",
													"src": "4040:169:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "4089:16:17",
																"nodeType": "YulBlock",
																"src": "4089:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4098:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4098:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4101:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4101:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4091:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4091:6:17"
																			},
																			"nativeSrc": "4091:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4091:12:17"
																		},
																		"nativeSrc": "4091:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "4091:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "4068:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "4068:6:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4076:4:17",
																						"nodeType": "YulLiteral",
																						"src": "4076:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4064:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4064:3:17"
																				},
																				"nativeSrc": "4064:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4064:17:17"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "4083:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "4083:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4060:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4060:3:17"
																		},
																		"nativeSrc": "4060:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4060:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4053:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4053:6:17"
																},
																"nativeSrc": "4053:35:17",
																"nodeType": "YulFunctionCall",
																"src": "4053:35:17"
															},
															"nativeSrc": "4050:55:17",
															"nodeType": "YulIf",
															"src": "4050:55:17"
														},
														{
															"nativeSrc": "4114:89:17",
															"nodeType": "YulAssignment",
															"src": "4114:89:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4162:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4162:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4170:4:17",
																				"nodeType": "YulLiteral",
																				"src": "4170:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4158:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4158:3:17"
																		},
																		"nativeSrc": "4158:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4158:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4190:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4190:6:17"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "4177:12:17",
																			"nodeType": "YulIdentifier",
																			"src": "4177:12:17"
																		},
																		"nativeSrc": "4177:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4177:20:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4199:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "4199:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nativeSrc": "4123:34:17",
																	"nodeType": "YulIdentifier",
																	"src": "4123:34:17"
																},
																"nativeSrc": "4123:80:17",
																"nodeType": "YulFunctionCall",
																"src": "4123:80:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "4114:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "4114:5:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nativeSrc": "3987:222:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4014:6:17",
														"nodeType": "YulTypedName",
														"src": "4014:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4022:3:17",
														"nodeType": "YulTypedName",
														"src": "4022:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "4030:5:17",
														"nodeType": "YulTypedName",
														"src": "4030:5:17",
														"type": ""
													}
												],
												"src": "3987:222:17"
											},
											{
												"body": {
													"nativeSrc": "4361:1142:17",
													"nodeType": "YulBlock",
													"src": "4361:1142:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "4407:16:17",
																"nodeType": "YulBlock",
																"src": "4407:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4416:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4416:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4419:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4419:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4409:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4409:6:17"
																			},
																			"nativeSrc": "4409:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4409:12:17"
																		},
																		"nativeSrc": "4409:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "4409:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4382:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "4382:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4391:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4391:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4378:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4378:3:17"
																		},
																		"nativeSrc": "4378:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4378:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4403:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4403:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4374:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4374:3:17"
																},
																"nativeSrc": "4374:32:17",
																"nodeType": "YulFunctionCall",
																"src": "4374:32:17"
															},
															"nativeSrc": "4371:52:17",
															"nodeType": "YulIf",
															"src": "4371:52:17"
														},
														{
															"nativeSrc": "4432:37:17",
															"nodeType": "YulVariableDeclaration",
															"src": "4432:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4459:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "4459:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4446:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "4446:12:17"
																},
																"nativeSrc": "4446:23:17",
																"nodeType": "YulFunctionCall",
																"src": "4446:23:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "4436:6:17",
																	"nodeType": "YulTypedName",
																	"src": "4436:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4478:28:17",
															"nodeType": "YulVariableDeclaration",
															"src": "4478:28:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4496:2:17",
																				"nodeType": "YulLiteral",
																				"src": "4496:2:17",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4500:1:17",
																				"nodeType": "YulLiteral",
																				"src": "4500:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4492:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4492:3:17"
																		},
																		"nativeSrc": "4492:10:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4492:10:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4504:1:17",
																		"nodeType": "YulLiteral",
																		"src": "4504:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4488:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4488:3:17"
																},
																"nativeSrc": "4488:18:17",
																"nodeType": "YulFunctionCall",
																"src": "4488:18:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4482:2:17",
																	"nodeType": "YulTypedName",
																	"src": "4482:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4533:16:17",
																"nodeType": "YulBlock",
																"src": "4533:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4542:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4542:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4545:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4545:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4535:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4535:6:17"
																			},
																			"nativeSrc": "4535:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4535:12:17"
																		},
																		"nativeSrc": "4535:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "4535:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4521:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "4521:6:17"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4529:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "4529:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4518:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "4518:2:17"
																},
																"nativeSrc": "4518:14:17",
																"nodeType": "YulFunctionCall",
																"src": "4518:14:17"
															},
															"nativeSrc": "4515:34:17",
															"nodeType": "YulIf",
															"src": "4515:34:17"
														},
														{
															"nativeSrc": "4558:71:17",
															"nodeType": "YulAssignment",
															"src": "4558:71:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4601:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4601:9:17"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "4612:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4612:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4597:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4597:3:17"
																		},
																		"nativeSrc": "4597:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4597:22:17"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4621:7:17",
																		"nodeType": "YulIdentifier",
																		"src": "4621:7:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn",
																	"nativeSrc": "4568:28:17",
																	"nodeType": "YulIdentifier",
																	"src": "4568:28:17"
																},
																"nativeSrc": "4568:61:17",
																"nodeType": "YulFunctionCall",
																"src": "4568:61:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4558:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4558:6:17"
																}
															]
														},
														{
															"nativeSrc": "4638:12:17",
															"nodeType": "YulVariableDeclaration",
															"src": "4638:12:17",
															"value": {
																"kind": "number",
																"nativeSrc": "4648:2:17",
																"nodeType": "YulLiteral",
																"src": "4648:2:17",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "4642:2:17",
																	"nodeType": "YulTypedName",
																	"src": "4642:2:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4659:48:17",
															"nodeType": "YulVariableDeclaration",
															"src": "4659:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4692:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4692:9:17"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "4703:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "4703:2:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4688:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4688:3:17"
																		},
																		"nativeSrc": "4688:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4688:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4675:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "4675:12:17"
																},
																"nativeSrc": "4675:32:17",
																"nodeType": "YulFunctionCall",
																"src": "4675:32:17"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "4663:8:17",
																	"nodeType": "YulTypedName",
																	"src": "4663:8:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4736:16:17",
																"nodeType": "YulBlock",
																"src": "4736:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4745:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4745:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4748:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4748:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4738:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4738:6:17"
																			},
																			"nativeSrc": "4738:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4738:12:17"
																		},
																		"nativeSrc": "4738:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "4738:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "4722:8:17",
																		"nodeType": "YulIdentifier",
																		"src": "4722:8:17"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4732:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "4732:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4719:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "4719:2:17"
																},
																"nativeSrc": "4719:16:17",
																"nodeType": "YulFunctionCall",
																"src": "4719:16:17"
															},
															"nativeSrc": "4716:36:17",
															"nodeType": "YulIf",
															"src": "4716:36:17"
														},
														{
															"nativeSrc": "4761:34:17",
															"nodeType": "YulVariableDeclaration",
															"src": "4761:34:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4775:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "4775:9:17"
																	},
																	{
																		"name": "offset_1",
																		"nativeSrc": "4786:8:17",
																		"nodeType": "YulIdentifier",
																		"src": "4786:8:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4771:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4771:3:17"
																},
																"nativeSrc": "4771:24:17",
																"nodeType": "YulFunctionCall",
																"src": "4771:24:17"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "4765:2:17",
																	"nodeType": "YulTypedName",
																	"src": "4765:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4843:16:17",
																"nodeType": "YulBlock",
																"src": "4843:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4852:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4852:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4855:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4855:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4845:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4845:6:17"
																			},
																			"nativeSrc": "4845:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4845:12:17"
																		},
																		"nativeSrc": "4845:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "4845:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nativeSrc": "4822:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "4822:2:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4826:4:17",
																						"nodeType": "YulLiteral",
																						"src": "4826:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4818:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4818:3:17"
																				},
																				"nativeSrc": "4818:13:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4818:13:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4814:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4814:3:17"
																		},
																		"nativeSrc": "4814:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4814:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4807:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4807:6:17"
																},
																"nativeSrc": "4807:35:17",
																"nodeType": "YulFunctionCall",
																"src": "4807:35:17"
															},
															"nativeSrc": "4804:55:17",
															"nodeType": "YulIf",
															"src": "4804:55:17"
														},
														{
															"nativeSrc": "4868:26:17",
															"nodeType": "YulVariableDeclaration",
															"src": "4868:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "4891:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "4891:2:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4878:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "4878:12:17"
																},
																"nativeSrc": "4878:16:17",
																"nodeType": "YulFunctionCall",
																"src": "4878:16:17"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "4872:2:17",
																	"nodeType": "YulTypedName",
																	"src": "4872:2:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4903:71:17",
															"nodeType": "YulVariableDeclaration",
															"src": "4903:71:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_4",
																				"nativeSrc": "4970:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "4970:2:17"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nativeSrc": "4930:39:17",
																			"nodeType": "YulIdentifier",
																			"src": "4930:39:17"
																		},
																		"nativeSrc": "4930:43:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4930:43:17"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "4914:15:17",
																	"nodeType": "YulIdentifier",
																	"src": "4914:15:17"
																},
																"nativeSrc": "4914:60:17",
																"nodeType": "YulFunctionCall",
																"src": "4914:60:17"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "4907:3:17",
																	"nodeType": "YulTypedName",
																	"src": "4907:3:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4983:16:17",
															"nodeType": "YulVariableDeclaration",
															"src": "4983:16:17",
															"value": {
																"name": "dst",
																"nativeSrc": "4996:3:17",
																"nodeType": "YulIdentifier",
																"src": "4996:3:17"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nativeSrc": "4987:5:17",
																	"nodeType": "YulTypedName",
																	"src": "4987:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "5015:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "5015:3:17"
																	},
																	{
																		"name": "_4",
																		"nativeSrc": "5020:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "5020:2:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5008:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5008:6:17"
																},
																"nativeSrc": "5008:15:17",
																"nodeType": "YulFunctionCall",
																"src": "5008:15:17"
															},
															"nativeSrc": "5008:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "5008:15:17"
														},
														{
															"nativeSrc": "5032:19:17",
															"nodeType": "YulAssignment",
															"src": "5032:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "5043:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "5043:3:17"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "5048:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "5048:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5039:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5039:3:17"
																},
																"nativeSrc": "5039:12:17",
																"nodeType": "YulFunctionCall",
																"src": "5039:12:17"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "5032:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5032:3:17"
																}
															]
														},
														{
															"nativeSrc": "5060:42:17",
															"nodeType": "YulVariableDeclaration",
															"src": "5060:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nativeSrc": "5082:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "5082:2:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5090:1:17",
																						"nodeType": "YulLiteral",
																						"src": "5090:1:17",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_4",
																						"nativeSrc": "5093:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "5093:2:17"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "5086:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "5086:3:17"
																				},
																				"nativeSrc": "5086:10:17",
																				"nodeType": "YulFunctionCall",
																				"src": "5086:10:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5078:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5078:3:17"
																		},
																		"nativeSrc": "5078:19:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5078:19:17"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "5099:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "5099:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5074:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5074:3:17"
																},
																"nativeSrc": "5074:28:17",
																"nodeType": "YulFunctionCall",
																"src": "5074:28:17"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "5064:6:17",
																	"nodeType": "YulTypedName",
																	"src": "5064:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5134:16:17",
																"nodeType": "YulBlock",
																"src": "5134:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5143:1:17",
																					"nodeType": "YulLiteral",
																					"src": "5143:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5146:1:17",
																					"nodeType": "YulLiteral",
																					"src": "5146:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5136:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "5136:6:17"
																			},
																			"nativeSrc": "5136:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "5136:12:17"
																		},
																		"nativeSrc": "5136:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "5136:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "5117:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "5117:6:17"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "5125:7:17",
																		"nodeType": "YulIdentifier",
																		"src": "5125:7:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5114:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "5114:2:17"
																},
																"nativeSrc": "5114:19:17",
																"nodeType": "YulFunctionCall",
																"src": "5114:19:17"
															},
															"nativeSrc": "5111:39:17",
															"nodeType": "YulIf",
															"src": "5111:39:17"
														},
														{
															"nativeSrc": "5159:22:17",
															"nodeType": "YulVariableDeclaration",
															"src": "5159:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "5174:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "5174:2:17"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "5178:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "5178:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5170:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5170:3:17"
																},
																"nativeSrc": "5170:11:17",
																"nodeType": "YulFunctionCall",
																"src": "5170:11:17"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "5163:3:17",
																	"nodeType": "YulTypedName",
																	"src": "5163:3:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5246:227:17",
																"nodeType": "YulBlock",
																"src": "5246:227:17",
																"statements": [
																	{
																		"nativeSrc": "5260:36:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5260:36:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "5292:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "5292:3:17"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nativeSrc": "5279:12:17",
																				"nodeType": "YulIdentifier",
																				"src": "5279:12:17"
																			},
																			"nativeSrc": "5279:17:17",
																			"nodeType": "YulFunctionCall",
																			"src": "5279:17:17"
																		},
																		"variables": [
																			{
																				"name": "innerOffset",
																				"nativeSrc": "5264:11:17",
																				"nodeType": "YulTypedName",
																				"src": "5264:11:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "5332:16:17",
																			"nodeType": "YulBlock",
																			"src": "5332:16:17",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5341:1:17",
																								"nodeType": "YulLiteral",
																								"src": "5341:1:17",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5344:1:17",
																								"nodeType": "YulLiteral",
																								"src": "5344:1:17",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "5334:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "5334:6:17"
																						},
																						"nativeSrc": "5334:12:17",
																						"nodeType": "YulFunctionCall",
																						"src": "5334:12:17"
																					},
																					"nativeSrc": "5334:12:17",
																					"nodeType": "YulExpressionStatement",
																					"src": "5334:12:17"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "innerOffset",
																					"nativeSrc": "5315:11:17",
																					"nodeType": "YulIdentifier",
																					"src": "5315:11:17"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "5328:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "5328:2:17"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "5312:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "5312:2:17"
																			},
																			"nativeSrc": "5312:19:17",
																			"nodeType": "YulFunctionCall",
																			"src": "5312:19:17"
																		},
																		"nativeSrc": "5309:39:17",
																		"nodeType": "YulIf",
																		"src": "5309:39:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "5368:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "5368:3:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nativeSrc": "5399:2:17",
																											"nodeType": "YulIdentifier",
																											"src": "5399:2:17"
																										},
																										{
																											"name": "innerOffset",
																											"nativeSrc": "5403:11:17",
																											"nodeType": "YulIdentifier",
																											"src": "5403:11:17"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "5395:3:17",
																										"nodeType": "YulIdentifier",
																										"src": "5395:3:17"
																									},
																									"nativeSrc": "5395:20:17",
																									"nodeType": "YulFunctionCall",
																									"src": "5395:20:17"
																								},
																								{
																									"name": "_2",
																									"nativeSrc": "5417:2:17",
																									"nodeType": "YulIdentifier",
																									"src": "5417:2:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5391:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "5391:3:17"
																							},
																							"nativeSrc": "5391:29:17",
																							"nodeType": "YulFunctionCall",
																							"src": "5391:29:17"
																						},
																						{
																							"name": "dataEnd",
																							"nativeSrc": "5422:7:17",
																							"nodeType": "YulIdentifier",
																							"src": "5422:7:17"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_string",
																						"nativeSrc": "5373:17:17",
																						"nodeType": "YulIdentifier",
																						"src": "5373:17:17"
																					},
																					"nativeSrc": "5373:57:17",
																					"nodeType": "YulFunctionCall",
																					"src": "5373:57:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5361:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "5361:6:17"
																			},
																			"nativeSrc": "5361:70:17",
																			"nodeType": "YulFunctionCall",
																			"src": "5361:70:17"
																		},
																		"nativeSrc": "5361:70:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "5361:70:17"
																	},
																	{
																		"nativeSrc": "5444:19:17",
																		"nodeType": "YulAssignment",
																		"src": "5444:19:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "5455:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "5455:3:17"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "5460:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "5460:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5451:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "5451:3:17"
																			},
																			"nativeSrc": "5451:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "5451:12:17"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "5444:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "5444:3:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5201:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "5201:3:17"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "5206:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "5206:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5198:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "5198:2:17"
																},
																"nativeSrc": "5198:15:17",
																"nodeType": "YulFunctionCall",
																"src": "5198:15:17"
															},
															"nativeSrc": "5190:283:17",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5214:23:17",
																"nodeType": "YulBlock",
																"src": "5214:23:17",
																"statements": [
																	{
																		"nativeSrc": "5216:19:17",
																		"nodeType": "YulAssignment",
																		"src": "5216:19:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "5227:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "5227:3:17"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "5232:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "5232:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5223:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "5223:3:17"
																			},
																			"nativeSrc": "5223:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "5223:12:17"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "5216:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "5216:3:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5194:3:17",
																"nodeType": "YulBlock",
																"src": "5194:3:17",
																"statements": []
															},
															"src": "5190:283:17"
														},
														{
															"nativeSrc": "5482:15:17",
															"nodeType": "YulAssignment",
															"src": "5482:15:17",
															"value": {
																"name": "dst_1",
																"nativeSrc": "5492:5:17",
																"nodeType": "YulIdentifier",
																"src": "5492:5:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5482:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5482:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "4214:1289:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4319:9:17",
														"nodeType": "YulTypedName",
														"src": "4319:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4330:7:17",
														"nodeType": "YulTypedName",
														"src": "4330:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4342:6:17",
														"nodeType": "YulTypedName",
														"src": "4342:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4350:6:17",
														"nodeType": "YulTypedName",
														"src": "4350:6:17",
														"type": ""
													}
												],
												"src": "4214:1289:17"
											},
											{
												"body": {
													"nativeSrc": "5578:116:17",
													"nodeType": "YulBlock",
													"src": "5578:116:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "5624:16:17",
																"nodeType": "YulBlock",
																"src": "5624:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5633:1:17",
																					"nodeType": "YulLiteral",
																					"src": "5633:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5636:1:17",
																					"nodeType": "YulLiteral",
																					"src": "5636:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5626:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "5626:6:17"
																			},
																			"nativeSrc": "5626:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "5626:12:17"
																		},
																		"nativeSrc": "5626:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "5626:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5599:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "5599:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5608:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5608:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5595:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5595:3:17"
																		},
																		"nativeSrc": "5595:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5595:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5620:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5620:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5591:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5591:3:17"
																},
																"nativeSrc": "5591:32:17",
																"nodeType": "YulFunctionCall",
																"src": "5591:32:17"
															},
															"nativeSrc": "5588:52:17",
															"nodeType": "YulIf",
															"src": "5588:52:17"
														},
														{
															"nativeSrc": "5649:39:17",
															"nodeType": "YulAssignment",
															"src": "5649:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5678:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "5678:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5659:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "5659:18:17"
																},
																"nativeSrc": "5659:29:17",
																"nodeType": "YulFunctionCall",
																"src": "5659:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5649:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5649:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5508:186:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5544:9:17",
														"nodeType": "YulTypedName",
														"src": "5544:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5555:7:17",
														"nodeType": "YulTypedName",
														"src": "5555:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5567:6:17",
														"nodeType": "YulTypedName",
														"src": "5567:6:17",
														"type": ""
													}
												],
												"src": "5508:186:17"
											},
											{
												"body": {
													"nativeSrc": "5800:76:17",
													"nodeType": "YulBlock",
													"src": "5800:76:17",
													"statements": [
														{
															"nativeSrc": "5810:26:17",
															"nodeType": "YulAssignment",
															"src": "5810:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5822:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "5822:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5833:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5833:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5818:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5818:3:17"
																},
																"nativeSrc": "5818:18:17",
																"nodeType": "YulFunctionCall",
																"src": "5818:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5810:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "5810:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5852:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "5852:9:17"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5863:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "5863:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5845:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5845:6:17"
																},
																"nativeSrc": "5845:25:17",
																"nodeType": "YulFunctionCall",
																"src": "5845:25:17"
															},
															"nativeSrc": "5845:25:17",
															"nodeType": "YulExpressionStatement",
															"src": "5845:25:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5699:177:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5769:9:17",
														"nodeType": "YulTypedName",
														"src": "5769:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5780:6:17",
														"nodeType": "YulTypedName",
														"src": "5780:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5791:4:17",
														"nodeType": "YulTypedName",
														"src": "5791:4:17",
														"type": ""
													}
												],
												"src": "5699:177:17"
											},
											{
												"body": {
													"nativeSrc": "5965:263:17",
													"nodeType": "YulBlock",
													"src": "5965:263:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "6011:16:17",
																"nodeType": "YulBlock",
																"src": "6011:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6020:1:17",
																					"nodeType": "YulLiteral",
																					"src": "6020:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6023:1:17",
																					"nodeType": "YulLiteral",
																					"src": "6023:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6013:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "6013:6:17"
																			},
																			"nativeSrc": "6013:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "6013:12:17"
																		},
																		"nativeSrc": "6013:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "6013:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5986:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "5986:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5995:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5995:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5982:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5982:3:17"
																		},
																		"nativeSrc": "5982:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5982:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6007:2:17",
																		"nodeType": "YulLiteral",
																		"src": "6007:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5978:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5978:3:17"
																},
																"nativeSrc": "5978:32:17",
																"nodeType": "YulFunctionCall",
																"src": "5978:32:17"
															},
															"nativeSrc": "5975:52:17",
															"nodeType": "YulIf",
															"src": "5975:52:17"
														},
														{
															"nativeSrc": "6036:39:17",
															"nodeType": "YulAssignment",
															"src": "6036:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6065:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "6065:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "6046:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "6046:18:17"
																},
																"nativeSrc": "6046:29:17",
																"nodeType": "YulFunctionCall",
																"src": "6046:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6036:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6036:6:17"
																}
															]
														},
														{
															"nativeSrc": "6084:45:17",
															"nodeType": "YulVariableDeclaration",
															"src": "6084:45:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6114:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6114:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6125:2:17",
																				"nodeType": "YulLiteral",
																				"src": "6125:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6110:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6110:3:17"
																		},
																		"nativeSrc": "6110:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6110:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6097:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "6097:12:17"
																},
																"nativeSrc": "6097:32:17",
																"nodeType": "YulFunctionCall",
																"src": "6097:32:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "6088:5:17",
																	"nodeType": "YulTypedName",
																	"src": "6088:5:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6182:16:17",
																"nodeType": "YulBlock",
																"src": "6182:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6191:1:17",
																					"nodeType": "YulLiteral",
																					"src": "6191:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6194:1:17",
																					"nodeType": "YulLiteral",
																					"src": "6194:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6184:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "6184:6:17"
																			},
																			"nativeSrc": "6184:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "6184:12:17"
																		},
																		"nativeSrc": "6184:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "6184:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6151:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "6151:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "6172:5:17",
																								"nodeType": "YulIdentifier",
																								"src": "6172:5:17"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "6165:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "6165:6:17"
																						},
																						"nativeSrc": "6165:13:17",
																						"nodeType": "YulFunctionCall",
																						"src": "6165:13:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6158:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "6158:6:17"
																				},
																				"nativeSrc": "6158:21:17",
																				"nodeType": "YulFunctionCall",
																				"src": "6158:21:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6148:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "6148:2:17"
																		},
																		"nativeSrc": "6148:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6148:32:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6141:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6141:6:17"
																},
																"nativeSrc": "6141:40:17",
																"nodeType": "YulFunctionCall",
																"src": "6141:40:17"
															},
															"nativeSrc": "6138:60:17",
															"nodeType": "YulIf",
															"src": "6138:60:17"
														},
														{
															"nativeSrc": "6207:15:17",
															"nodeType": "YulAssignment",
															"src": "6207:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "6217:5:17",
																"nodeType": "YulIdentifier",
																"src": "6217:5:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6207:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6207:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "5881:347:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5923:9:17",
														"nodeType": "YulTypedName",
														"src": "5923:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5934:7:17",
														"nodeType": "YulTypedName",
														"src": "5934:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5946:6:17",
														"nodeType": "YulTypedName",
														"src": "5946:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5954:6:17",
														"nodeType": "YulTypedName",
														"src": "5954:6:17",
														"type": ""
													}
												],
												"src": "5881:347:17"
											},
											{
												"body": {
													"nativeSrc": "6330:293:17",
													"nodeType": "YulBlock",
													"src": "6330:293:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "6376:16:17",
																"nodeType": "YulBlock",
																"src": "6376:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6385:1:17",
																					"nodeType": "YulLiteral",
																					"src": "6385:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6388:1:17",
																					"nodeType": "YulLiteral",
																					"src": "6388:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6378:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "6378:6:17"
																			},
																			"nativeSrc": "6378:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "6378:12:17"
																		},
																		"nativeSrc": "6378:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "6378:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6351:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "6351:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6360:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6360:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6347:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6347:3:17"
																		},
																		"nativeSrc": "6347:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6347:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6372:2:17",
																		"nodeType": "YulLiteral",
																		"src": "6372:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6343:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6343:3:17"
																},
																"nativeSrc": "6343:32:17",
																"nodeType": "YulFunctionCall",
																"src": "6343:32:17"
															},
															"nativeSrc": "6340:52:17",
															"nodeType": "YulIf",
															"src": "6340:52:17"
														},
														{
															"nativeSrc": "6401:33:17",
															"nodeType": "YulAssignment",
															"src": "6401:33:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6424:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "6424:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6411:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "6411:12:17"
																},
																"nativeSrc": "6411:23:17",
																"nodeType": "YulFunctionCall",
																"src": "6411:23:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6401:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6401:6:17"
																}
															]
														},
														{
															"nativeSrc": "6443:46:17",
															"nodeType": "YulVariableDeclaration",
															"src": "6443:46:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6474:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6474:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6485:2:17",
																				"nodeType": "YulLiteral",
																				"src": "6485:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6470:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6470:3:17"
																		},
																		"nativeSrc": "6470:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6470:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6457:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "6457:12:17"
																},
																"nativeSrc": "6457:32:17",
																"nodeType": "YulFunctionCall",
																"src": "6457:32:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "6447:6:17",
																	"nodeType": "YulTypedName",
																	"src": "6447:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6532:16:17",
																"nodeType": "YulBlock",
																"src": "6532:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6541:1:17",
																					"nodeType": "YulLiteral",
																					"src": "6541:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6544:1:17",
																					"nodeType": "YulLiteral",
																					"src": "6544:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6534:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "6534:6:17"
																			},
																			"nativeSrc": "6534:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "6534:12:17"
																		},
																		"nativeSrc": "6534:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "6534:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6504:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6504:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6520:2:17",
																						"nodeType": "YulLiteral",
																						"src": "6520:2:17",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6524:1:17",
																						"nodeType": "YulLiteral",
																						"src": "6524:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "6516:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "6516:3:17"
																				},
																				"nativeSrc": "6516:10:17",
																				"nodeType": "YulFunctionCall",
																				"src": "6516:10:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6528:1:17",
																				"nodeType": "YulLiteral",
																				"src": "6528:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6512:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6512:3:17"
																		},
																		"nativeSrc": "6512:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6512:18:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6501:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "6501:2:17"
																},
																"nativeSrc": "6501:30:17",
																"nodeType": "YulFunctionCall",
																"src": "6501:30:17"
															},
															"nativeSrc": "6498:50:17",
															"nodeType": "YulIf",
															"src": "6498:50:17"
														},
														{
															"nativeSrc": "6557:60:17",
															"nodeType": "YulAssignment",
															"src": "6557:60:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6589:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6589:9:17"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6600:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "6600:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6585:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6585:3:17"
																		},
																		"nativeSrc": "6585:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6585:22:17"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "6609:7:17",
																		"nodeType": "YulIdentifier",
																		"src": "6609:7:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "6567:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "6567:17:17"
																},
																"nativeSrc": "6567:50:17",
																"nodeType": "YulFunctionCall",
																"src": "6567:50:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6557:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6557:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_string_memory_ptr",
												"nativeSrc": "6233:390:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6288:9:17",
														"nodeType": "YulTypedName",
														"src": "6288:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6299:7:17",
														"nodeType": "YulTypedName",
														"src": "6299:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6311:6:17",
														"nodeType": "YulTypedName",
														"src": "6311:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6319:6:17",
														"nodeType": "YulTypedName",
														"src": "6319:6:17",
														"type": ""
													}
												],
												"src": "6233:390:17"
											},
											{
												"body": {
													"nativeSrc": "6750:447:17",
													"nodeType": "YulBlock",
													"src": "6750:447:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "6796:16:17",
																"nodeType": "YulBlock",
																"src": "6796:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6805:1:17",
																					"nodeType": "YulLiteral",
																					"src": "6805:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6808:1:17",
																					"nodeType": "YulLiteral",
																					"src": "6808:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6798:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "6798:6:17"
																			},
																			"nativeSrc": "6798:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "6798:12:17"
																		},
																		"nativeSrc": "6798:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "6798:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6771:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "6771:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6780:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6780:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6767:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6767:3:17"
																		},
																		"nativeSrc": "6767:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6767:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6792:2:17",
																		"nodeType": "YulLiteral",
																		"src": "6792:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6763:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6763:3:17"
																},
																"nativeSrc": "6763:32:17",
																"nodeType": "YulFunctionCall",
																"src": "6763:32:17"
															},
															"nativeSrc": "6760:52:17",
															"nodeType": "YulIf",
															"src": "6760:52:17"
														},
														{
															"nativeSrc": "6821:37:17",
															"nodeType": "YulVariableDeclaration",
															"src": "6821:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6848:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "6848:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6835:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "6835:12:17"
																},
																"nativeSrc": "6835:23:17",
																"nodeType": "YulFunctionCall",
																"src": "6835:23:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "6825:6:17",
																	"nodeType": "YulTypedName",
																	"src": "6825:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6867:28:17",
															"nodeType": "YulVariableDeclaration",
															"src": "6867:28:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6885:2:17",
																				"nodeType": "YulLiteral",
																				"src": "6885:2:17",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6889:1:17",
																				"nodeType": "YulLiteral",
																				"src": "6889:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6881:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6881:3:17"
																		},
																		"nativeSrc": "6881:10:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6881:10:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6893:1:17",
																		"nodeType": "YulLiteral",
																		"src": "6893:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6877:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6877:3:17"
																},
																"nativeSrc": "6877:18:17",
																"nodeType": "YulFunctionCall",
																"src": "6877:18:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "6871:2:17",
																	"nodeType": "YulTypedName",
																	"src": "6871:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6922:16:17",
																"nodeType": "YulBlock",
																"src": "6922:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6931:1:17",
																					"nodeType": "YulLiteral",
																					"src": "6931:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6934:1:17",
																					"nodeType": "YulLiteral",
																					"src": "6934:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6924:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "6924:6:17"
																			},
																			"nativeSrc": "6924:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "6924:12:17"
																		},
																		"nativeSrc": "6924:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "6924:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6910:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6910:6:17"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "6918:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "6918:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6907:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "6907:2:17"
																},
																"nativeSrc": "6907:14:17",
																"nodeType": "YulFunctionCall",
																"src": "6907:14:17"
															},
															"nativeSrc": "6904:34:17",
															"nodeType": "YulIf",
															"src": "6904:34:17"
														},
														{
															"nativeSrc": "6947:71:17",
															"nodeType": "YulAssignment",
															"src": "6947:71:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6990:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6990:9:17"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "7001:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "7001:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6986:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6986:3:17"
																		},
																		"nativeSrc": "6986:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6986:22:17"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "7010:7:17",
																		"nodeType": "YulIdentifier",
																		"src": "7010:7:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn",
																	"nativeSrc": "6957:28:17",
																	"nodeType": "YulIdentifier",
																	"src": "6957:28:17"
																},
																"nativeSrc": "6957:61:17",
																"nodeType": "YulFunctionCall",
																"src": "6957:61:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6947:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6947:6:17"
																}
															]
														},
														{
															"nativeSrc": "7027:48:17",
															"nodeType": "YulVariableDeclaration",
															"src": "7027:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7060:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "7060:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7071:2:17",
																				"nodeType": "YulLiteral",
																				"src": "7071:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7056:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7056:3:17"
																		},
																		"nativeSrc": "7056:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7056:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7043:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "7043:12:17"
																},
																"nativeSrc": "7043:32:17",
																"nodeType": "YulFunctionCall",
																"src": "7043:32:17"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "7031:8:17",
																	"nodeType": "YulTypedName",
																	"src": "7031:8:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7104:16:17",
																"nodeType": "YulBlock",
																"src": "7104:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7113:1:17",
																					"nodeType": "YulLiteral",
																					"src": "7113:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7116:1:17",
																					"nodeType": "YulLiteral",
																					"src": "7116:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7106:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "7106:6:17"
																			},
																			"nativeSrc": "7106:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7106:12:17"
																		},
																		"nativeSrc": "7106:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "7106:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "7090:8:17",
																		"nodeType": "YulIdentifier",
																		"src": "7090:8:17"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "7100:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "7100:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7087:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "7087:2:17"
																},
																"nativeSrc": "7087:16:17",
																"nodeType": "YulFunctionCall",
																"src": "7087:16:17"
															},
															"nativeSrc": "7084:36:17",
															"nodeType": "YulIf",
															"src": "7084:36:17"
														},
														{
															"nativeSrc": "7129:62:17",
															"nodeType": "YulAssignment",
															"src": "7129:62:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7161:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "7161:9:17"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "7172:8:17",
																				"nodeType": "YulIdentifier",
																				"src": "7172:8:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7157:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7157:3:17"
																		},
																		"nativeSrc": "7157:24:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7157:24:17"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "7183:7:17",
																		"nodeType": "YulIdentifier",
																		"src": "7183:7:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "7139:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "7139:17:17"
																},
																"nativeSrc": "7139:52:17",
																"nodeType": "YulFunctionCall",
																"src": "7139:52:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "7129:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7129:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_string_memory_ptr",
												"nativeSrc": "6628:569:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6708:9:17",
														"nodeType": "YulTypedName",
														"src": "6708:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6719:7:17",
														"nodeType": "YulTypedName",
														"src": "6719:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6731:6:17",
														"nodeType": "YulTypedName",
														"src": "6731:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6739:6:17",
														"nodeType": "YulTypedName",
														"src": "6739:6:17",
														"type": ""
													}
												],
												"src": "6628:569:17"
											},
											{
												"body": {
													"nativeSrc": "7332:537:17",
													"nodeType": "YulBlock",
													"src": "7332:537:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "7379:16:17",
																"nodeType": "YulBlock",
																"src": "7379:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7388:1:17",
																					"nodeType": "YulLiteral",
																					"src": "7388:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7391:1:17",
																					"nodeType": "YulLiteral",
																					"src": "7391:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7381:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "7381:6:17"
																			},
																			"nativeSrc": "7381:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7381:12:17"
																		},
																		"nativeSrc": "7381:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "7381:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7353:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "7353:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7362:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "7362:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7349:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7349:3:17"
																		},
																		"nativeSrc": "7349:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7349:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7374:3:17",
																		"nodeType": "YulLiteral",
																		"src": "7374:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7345:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7345:3:17"
																},
																"nativeSrc": "7345:33:17",
																"nodeType": "YulFunctionCall",
																"src": "7345:33:17"
															},
															"nativeSrc": "7342:53:17",
															"nodeType": "YulIf",
															"src": "7342:53:17"
														},
														{
															"nativeSrc": "7404:39:17",
															"nodeType": "YulAssignment",
															"src": "7404:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7433:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "7433:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "7414:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "7414:18:17"
																},
																"nativeSrc": "7414:29:17",
																"nodeType": "YulFunctionCall",
																"src": "7414:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7404:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7404:6:17"
																}
															]
														},
														{
															"nativeSrc": "7452:48:17",
															"nodeType": "YulAssignment",
															"src": "7452:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7485:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "7485:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7496:2:17",
																				"nodeType": "YulLiteral",
																				"src": "7496:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7481:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7481:3:17"
																		},
																		"nativeSrc": "7481:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7481:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "7462:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "7462:18:17"
																},
																"nativeSrc": "7462:38:17",
																"nodeType": "YulFunctionCall",
																"src": "7462:38:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "7452:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7452:6:17"
																}
															]
														},
														{
															"nativeSrc": "7509:42:17",
															"nodeType": "YulAssignment",
															"src": "7509:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7536:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "7536:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7547:2:17",
																				"nodeType": "YulLiteral",
																				"src": "7547:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7532:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7532:3:17"
																		},
																		"nativeSrc": "7532:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7532:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7519:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "7519:12:17"
																},
																"nativeSrc": "7519:32:17",
																"nodeType": "YulFunctionCall",
																"src": "7519:32:17"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "7509:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7509:6:17"
																}
															]
														},
														{
															"nativeSrc": "7560:46:17",
															"nodeType": "YulVariableDeclaration",
															"src": "7560:46:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7591:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "7591:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7602:2:17",
																				"nodeType": "YulLiteral",
																				"src": "7602:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7587:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7587:3:17"
																		},
																		"nativeSrc": "7587:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7587:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7574:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "7574:12:17"
																},
																"nativeSrc": "7574:32:17",
																"nodeType": "YulFunctionCall",
																"src": "7574:32:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "7564:6:17",
																	"nodeType": "YulTypedName",
																	"src": "7564:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7649:16:17",
																"nodeType": "YulBlock",
																"src": "7649:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7658:1:17",
																					"nodeType": "YulLiteral",
																					"src": "7658:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7661:1:17",
																					"nodeType": "YulLiteral",
																					"src": "7661:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7651:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "7651:6:17"
																			},
																			"nativeSrc": "7651:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7651:12:17"
																		},
																		"nativeSrc": "7651:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "7651:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7621:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7621:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7637:2:17",
																						"nodeType": "YulLiteral",
																						"src": "7637:2:17",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7641:1:17",
																						"nodeType": "YulLiteral",
																						"src": "7641:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "7633:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "7633:3:17"
																				},
																				"nativeSrc": "7633:10:17",
																				"nodeType": "YulFunctionCall",
																				"src": "7633:10:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7645:1:17",
																				"nodeType": "YulLiteral",
																				"src": "7645:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7629:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7629:3:17"
																		},
																		"nativeSrc": "7629:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7629:18:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7618:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "7618:2:17"
																},
																"nativeSrc": "7618:30:17",
																"nodeType": "YulFunctionCall",
																"src": "7618:30:17"
															},
															"nativeSrc": "7615:50:17",
															"nodeType": "YulIf",
															"src": "7615:50:17"
														},
														{
															"nativeSrc": "7674:32:17",
															"nodeType": "YulVariableDeclaration",
															"src": "7674:32:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7688:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "7688:9:17"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "7699:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7699:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7684:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7684:3:17"
																},
																"nativeSrc": "7684:22:17",
																"nodeType": "YulFunctionCall",
																"src": "7684:22:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "7678:2:17",
																	"nodeType": "YulTypedName",
																	"src": "7678:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7754:16:17",
																"nodeType": "YulBlock",
																"src": "7754:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7763:1:17",
																					"nodeType": "YulLiteral",
																					"src": "7763:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7766:1:17",
																					"nodeType": "YulLiteral",
																					"src": "7766:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7756:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "7756:6:17"
																			},
																			"nativeSrc": "7756:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7756:12:17"
																		},
																		"nativeSrc": "7756:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "7756:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "7733:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "7733:2:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7737:4:17",
																						"nodeType": "YulLiteral",
																						"src": "7737:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7729:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "7729:3:17"
																				},
																				"nativeSrc": "7729:13:17",
																				"nodeType": "YulFunctionCall",
																				"src": "7729:13:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7744:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "7744:7:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7725:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7725:3:17"
																		},
																		"nativeSrc": "7725:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7725:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7718:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7718:6:17"
																},
																"nativeSrc": "7718:35:17",
																"nodeType": "YulFunctionCall",
																"src": "7718:35:17"
															},
															"nativeSrc": "7715:55:17",
															"nodeType": "YulIf",
															"src": "7715:55:17"
														},
														{
															"nativeSrc": "7779:84:17",
															"nodeType": "YulAssignment",
															"src": "7779:84:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "7828:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "7828:2:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7832:2:17",
																				"nodeType": "YulLiteral",
																				"src": "7832:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7824:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7824:3:17"
																		},
																		"nativeSrc": "7824:11:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7824:11:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "7850:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "7850:2:17"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7837:12:17",
																			"nodeType": "YulIdentifier",
																			"src": "7837:12:17"
																		},
																		"nativeSrc": "7837:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7837:16:17"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "7855:7:17",
																		"nodeType": "YulIdentifier",
																		"src": "7855:7:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nativeSrc": "7789:34:17",
																	"nodeType": "YulIdentifier",
																	"src": "7789:34:17"
																},
																"nativeSrc": "7789:74:17",
																"nodeType": "YulFunctionCall",
																"src": "7789:74:17"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "7779:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7779:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "7202:667:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7274:9:17",
														"nodeType": "YulTypedName",
														"src": "7274:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7285:7:17",
														"nodeType": "YulTypedName",
														"src": "7285:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7297:6:17",
														"nodeType": "YulTypedName",
														"src": "7297:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7305:6:17",
														"nodeType": "YulTypedName",
														"src": "7305:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7313:6:17",
														"nodeType": "YulTypedName",
														"src": "7313:6:17",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7321:6:17",
														"nodeType": "YulTypedName",
														"src": "7321:6:17",
														"type": ""
													}
												],
												"src": "7202:667:17"
											},
											{
												"body": {
													"nativeSrc": "7971:299:17",
													"nodeType": "YulBlock",
													"src": "7971:299:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "8017:16:17",
																"nodeType": "YulBlock",
																"src": "8017:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8026:1:17",
																					"nodeType": "YulLiteral",
																					"src": "8026:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8029:1:17",
																					"nodeType": "YulLiteral",
																					"src": "8029:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8019:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "8019:6:17"
																			},
																			"nativeSrc": "8019:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "8019:12:17"
																		},
																		"nativeSrc": "8019:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "8019:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7992:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "7992:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8001:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8001:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7988:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7988:3:17"
																		},
																		"nativeSrc": "7988:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7988:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8013:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8013:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7984:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7984:3:17"
																},
																"nativeSrc": "7984:32:17",
																"nodeType": "YulFunctionCall",
																"src": "7984:32:17"
															},
															"nativeSrc": "7981:52:17",
															"nodeType": "YulIf",
															"src": "7981:52:17"
														},
														{
															"nativeSrc": "8042:39:17",
															"nodeType": "YulAssignment",
															"src": "8042:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8071:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "8071:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "8052:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "8052:18:17"
																},
																"nativeSrc": "8052:29:17",
																"nodeType": "YulFunctionCall",
																"src": "8052:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8042:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8042:6:17"
																}
															]
														},
														{
															"nativeSrc": "8090:46:17",
															"nodeType": "YulVariableDeclaration",
															"src": "8090:46:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8121:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8121:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8132:2:17",
																				"nodeType": "YulLiteral",
																				"src": "8132:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8117:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8117:3:17"
																		},
																		"nativeSrc": "8117:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8117:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8104:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "8104:12:17"
																},
																"nativeSrc": "8104:32:17",
																"nodeType": "YulFunctionCall",
																"src": "8104:32:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "8094:6:17",
																	"nodeType": "YulTypedName",
																	"src": "8094:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8179:16:17",
																"nodeType": "YulBlock",
																"src": "8179:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8188:1:17",
																					"nodeType": "YulLiteral",
																					"src": "8188:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8191:1:17",
																					"nodeType": "YulLiteral",
																					"src": "8191:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8181:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "8181:6:17"
																			},
																			"nativeSrc": "8181:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "8181:12:17"
																		},
																		"nativeSrc": "8181:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "8181:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8151:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "8151:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8167:2:17",
																						"nodeType": "YulLiteral",
																						"src": "8167:2:17",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8171:1:17",
																						"nodeType": "YulLiteral",
																						"src": "8171:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "8163:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "8163:3:17"
																				},
																				"nativeSrc": "8163:10:17",
																				"nodeType": "YulFunctionCall",
																				"src": "8163:10:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8175:1:17",
																				"nodeType": "YulLiteral",
																				"src": "8175:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8159:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8159:3:17"
																		},
																		"nativeSrc": "8159:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8159:18:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8148:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "8148:2:17"
																},
																"nativeSrc": "8148:30:17",
																"nodeType": "YulFunctionCall",
																"src": "8148:30:17"
															},
															"nativeSrc": "8145:50:17",
															"nodeType": "YulIf",
															"src": "8145:50:17"
														},
														{
															"nativeSrc": "8204:60:17",
															"nodeType": "YulAssignment",
															"src": "8204:60:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8236:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8236:9:17"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "8247:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "8247:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8232:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8232:3:17"
																		},
																		"nativeSrc": "8232:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8232:22:17"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "8256:7:17",
																		"nodeType": "YulIdentifier",
																		"src": "8256:7:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "8214:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "8214:17:17"
																},
																"nativeSrc": "8214:50:17",
																"nodeType": "YulFunctionCall",
																"src": "8214:50:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "8204:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8204:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptr",
												"nativeSrc": "7874:396:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7929:9:17",
														"nodeType": "YulTypedName",
														"src": "7929:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7940:7:17",
														"nodeType": "YulTypedName",
														"src": "7940:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7952:6:17",
														"nodeType": "YulTypedName",
														"src": "7952:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7960:6:17",
														"nodeType": "YulTypedName",
														"src": "7960:6:17",
														"type": ""
													}
												],
												"src": "7874:396:17"
											},
											{
												"body": {
													"nativeSrc": "8362:173:17",
													"nodeType": "YulBlock",
													"src": "8362:173:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "8408:16:17",
																"nodeType": "YulBlock",
																"src": "8408:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8417:1:17",
																					"nodeType": "YulLiteral",
																					"src": "8417:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8420:1:17",
																					"nodeType": "YulLiteral",
																					"src": "8420:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8410:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "8410:6:17"
																			},
																			"nativeSrc": "8410:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "8410:12:17"
																		},
																		"nativeSrc": "8410:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "8410:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8383:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "8383:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8392:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8392:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8379:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8379:3:17"
																		},
																		"nativeSrc": "8379:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8379:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8404:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8404:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8375:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "8375:3:17"
																},
																"nativeSrc": "8375:32:17",
																"nodeType": "YulFunctionCall",
																"src": "8375:32:17"
															},
															"nativeSrc": "8372:52:17",
															"nodeType": "YulIf",
															"src": "8372:52:17"
														},
														{
															"nativeSrc": "8433:39:17",
															"nodeType": "YulAssignment",
															"src": "8433:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8462:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "8462:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "8443:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "8443:18:17"
																},
																"nativeSrc": "8443:29:17",
																"nodeType": "YulFunctionCall",
																"src": "8443:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8433:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8433:6:17"
																}
															]
														},
														{
															"nativeSrc": "8481:48:17",
															"nodeType": "YulAssignment",
															"src": "8481:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8514:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8514:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8525:2:17",
																				"nodeType": "YulLiteral",
																				"src": "8525:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8510:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8510:3:17"
																		},
																		"nativeSrc": "8510:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8510:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "8491:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "8491:18:17"
																},
																"nativeSrc": "8491:38:17",
																"nodeType": "YulFunctionCall",
																"src": "8491:38:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "8481:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8481:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "8275:260:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8320:9:17",
														"nodeType": "YulTypedName",
														"src": "8320:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8331:7:17",
														"nodeType": "YulTypedName",
														"src": "8331:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8343:6:17",
														"nodeType": "YulTypedName",
														"src": "8343:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8351:6:17",
														"nodeType": "YulTypedName",
														"src": "8351:6:17",
														"type": ""
													}
												],
												"src": "8275:260:17"
											},
											{
												"body": {
													"nativeSrc": "8654:350:17",
													"nodeType": "YulBlock",
													"src": "8654:350:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "8700:16:17",
																"nodeType": "YulBlock",
																"src": "8700:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8709:1:17",
																					"nodeType": "YulLiteral",
																					"src": "8709:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8712:1:17",
																					"nodeType": "YulLiteral",
																					"src": "8712:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8702:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "8702:6:17"
																			},
																			"nativeSrc": "8702:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "8702:12:17"
																		},
																		"nativeSrc": "8702:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "8702:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8675:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "8675:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8684:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8684:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8671:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8671:3:17"
																		},
																		"nativeSrc": "8671:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8671:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8696:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8696:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8667:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "8667:3:17"
																},
																"nativeSrc": "8667:32:17",
																"nodeType": "YulFunctionCall",
																"src": "8667:32:17"
															},
															"nativeSrc": "8664:52:17",
															"nodeType": "YulIf",
															"src": "8664:52:17"
														},
														{
															"nativeSrc": "8725:39:17",
															"nodeType": "YulAssignment",
															"src": "8725:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8754:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "8754:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "8735:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "8735:18:17"
																},
																"nativeSrc": "8735:29:17",
																"nodeType": "YulFunctionCall",
																"src": "8735:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8725:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8725:6:17"
																}
															]
														},
														{
															"nativeSrc": "8773:42:17",
															"nodeType": "YulAssignment",
															"src": "8773:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8800:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8800:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8811:2:17",
																				"nodeType": "YulLiteral",
																				"src": "8811:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8796:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8796:3:17"
																		},
																		"nativeSrc": "8796:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8796:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8783:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "8783:12:17"
																},
																"nativeSrc": "8783:32:17",
																"nodeType": "YulFunctionCall",
																"src": "8783:32:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "8773:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8773:6:17"
																}
															]
														},
														{
															"nativeSrc": "8824:46:17",
															"nodeType": "YulVariableDeclaration",
															"src": "8824:46:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8855:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8855:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8866:2:17",
																				"nodeType": "YulLiteral",
																				"src": "8866:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8851:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8851:3:17"
																		},
																		"nativeSrc": "8851:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8851:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8838:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "8838:12:17"
																},
																"nativeSrc": "8838:32:17",
																"nodeType": "YulFunctionCall",
																"src": "8838:32:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "8828:6:17",
																	"nodeType": "YulTypedName",
																	"src": "8828:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8913:16:17",
																"nodeType": "YulBlock",
																"src": "8913:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8922:1:17",
																					"nodeType": "YulLiteral",
																					"src": "8922:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8925:1:17",
																					"nodeType": "YulLiteral",
																					"src": "8925:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8915:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "8915:6:17"
																			},
																			"nativeSrc": "8915:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "8915:12:17"
																		},
																		"nativeSrc": "8915:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "8915:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8885:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "8885:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8901:2:17",
																						"nodeType": "YulLiteral",
																						"src": "8901:2:17",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8905:1:17",
																						"nodeType": "YulLiteral",
																						"src": "8905:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "8897:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "8897:3:17"
																				},
																				"nativeSrc": "8897:10:17",
																				"nodeType": "YulFunctionCall",
																				"src": "8897:10:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8909:1:17",
																				"nodeType": "YulLiteral",
																				"src": "8909:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8893:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8893:3:17"
																		},
																		"nativeSrc": "8893:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8893:18:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8882:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "8882:2:17"
																},
																"nativeSrc": "8882:30:17",
																"nodeType": "YulFunctionCall",
																"src": "8882:30:17"
															},
															"nativeSrc": "8879:50:17",
															"nodeType": "YulIf",
															"src": "8879:50:17"
														},
														{
															"nativeSrc": "8938:60:17",
															"nodeType": "YulAssignment",
															"src": "8938:60:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8970:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8970:9:17"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "8981:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "8981:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8966:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8966:3:17"
																		},
																		"nativeSrc": "8966:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8966:22:17"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "8990:7:17",
																		"nodeType": "YulIdentifier",
																		"src": "8990:7:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "8948:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "8948:17:17"
																},
																"nativeSrc": "8948:50:17",
																"nodeType": "YulFunctionCall",
																"src": "8948:50:17"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "8938:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8938:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_string_memory_ptr",
												"nativeSrc": "8540:464:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8604:9:17",
														"nodeType": "YulTypedName",
														"src": "8604:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8615:7:17",
														"nodeType": "YulTypedName",
														"src": "8615:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8627:6:17",
														"nodeType": "YulTypedName",
														"src": "8627:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8635:6:17",
														"nodeType": "YulTypedName",
														"src": "8635:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8643:6:17",
														"nodeType": "YulTypedName",
														"src": "8643:6:17",
														"type": ""
													}
												],
												"src": "8540:464:17"
											},
											{
												"body": {
													"nativeSrc": "9064:325:17",
													"nodeType": "YulBlock",
													"src": "9064:325:17",
													"statements": [
														{
															"nativeSrc": "9074:22:17",
															"nodeType": "YulAssignment",
															"src": "9074:22:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9088:1:17",
																		"nodeType": "YulLiteral",
																		"src": "9088:1:17",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "9091:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "9091:4:17"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "9084:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "9084:3:17"
																},
																"nativeSrc": "9084:12:17",
																"nodeType": "YulFunctionCall",
																"src": "9084:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9074:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9074:6:17"
																}
															]
														},
														{
															"nativeSrc": "9105:38:17",
															"nodeType": "YulVariableDeclaration",
															"src": "9105:38:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9135:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "9135:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9141:1:17",
																		"nodeType": "YulLiteral",
																		"src": "9141:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9131:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "9131:3:17"
																},
																"nativeSrc": "9131:12:17",
																"nodeType": "YulFunctionCall",
																"src": "9131:12:17"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "9109:18:17",
																	"nodeType": "YulTypedName",
																	"src": "9109:18:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9182:31:17",
																"nodeType": "YulBlock",
																"src": "9182:31:17",
																"statements": [
																	{
																		"nativeSrc": "9184:27:17",
																		"nodeType": "YulAssignment",
																		"src": "9184:27:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "9198:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "9198:6:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9206:4:17",
																					"nodeType": "YulLiteral",
																					"src": "9206:4:17",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9194:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "9194:3:17"
																			},
																			"nativeSrc": "9194:17:17",
																			"nodeType": "YulFunctionCall",
																			"src": "9194:17:17"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "9184:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "9184:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9162:18:17",
																		"nodeType": "YulIdentifier",
																		"src": "9162:18:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9155:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9155:6:17"
																},
																"nativeSrc": "9155:26:17",
																"nodeType": "YulFunctionCall",
																"src": "9155:26:17"
															},
															"nativeSrc": "9152:61:17",
															"nodeType": "YulIf",
															"src": "9152:61:17"
														},
														{
															"body": {
																"nativeSrc": "9272:111:17",
																"nodeType": "YulBlock",
																"src": "9272:111:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9293:1:17",
																					"nodeType": "YulLiteral",
																					"src": "9293:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9300:3:17",
																							"nodeType": "YulLiteral",
																							"src": "9300:3:17",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "9305:10:17",
																							"nodeType": "YulLiteral",
																							"src": "9305:10:17",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "9296:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "9296:3:17"
																					},
																					"nativeSrc": "9296:20:17",
																					"nodeType": "YulFunctionCall",
																					"src": "9296:20:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9286:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "9286:6:17"
																			},
																			"nativeSrc": "9286:31:17",
																			"nodeType": "YulFunctionCall",
																			"src": "9286:31:17"
																		},
																		"nativeSrc": "9286:31:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "9286:31:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9337:1:17",
																					"nodeType": "YulLiteral",
																					"src": "9337:1:17",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9340:4:17",
																					"nodeType": "YulLiteral",
																					"src": "9340:4:17",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9330:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "9330:6:17"
																			},
																			"nativeSrc": "9330:15:17",
																			"nodeType": "YulFunctionCall",
																			"src": "9330:15:17"
																		},
																		"nativeSrc": "9330:15:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "9330:15:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9365:1:17",
																					"nodeType": "YulLiteral",
																					"src": "9365:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9368:4:17",
																					"nodeType": "YulLiteral",
																					"src": "9368:4:17",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9358:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "9358:6:17"
																			},
																			"nativeSrc": "9358:15:17",
																			"nodeType": "YulFunctionCall",
																			"src": "9358:15:17"
																		},
																		"nativeSrc": "9358:15:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "9358:15:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9228:18:17",
																		"nodeType": "YulIdentifier",
																		"src": "9228:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9251:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "9251:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9259:2:17",
																				"nodeType": "YulLiteral",
																				"src": "9259:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9248:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "9248:2:17"
																		},
																		"nativeSrc": "9248:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9248:14:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9225:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "9225:2:17"
																},
																"nativeSrc": "9225:38:17",
																"nodeType": "YulFunctionCall",
																"src": "9225:38:17"
															},
															"nativeSrc": "9222:161:17",
															"nodeType": "YulIf",
															"src": "9222:161:17"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "9009:380:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9044:4:17",
														"nodeType": "YulTypedName",
														"src": "9044:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9053:6:17",
														"nodeType": "YulTypedName",
														"src": "9053:6:17",
														"type": ""
													}
												],
												"src": "9009:380:17"
											},
											{
												"body": {
													"nativeSrc": "9551:218:17",
													"nodeType": "YulBlock",
													"src": "9551:218:17",
													"statements": [
														{
															"nativeSrc": "9561:26:17",
															"nodeType": "YulAssignment",
															"src": "9561:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9573:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "9573:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9584:2:17",
																		"nodeType": "YulLiteral",
																		"src": "9584:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9569:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "9569:3:17"
																},
																"nativeSrc": "9569:18:17",
																"nodeType": "YulFunctionCall",
																"src": "9569:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9561:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "9561:4:17"
																}
															]
														},
														{
															"nativeSrc": "9596:29:17",
															"nodeType": "YulVariableDeclaration",
															"src": "9596:29:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9614:3:17",
																				"nodeType": "YulLiteral",
																				"src": "9614:3:17",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9619:1:17",
																				"nodeType": "YulLiteral",
																				"src": "9619:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9610:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9610:3:17"
																		},
																		"nativeSrc": "9610:11:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9610:11:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9623:1:17",
																		"nodeType": "YulLiteral",
																		"src": "9623:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9606:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "9606:3:17"
																},
																"nativeSrc": "9606:19:17",
																"nodeType": "YulFunctionCall",
																"src": "9606:19:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "9600:2:17",
																	"nodeType": "YulTypedName",
																	"src": "9600:2:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9641:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "9641:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9656:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "9656:6:17"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "9664:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "9664:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9652:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9652:3:17"
																		},
																		"nativeSrc": "9652:15:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9652:15:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9634:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9634:6:17"
																},
																"nativeSrc": "9634:34:17",
																"nodeType": "YulFunctionCall",
																"src": "9634:34:17"
															},
															"nativeSrc": "9634:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "9634:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9688:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "9688:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9699:2:17",
																				"nodeType": "YulLiteral",
																				"src": "9699:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9684:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9684:3:17"
																		},
																		"nativeSrc": "9684:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9684:18:17"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "9704:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "9704:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9677:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9677:6:17"
																},
																"nativeSrc": "9677:34:17",
																"nodeType": "YulFunctionCall",
																"src": "9677:34:17"
															},
															"nativeSrc": "9677:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "9677:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9731:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "9731:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9742:2:17",
																				"nodeType": "YulLiteral",
																				"src": "9742:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9727:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9727:3:17"
																		},
																		"nativeSrc": "9727:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9727:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "9751:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "9751:6:17"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "9759:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "9759:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9747:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9747:3:17"
																		},
																		"nativeSrc": "9747:15:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9747:15:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9720:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9720:6:17"
																},
																"nativeSrc": "9720:43:17",
																"nodeType": "YulFunctionCall",
																"src": "9720:43:17"
															},
															"nativeSrc": "9720:43:17",
															"nodeType": "YulExpressionStatement",
															"src": "9720:43:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "9394:375:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9504:9:17",
														"nodeType": "YulTypedName",
														"src": "9504:9:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9515:6:17",
														"nodeType": "YulTypedName",
														"src": "9515:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9523:6:17",
														"nodeType": "YulTypedName",
														"src": "9523:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9531:6:17",
														"nodeType": "YulTypedName",
														"src": "9531:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9542:4:17",
														"nodeType": "YulTypedName",
														"src": "9542:4:17",
														"type": ""
													}
												],
												"src": "9394:375:17"
											},
											{
												"body": {
													"nativeSrc": "9806:95:17",
													"nodeType": "YulBlock",
													"src": "9806:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9823:1:17",
																		"nodeType": "YulLiteral",
																		"src": "9823:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9830:3:17",
																				"nodeType": "YulLiteral",
																				"src": "9830:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9835:10:17",
																				"nodeType": "YulLiteral",
																				"src": "9835:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9826:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9826:3:17"
																		},
																		"nativeSrc": "9826:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9826:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9816:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9816:6:17"
																},
																"nativeSrc": "9816:31:17",
																"nodeType": "YulFunctionCall",
																"src": "9816:31:17"
															},
															"nativeSrc": "9816:31:17",
															"nodeType": "YulExpressionStatement",
															"src": "9816:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9863:1:17",
																		"nodeType": "YulLiteral",
																		"src": "9863:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9866:4:17",
																		"nodeType": "YulLiteral",
																		"src": "9866:4:17",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9856:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9856:6:17"
																},
																"nativeSrc": "9856:15:17",
																"nodeType": "YulFunctionCall",
																"src": "9856:15:17"
															},
															"nativeSrc": "9856:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "9856:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9887:1:17",
																		"nodeType": "YulLiteral",
																		"src": "9887:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9890:4:17",
																		"nodeType": "YulLiteral",
																		"src": "9890:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9880:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9880:6:17"
																},
																"nativeSrc": "9880:15:17",
																"nodeType": "YulFunctionCall",
																"src": "9880:15:17"
															},
															"nativeSrc": "9880:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "9880:15:17"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "9774:127:17",
												"nodeType": "YulFunctionDefinition",
												"src": "9774:127:17"
											},
											{
												"body": {
													"nativeSrc": "9956:162:17",
													"nodeType": "YulBlock",
													"src": "9956:162:17",
													"statements": [
														{
															"nativeSrc": "9966:26:17",
															"nodeType": "YulVariableDeclaration",
															"src": "9966:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9986:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "9986:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9980:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "9980:5:17"
																},
																"nativeSrc": "9980:12:17",
																"nodeType": "YulFunctionCall",
																"src": "9980:12:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9970:6:17",
																	"nodeType": "YulTypedName",
																	"src": "9970:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10007:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "10007:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10016:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "10016:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10023:4:17",
																				"nodeType": "YulLiteral",
																				"src": "10023:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10012:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10012:3:17"
																		},
																		"nativeSrc": "10012:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10012:16:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10030:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "10030:6:17"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "10001:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "10001:5:17"
																},
																"nativeSrc": "10001:36:17",
																"nodeType": "YulFunctionCall",
																"src": "10001:36:17"
															},
															"nativeSrc": "10001:36:17",
															"nodeType": "YulExpressionStatement",
															"src": "10001:36:17"
														},
														{
															"nativeSrc": "10046:26:17",
															"nodeType": "YulVariableDeclaration",
															"src": "10046:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10060:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "10060:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10065:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "10065:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10056:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10056:3:17"
																},
																"nativeSrc": "10056:16:17",
																"nodeType": "YulFunctionCall",
																"src": "10056:16:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "10050:2:17",
																	"nodeType": "YulTypedName",
																	"src": "10050:2:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "10088:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "10088:2:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10092:1:17",
																		"nodeType": "YulLiteral",
																		"src": "10092:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10081:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10081:6:17"
																},
																"nativeSrc": "10081:13:17",
																"nodeType": "YulFunctionCall",
																"src": "10081:13:17"
															},
															"nativeSrc": "10081:13:17",
															"nodeType": "YulExpressionStatement",
															"src": "10081:13:17"
														},
														{
															"nativeSrc": "10103:9:17",
															"nodeType": "YulAssignment",
															"src": "10103:9:17",
															"value": {
																"name": "_1",
																"nativeSrc": "10110:2:17",
																"nodeType": "YulIdentifier",
																"src": "10110:2:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10103:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10103:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "9906:212:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9933:5:17",
														"nodeType": "YulTypedName",
														"src": "9933:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9940:3:17",
														"nodeType": "YulTypedName",
														"src": "9940:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9948:3:17",
														"nodeType": "YulTypedName",
														"src": "9948:3:17",
														"type": ""
													}
												],
												"src": "9906:212:17"
											},
											{
												"body": {
													"nativeSrc": "10310:80:17",
													"nodeType": "YulBlock",
													"src": "10310:80:17",
													"statements": [
														{
															"nativeSrc": "10320:64:17",
															"nodeType": "YulAssignment",
															"src": "10320:64:17",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10345:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "10345:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10371:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "10371:6:17"
																			},
																			{
																				"name": "pos",
																				"nativeSrc": "10379:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "10379:3:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_string",
																			"nativeSrc": "10353:17:17",
																			"nodeType": "YulIdentifier",
																			"src": "10353:17:17"
																		},
																		"nativeSrc": "10353:30:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10353:30:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "10327:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "10327:17:17"
																},
																"nativeSrc": "10327:57:17",
																"nodeType": "YulFunctionCall",
																"src": "10327:57:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10320:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10320:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "10123:267:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10278:3:17",
														"nodeType": "YulTypedName",
														"src": "10278:3:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10283:6:17",
														"nodeType": "YulTypedName",
														"src": "10283:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10291:6:17",
														"nodeType": "YulTypedName",
														"src": "10291:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10302:3:17",
														"nodeType": "YulTypedName",
														"src": "10302:3:17",
														"type": ""
													}
												],
												"src": "10123:267:17"
											},
											{
												"body": {
													"nativeSrc": "10442:185:17",
													"nodeType": "YulBlock",
													"src": "10442:185:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "10481:111:17",
																"nodeType": "YulBlock",
																"src": "10481:111:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10502:1:17",
																					"nodeType": "YulLiteral",
																					"src": "10502:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10509:3:17",
																							"nodeType": "YulLiteral",
																							"src": "10509:3:17",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "10514:10:17",
																							"nodeType": "YulLiteral",
																							"src": "10514:10:17",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "10505:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "10505:3:17"
																					},
																					"nativeSrc": "10505:20:17",
																					"nodeType": "YulFunctionCall",
																					"src": "10505:20:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10495:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "10495:6:17"
																			},
																			"nativeSrc": "10495:31:17",
																			"nodeType": "YulFunctionCall",
																			"src": "10495:31:17"
																		},
																		"nativeSrc": "10495:31:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "10495:31:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10546:1:17",
																					"nodeType": "YulLiteral",
																					"src": "10546:1:17",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10549:4:17",
																					"nodeType": "YulLiteral",
																					"src": "10549:4:17",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10539:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "10539:6:17"
																			},
																			"nativeSrc": "10539:15:17",
																			"nodeType": "YulFunctionCall",
																			"src": "10539:15:17"
																		},
																		"nativeSrc": "10539:15:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "10539:15:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10574:1:17",
																					"nodeType": "YulLiteral",
																					"src": "10574:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10577:4:17",
																					"nodeType": "YulLiteral",
																					"src": "10577:4:17",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10567:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "10567:6:17"
																			},
																			"nativeSrc": "10567:15:17",
																			"nodeType": "YulFunctionCall",
																			"src": "10567:15:17"
																		},
																		"nativeSrc": "10567:15:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "10567:15:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10458:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "10458:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10469:1:17",
																				"nodeType": "YulLiteral",
																				"src": "10469:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "10465:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10465:3:17"
																		},
																		"nativeSrc": "10465:6:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10465:6:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10455:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "10455:2:17"
																},
																"nativeSrc": "10455:17:17",
																"nodeType": "YulFunctionCall",
																"src": "10455:17:17"
															},
															"nativeSrc": "10452:140:17",
															"nodeType": "YulIf",
															"src": "10452:140:17"
														},
														{
															"nativeSrc": "10601:20:17",
															"nodeType": "YulAssignment",
															"src": "10601:20:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10612:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "10612:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10619:1:17",
																		"nodeType": "YulLiteral",
																		"src": "10619:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10608:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10608:3:17"
																},
																"nativeSrc": "10608:13:17",
																"nodeType": "YulFunctionCall",
																"src": "10608:13:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "10601:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10601:3:17"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "10395:232:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10424:5:17",
														"nodeType": "YulTypedName",
														"src": "10424:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "10434:3:17",
														"nodeType": "YulTypedName",
														"src": "10434:3:17",
														"type": ""
													}
												],
												"src": "10395:232:17"
											},
											{
												"body": {
													"nativeSrc": "10688:65:17",
													"nodeType": "YulBlock",
													"src": "10688:65:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10705:1:17",
																		"nodeType": "YulLiteral",
																		"src": "10705:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "10708:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "10708:3:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10698:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10698:6:17"
																},
																"nativeSrc": "10698:14:17",
																"nodeType": "YulFunctionCall",
																"src": "10698:14:17"
															},
															"nativeSrc": "10698:14:17",
															"nodeType": "YulExpressionStatement",
															"src": "10698:14:17"
														},
														{
															"nativeSrc": "10721:26:17",
															"nodeType": "YulAssignment",
															"src": "10721:26:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10739:1:17",
																		"nodeType": "YulLiteral",
																		"src": "10739:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10742:4:17",
																		"nodeType": "YulLiteral",
																		"src": "10742:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "10729:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "10729:9:17"
																},
																"nativeSrc": "10729:18:17",
																"nodeType": "YulFunctionCall",
																"src": "10729:18:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "10721:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "10721:4:17"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "10632:121:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "10671:3:17",
														"nodeType": "YulTypedName",
														"src": "10671:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "10679:4:17",
														"nodeType": "YulTypedName",
														"src": "10679:4:17",
														"type": ""
													}
												],
												"src": "10632:121:17"
											},
											{
												"body": {
													"nativeSrc": "10839:437:17",
													"nodeType": "YulBlock",
													"src": "10839:437:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "10872:398:17",
																"nodeType": "YulBlock",
																"src": "10872:398:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10893:1:17",
																					"nodeType": "YulLiteral",
																					"src": "10893:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "10896:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "10896:5:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10886:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "10886:6:17"
																			},
																			"nativeSrc": "10886:16:17",
																			"nodeType": "YulFunctionCall",
																			"src": "10886:16:17"
																		},
																		"nativeSrc": "10886:16:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "10886:16:17"
																	},
																	{
																		"nativeSrc": "10915:30:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10915:30:17",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10937:1:17",
																					"nodeType": "YulLiteral",
																					"src": "10937:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10940:4:17",
																					"nodeType": "YulLiteral",
																					"src": "10940:4:17",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "10927:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "10927:9:17"
																			},
																			"nativeSrc": "10927:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "10927:18:17"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "10919:4:17",
																				"nodeType": "YulTypedName",
																				"src": "10919:4:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "10958:57:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10958:57:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "10981:4:17",
																					"nodeType": "YulIdentifier",
																					"src": "10981:4:17"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10991:1:17",
																							"nodeType": "YulLiteral",
																							"src": "10991:1:17",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "10998:10:17",
																									"nodeType": "YulIdentifier",
																									"src": "10998:10:17"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "11010:2:17",
																									"nodeType": "YulLiteral",
																									"src": "11010:2:17",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "10994:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "10994:3:17"
																							},
																							"nativeSrc": "10994:19:17",
																							"nodeType": "YulFunctionCall",
																							"src": "10994:19:17"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "10987:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "10987:3:17"
																					},
																					"nativeSrc": "10987:27:17",
																					"nodeType": "YulFunctionCall",
																					"src": "10987:27:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "10977:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "10977:3:17"
																			},
																			"nativeSrc": "10977:38:17",
																			"nodeType": "YulFunctionCall",
																			"src": "10977:38:17"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "10962:11:17",
																				"nodeType": "YulTypedName",
																				"src": "10962:11:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "11052:23:17",
																			"nodeType": "YulBlock",
																			"src": "11052:23:17",
																			"statements": [
																				{
																					"nativeSrc": "11054:19:17",
																					"nodeType": "YulAssignment",
																					"src": "11054:19:17",
																					"value": {
																						"name": "data",
																						"nativeSrc": "11069:4:17",
																						"nodeType": "YulIdentifier",
																						"src": "11069:4:17"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "11054:11:17",
																							"nodeType": "YulIdentifier",
																							"src": "11054:11:17"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "11034:10:17",
																					"nodeType": "YulIdentifier",
																					"src": "11034:10:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11046:4:17",
																					"nodeType": "YulLiteral",
																					"src": "11046:4:17",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "11031:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "11031:2:17"
																			},
																			"nativeSrc": "11031:20:17",
																			"nodeType": "YulFunctionCall",
																			"src": "11031:20:17"
																		},
																		"nativeSrc": "11028:47:17",
																		"nodeType": "YulIf",
																		"src": "11028:47:17"
																	},
																	{
																		"nativeSrc": "11088:41:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11088:41:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "11102:4:17",
																					"nodeType": "YulIdentifier",
																					"src": "11102:4:17"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "11112:1:17",
																							"nodeType": "YulLiteral",
																							"src": "11112:1:17",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "11119:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "11119:3:17"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "11124:2:17",
																									"nodeType": "YulLiteral",
																									"src": "11124:2:17",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "11115:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "11115:3:17"
																							},
																							"nativeSrc": "11115:12:17",
																							"nodeType": "YulFunctionCall",
																							"src": "11115:12:17"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "11108:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "11108:3:17"
																					},
																					"nativeSrc": "11108:20:17",
																					"nodeType": "YulFunctionCall",
																					"src": "11108:20:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11098:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "11098:3:17"
																			},
																			"nativeSrc": "11098:31:17",
																			"nodeType": "YulFunctionCall",
																			"src": "11098:31:17"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "11092:2:17",
																				"nodeType": "YulTypedName",
																				"src": "11092:2:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "11142:24:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11142:24:17",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "11155:11:17",
																			"nodeType": "YulIdentifier",
																			"src": "11155:11:17"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "11146:5:17",
																				"nodeType": "YulTypedName",
																				"src": "11146:5:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "11240:20:17",
																			"nodeType": "YulBlock",
																			"src": "11240:20:17",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "11249:5:17",
																								"nodeType": "YulIdentifier",
																								"src": "11249:5:17"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11256:1:17",
																								"nodeType": "YulLiteral",
																								"src": "11256:1:17",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "11242:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "11242:6:17"
																						},
																						"nativeSrc": "11242:16:17",
																						"nodeType": "YulFunctionCall",
																						"src": "11242:16:17"
																					},
																					"nativeSrc": "11242:16:17",
																					"nodeType": "YulExpressionStatement",
																					"src": "11242:16:17"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "11190:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "11190:5:17"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "11197:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "11197:2:17"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "11187:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "11187:2:17"
																			},
																			"nativeSrc": "11187:13:17",
																			"nodeType": "YulFunctionCall",
																			"src": "11187:13:17"
																		},
																		"nativeSrc": "11179:81:17",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "11201:26:17",
																			"nodeType": "YulBlock",
																			"src": "11201:26:17",
																			"statements": [
																				{
																					"nativeSrc": "11203:22:17",
																					"nodeType": "YulAssignment",
																					"src": "11203:22:17",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "11216:5:17",
																								"nodeType": "YulIdentifier",
																								"src": "11216:5:17"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11223:1:17",
																								"nodeType": "YulLiteral",
																								"src": "11223:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "11212:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "11212:3:17"
																						},
																						"nativeSrc": "11212:13:17",
																						"nodeType": "YulFunctionCall",
																						"src": "11212:13:17"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "11203:5:17",
																							"nodeType": "YulIdentifier",
																							"src": "11203:5:17"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "11183:3:17",
																			"nodeType": "YulBlock",
																			"src": "11183:3:17",
																			"statements": []
																		},
																		"src": "11179:81:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "10855:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "10855:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10860:2:17",
																		"nodeType": "YulLiteral",
																		"src": "10860:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10852:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "10852:2:17"
																},
																"nativeSrc": "10852:11:17",
																"nodeType": "YulFunctionCall",
																"src": "10852:11:17"
															},
															"nativeSrc": "10849:421:17",
															"nodeType": "YulIf",
															"src": "10849:421:17"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "10758:518:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "10811:5:17",
														"nodeType": "YulTypedName",
														"src": "10811:5:17",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "10818:3:17",
														"nodeType": "YulTypedName",
														"src": "10818:3:17",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "10823:10:17",
														"nodeType": "YulTypedName",
														"src": "10823:10:17",
														"type": ""
													}
												],
												"src": "10758:518:17"
											},
											{
												"body": {
													"nativeSrc": "11366:81:17",
													"nodeType": "YulBlock",
													"src": "11366:81:17",
													"statements": [
														{
															"nativeSrc": "11376:65:17",
															"nodeType": "YulAssignment",
															"src": "11376:65:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "11391:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "11391:4:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "11409:1:17",
																										"nodeType": "YulLiteral",
																										"src": "11409:1:17",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "11412:3:17",
																										"nodeType": "YulIdentifier",
																										"src": "11412:3:17"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "11405:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "11405:3:17"
																								},
																								"nativeSrc": "11405:11:17",
																								"nodeType": "YulFunctionCall",
																								"src": "11405:11:17"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "11422:1:17",
																										"nodeType": "YulLiteral",
																										"src": "11422:1:17",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "11418:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "11418:3:17"
																								},
																								"nativeSrc": "11418:6:17",
																								"nodeType": "YulFunctionCall",
																								"src": "11418:6:17"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "11401:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "11401:3:17"
																						},
																						"nativeSrc": "11401:24:17",
																						"nodeType": "YulFunctionCall",
																						"src": "11401:24:17"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "11397:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "11397:3:17"
																				},
																				"nativeSrc": "11397:29:17",
																				"nodeType": "YulFunctionCall",
																				"src": "11397:29:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11387:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11387:3:17"
																		},
																		"nativeSrc": "11387:40:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11387:40:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11433:1:17",
																				"nodeType": "YulLiteral",
																				"src": "11433:1:17",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "11436:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "11436:3:17"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "11429:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11429:3:17"
																		},
																		"nativeSrc": "11429:11:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11429:11:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "11384:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "11384:2:17"
																},
																"nativeSrc": "11384:57:17",
																"nodeType": "YulFunctionCall",
																"src": "11384:57:17"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "11376:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "11376:4:17"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "11281:166:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "11343:4:17",
														"nodeType": "YulTypedName",
														"src": "11343:4:17",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "11349:3:17",
														"nodeType": "YulTypedName",
														"src": "11349:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "11357:4:17",
														"nodeType": "YulTypedName",
														"src": "11357:4:17",
														"type": ""
													}
												],
												"src": "11281:166:17"
											},
											{
												"body": {
													"nativeSrc": "11548:1249:17",
													"nodeType": "YulBlock",
													"src": "11548:1249:17",
													"statements": [
														{
															"nativeSrc": "11558:24:17",
															"nodeType": "YulVariableDeclaration",
															"src": "11558:24:17",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "11578:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "11578:3:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11572:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "11572:5:17"
																},
																"nativeSrc": "11572:10:17",
																"nodeType": "YulFunctionCall",
																"src": "11572:10:17"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "11562:6:17",
																	"nodeType": "YulTypedName",
																	"src": "11562:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11625:22:17",
																"nodeType": "YulBlock",
																"src": "11625:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "11627:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "11627:16:17"
																			},
																			"nativeSrc": "11627:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "11627:18:17"
																		},
																		"nativeSrc": "11627:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "11627:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "11597:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "11597:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "11613:2:17",
																						"nodeType": "YulLiteral",
																						"src": "11613:2:17",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11617:1:17",
																						"nodeType": "YulLiteral",
																						"src": "11617:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "11609:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "11609:3:17"
																				},
																				"nativeSrc": "11609:10:17",
																				"nodeType": "YulFunctionCall",
																				"src": "11609:10:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11621:1:17",
																				"nodeType": "YulLiteral",
																				"src": "11621:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11605:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11605:3:17"
																		},
																		"nativeSrc": "11605:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11605:18:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11594:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "11594:2:17"
																},
																"nativeSrc": "11594:30:17",
																"nodeType": "YulFunctionCall",
																"src": "11594:30:17"
															},
															"nativeSrc": "11591:56:17",
															"nodeType": "YulIf",
															"src": "11591:56:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "11700:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "11700:4:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "11738:4:17",
																						"nodeType": "YulIdentifier",
																						"src": "11738:4:17"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "11732:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "11732:5:17"
																				},
																				"nativeSrc": "11732:11:17",
																				"nodeType": "YulFunctionCall",
																				"src": "11732:11:17"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "11706:25:17",
																			"nodeType": "YulIdentifier",
																			"src": "11706:25:17"
																		},
																		"nativeSrc": "11706:38:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11706:38:17"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "11746:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "11746:6:17"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "11656:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "11656:43:17"
																},
																"nativeSrc": "11656:97:17",
																"nodeType": "YulFunctionCall",
																"src": "11656:97:17"
															},
															"nativeSrc": "11656:97:17",
															"nodeType": "YulExpressionStatement",
															"src": "11656:97:17"
														},
														{
															"nativeSrc": "11762:18:17",
															"nodeType": "YulVariableDeclaration",
															"src": "11762:18:17",
															"value": {
																"kind": "number",
																"nativeSrc": "11779:1:17",
																"nodeType": "YulLiteral",
																"src": "11779:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "11766:9:17",
																	"nodeType": "YulTypedName",
																	"src": "11766:9:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11789:23:17",
															"nodeType": "YulVariableDeclaration",
															"src": "11789:23:17",
															"value": {
																"kind": "number",
																"nativeSrc": "11808:4:17",
																"nodeType": "YulLiteral",
																"src": "11808:4:17",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "11793:11:17",
																	"nodeType": "YulTypedName",
																	"src": "11793:11:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11821:17:17",
															"nodeType": "YulAssignment",
															"src": "11821:17:17",
															"value": {
																"kind": "number",
																"nativeSrc": "11834:4:17",
																"nodeType": "YulLiteral",
																"src": "11834:4:17",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "11821:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "11821:9:17"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "11884:656:17",
																		"nodeType": "YulBlock",
																		"src": "11884:656:17",
																		"statements": [
																			{
																				"nativeSrc": "11898:35:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "11898:35:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "11917:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "11917:6:17"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "11929:2:17",
																									"nodeType": "YulLiteral",
																									"src": "11929:2:17",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "11925:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "11925:3:17"
																							},
																							"nativeSrc": "11925:7:17",
																							"nodeType": "YulFunctionCall",
																							"src": "11925:7:17"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "11913:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "11913:3:17"
																					},
																					"nativeSrc": "11913:20:17",
																					"nodeType": "YulFunctionCall",
																					"src": "11913:20:17"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "11902:7:17",
																						"nodeType": "YulTypedName",
																						"src": "11902:7:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "11946:49:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "11946:49:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "11990:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "11990:4:17"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "11960:29:17",
																						"nodeType": "YulIdentifier",
																						"src": "11960:29:17"
																					},
																					"nativeSrc": "11960:35:17",
																					"nodeType": "YulFunctionCall",
																					"src": "11960:35:17"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "11950:6:17",
																						"nodeType": "YulTypedName",
																						"src": "11950:6:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "12008:10:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "12008:10:17",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "12017:1:17",
																					"nodeType": "YulLiteral",
																					"src": "12017:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "12012:1:17",
																						"nodeType": "YulTypedName",
																						"src": "12012:1:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "12095:172:17",
																					"nodeType": "YulBlock",
																					"src": "12095:172:17",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "12120:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "12120:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "12138:3:17",
																														"nodeType": "YulIdentifier",
																														"src": "12138:3:17"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "12143:9:17",
																														"nodeType": "YulIdentifier",
																														"src": "12143:9:17"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "12134:3:17",
																													"nodeType": "YulIdentifier",
																													"src": "12134:3:17"
																												},
																												"nativeSrc": "12134:19:17",
																												"nodeType": "YulFunctionCall",
																												"src": "12134:19:17"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "12128:5:17",
																											"nodeType": "YulIdentifier",
																											"src": "12128:5:17"
																										},
																										"nativeSrc": "12128:26:17",
																										"nodeType": "YulFunctionCall",
																										"src": "12128:26:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "12113:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "12113:6:17"
																								},
																								"nativeSrc": "12113:42:17",
																								"nodeType": "YulFunctionCall",
																								"src": "12113:42:17"
																							},
																							"nativeSrc": "12113:42:17",
																							"nodeType": "YulExpressionStatement",
																							"src": "12113:42:17"
																						},
																						{
																							"nativeSrc": "12172:24:17",
																							"nodeType": "YulAssignment",
																							"src": "12172:24:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "12186:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "12186:6:17"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "12194:1:17",
																										"nodeType": "YulLiteral",
																										"src": "12194:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "12182:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "12182:3:17"
																								},
																								"nativeSrc": "12182:14:17",
																								"nodeType": "YulFunctionCall",
																								"src": "12182:14:17"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "12172:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "12172:6:17"
																								}
																							]
																						},
																						{
																							"nativeSrc": "12213:40:17",
																							"nodeType": "YulAssignment",
																							"src": "12213:40:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "12230:9:17",
																										"nodeType": "YulIdentifier",
																										"src": "12230:9:17"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "12241:11:17",
																										"nodeType": "YulIdentifier",
																										"src": "12241:11:17"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "12226:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "12226:3:17"
																								},
																								"nativeSrc": "12226:27:17",
																								"nodeType": "YulFunctionCall",
																								"src": "12226:27:17"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "12213:9:17",
																									"nodeType": "YulIdentifier",
																									"src": "12213:9:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "12042:1:17",
																							"nodeType": "YulIdentifier",
																							"src": "12042:1:17"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "12045:7:17",
																							"nodeType": "YulIdentifier",
																							"src": "12045:7:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "12039:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "12039:2:17"
																					},
																					"nativeSrc": "12039:14:17",
																					"nodeType": "YulFunctionCall",
																					"src": "12039:14:17"
																				},
																				"nativeSrc": "12031:236:17",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "12054:28:17",
																					"nodeType": "YulBlock",
																					"src": "12054:28:17",
																					"statements": [
																						{
																							"nativeSrc": "12056:24:17",
																							"nodeType": "YulAssignment",
																							"src": "12056:24:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "12065:1:17",
																										"nodeType": "YulIdentifier",
																										"src": "12065:1:17"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "12068:11:17",
																										"nodeType": "YulIdentifier",
																										"src": "12068:11:17"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "12061:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "12061:3:17"
																								},
																								"nativeSrc": "12061:19:17",
																								"nodeType": "YulFunctionCall",
																								"src": "12061:19:17"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "12056:1:17",
																									"nodeType": "YulIdentifier",
																									"src": "12056:1:17"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "12035:3:17",
																					"nodeType": "YulBlock",
																					"src": "12035:3:17",
																					"statements": []
																				},
																				"src": "12031:236:17"
																			},
																			{
																				"body": {
																					"nativeSrc": "12315:166:17",
																					"nodeType": "YulBlock",
																					"src": "12315:166:17",
																					"statements": [
																						{
																							"nativeSrc": "12333:43:17",
																							"nodeType": "YulVariableDeclaration",
																							"src": "12333:43:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "12360:3:17",
																												"nodeType": "YulIdentifier",
																												"src": "12360:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "12365:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "12365:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "12356:3:17",
																											"nodeType": "YulIdentifier",
																											"src": "12356:3:17"
																										},
																										"nativeSrc": "12356:19:17",
																										"nodeType": "YulFunctionCall",
																										"src": "12356:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "12350:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "12350:5:17"
																								},
																								"nativeSrc": "12350:26:17",
																								"nodeType": "YulFunctionCall",
																								"src": "12350:26:17"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "12337:9:17",
																									"nodeType": "YulTypedName",
																									"src": "12337:9:17",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "12400:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "12400:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "12412:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "12412:9:17"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "12439:1:17",
																																				"nodeType": "YulLiteral",
																																				"src": "12439:1:17",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "12442:6:17",
																																				"nodeType": "YulIdentifier",
																																				"src": "12442:6:17"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "12435:3:17",
																																			"nodeType": "YulIdentifier",
																																			"src": "12435:3:17"
																																		},
																																		"nativeSrc": "12435:14:17",
																																		"nodeType": "YulFunctionCall",
																																		"src": "12435:14:17"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "12451:3:17",
																																		"nodeType": "YulLiteral",
																																		"src": "12451:3:17",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "12431:3:17",
																																	"nodeType": "YulIdentifier",
																																	"src": "12431:3:17"
																																},
																																"nativeSrc": "12431:24:17",
																																"nodeType": "YulFunctionCall",
																																"src": "12431:24:17"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "12461:1:17",
																																		"nodeType": "YulLiteral",
																																		"src": "12461:1:17",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "12457:3:17",
																																	"nodeType": "YulIdentifier",
																																	"src": "12457:3:17"
																																},
																																"nativeSrc": "12457:6:17",
																																"nodeType": "YulFunctionCall",
																																"src": "12457:6:17"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "12427:3:17",
																															"nodeType": "YulIdentifier",
																															"src": "12427:3:17"
																														},
																														"nativeSrc": "12427:37:17",
																														"nodeType": "YulFunctionCall",
																														"src": "12427:37:17"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "12423:3:17",
																													"nodeType": "YulIdentifier",
																													"src": "12423:3:17"
																												},
																												"nativeSrc": "12423:42:17",
																												"nodeType": "YulFunctionCall",
																												"src": "12423:42:17"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "12408:3:17",
																											"nodeType": "YulIdentifier",
																											"src": "12408:3:17"
																										},
																										"nativeSrc": "12408:58:17",
																										"nodeType": "YulFunctionCall",
																										"src": "12408:58:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "12393:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "12393:6:17"
																								},
																								"nativeSrc": "12393:74:17",
																								"nodeType": "YulFunctionCall",
																								"src": "12393:74:17"
																							},
																							"nativeSrc": "12393:74:17",
																							"nodeType": "YulExpressionStatement",
																							"src": "12393:74:17"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "12286:7:17",
																							"nodeType": "YulIdentifier",
																							"src": "12286:7:17"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "12295:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "12295:6:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "12283:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "12283:2:17"
																					},
																					"nativeSrc": "12283:19:17",
																					"nodeType": "YulFunctionCall",
																					"src": "12283:19:17"
																				},
																				"nativeSrc": "12280:201:17",
																				"nodeType": "YulIf",
																				"src": "12280:201:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "12501:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "12501:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "12515:1:17",
																											"nodeType": "YulLiteral",
																											"src": "12515:1:17",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "12518:6:17",
																											"nodeType": "YulIdentifier",
																											"src": "12518:6:17"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "12511:3:17",
																										"nodeType": "YulIdentifier",
																										"src": "12511:3:17"
																									},
																									"nativeSrc": "12511:14:17",
																									"nodeType": "YulFunctionCall",
																									"src": "12511:14:17"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "12527:1:17",
																									"nodeType": "YulLiteral",
																									"src": "12527:1:17",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "12507:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "12507:3:17"
																							},
																							"nativeSrc": "12507:22:17",
																							"nodeType": "YulFunctionCall",
																							"src": "12507:22:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "12494:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "12494:6:17"
																					},
																					"nativeSrc": "12494:36:17",
																					"nodeType": "YulFunctionCall",
																					"src": "12494:36:17"
																				},
																				"nativeSrc": "12494:36:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "12494:36:17"
																			}
																		]
																	},
																	"nativeSrc": "11877:663:17",
																	"nodeType": "YulCase",
																	"src": "11877:663:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11882:1:17",
																		"nodeType": "YulLiteral",
																		"src": "11882:1:17",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "12557:234:17",
																		"nodeType": "YulBlock",
																		"src": "12557:234:17",
																		"statements": [
																			{
																				"nativeSrc": "12571:14:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "12571:14:17",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "12584:1:17",
																					"nodeType": "YulLiteral",
																					"src": "12584:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "12575:5:17",
																						"nodeType": "YulTypedName",
																						"src": "12575:5:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "12620:67:17",
																					"nodeType": "YulBlock",
																					"src": "12620:67:17",
																					"statements": [
																						{
																							"nativeSrc": "12638:35:17",
																							"nodeType": "YulAssignment",
																							"src": "12638:35:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "12657:3:17",
																												"nodeType": "YulIdentifier",
																												"src": "12657:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "12662:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "12662:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "12653:3:17",
																											"nodeType": "YulIdentifier",
																											"src": "12653:3:17"
																										},
																										"nativeSrc": "12653:19:17",
																										"nodeType": "YulFunctionCall",
																										"src": "12653:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "12647:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "12647:5:17"
																								},
																								"nativeSrc": "12647:26:17",
																								"nodeType": "YulFunctionCall",
																								"src": "12647:26:17"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "12638:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "12638:5:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "12601:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "12601:6:17"
																				},
																				"nativeSrc": "12598:89:17",
																				"nodeType": "YulIf",
																				"src": "12598:89:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "12707:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "12707:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "12766:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "12766:5:17"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "12773:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "12773:6:17"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "12713:52:17",
																								"nodeType": "YulIdentifier",
																								"src": "12713:52:17"
																							},
																							"nativeSrc": "12713:67:17",
																							"nodeType": "YulFunctionCall",
																							"src": "12713:67:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "12700:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "12700:6:17"
																					},
																					"nativeSrc": "12700:81:17",
																					"nodeType": "YulFunctionCall",
																					"src": "12700:81:17"
																				},
																				"nativeSrc": "12700:81:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "12700:81:17"
																			}
																		]
																	},
																	"nativeSrc": "12549:242:17",
																	"nodeType": "YulCase",
																	"src": "12549:242:17",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "11857:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "11857:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11865:2:17",
																		"nodeType": "YulLiteral",
																		"src": "11865:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11854:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "11854:2:17"
																},
																"nativeSrc": "11854:14:17",
																"nodeType": "YulFunctionCall",
																"src": "11854:14:17"
															},
															"nativeSrc": "11847:944:17",
															"nodeType": "YulSwitch",
															"src": "11847:944:17"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "11452:1345:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "11533:4:17",
														"nodeType": "YulTypedName",
														"src": "11533:4:17",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "11539:3:17",
														"nodeType": "YulTypedName",
														"src": "11539:3:17",
														"type": ""
													}
												],
												"src": "11452:1345:17"
											},
											{
												"body": {
													"nativeSrc": "13005:297:17",
													"nodeType": "YulBlock",
													"src": "13005:297:17",
													"statements": [
														{
															"nativeSrc": "13015:29:17",
															"nodeType": "YulVariableDeclaration",
															"src": "13015:29:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "13033:3:17",
																				"nodeType": "YulLiteral",
																				"src": "13033:3:17",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13038:1:17",
																				"nodeType": "YulLiteral",
																				"src": "13038:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "13029:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "13029:3:17"
																		},
																		"nativeSrc": "13029:11:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13029:11:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13042:1:17",
																		"nodeType": "YulLiteral",
																		"src": "13042:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "13025:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "13025:3:17"
																},
																"nativeSrc": "13025:19:17",
																"nodeType": "YulFunctionCall",
																"src": "13025:19:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "13019:2:17",
																	"nodeType": "YulTypedName",
																	"src": "13019:2:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13060:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "13060:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "13075:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "13075:6:17"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "13083:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "13083:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13071:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "13071:3:17"
																		},
																		"nativeSrc": "13071:15:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13071:15:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13053:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "13053:6:17"
																},
																"nativeSrc": "13053:34:17",
																"nodeType": "YulFunctionCall",
																"src": "13053:34:17"
															},
															"nativeSrc": "13053:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "13053:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13107:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "13107:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13118:2:17",
																				"nodeType": "YulLiteral",
																				"src": "13118:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13103:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "13103:3:17"
																		},
																		"nativeSrc": "13103:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13103:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "13127:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "13127:6:17"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "13135:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "13135:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13123:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "13123:3:17"
																		},
																		"nativeSrc": "13123:15:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13123:15:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13096:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "13096:6:17"
																},
																"nativeSrc": "13096:43:17",
																"nodeType": "YulFunctionCall",
																"src": "13096:43:17"
															},
															"nativeSrc": "13096:43:17",
															"nodeType": "YulExpressionStatement",
															"src": "13096:43:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13159:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "13159:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13170:2:17",
																				"nodeType": "YulLiteral",
																				"src": "13170:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13155:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "13155:3:17"
																		},
																		"nativeSrc": "13155:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13155:18:17"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "13175:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "13175:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13148:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "13148:6:17"
																},
																"nativeSrc": "13148:34:17",
																"nodeType": "YulFunctionCall",
																"src": "13148:34:17"
															},
															"nativeSrc": "13148:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "13148:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13202:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "13202:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13213:2:17",
																				"nodeType": "YulLiteral",
																				"src": "13213:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13198:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "13198:3:17"
																		},
																		"nativeSrc": "13198:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13198:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13218:3:17",
																		"nodeType": "YulLiteral",
																		"src": "13218:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13191:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "13191:6:17"
																},
																"nativeSrc": "13191:31:17",
																"nodeType": "YulFunctionCall",
																"src": "13191:31:17"
															},
															"nativeSrc": "13191:31:17",
															"nodeType": "YulExpressionStatement",
															"src": "13191:31:17"
														},
														{
															"nativeSrc": "13231:65:17",
															"nodeType": "YulAssignment",
															"src": "13231:65:17",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "13268:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "13268:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13280:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "13280:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13291:3:17",
																				"nodeType": "YulLiteral",
																				"src": "13291:3:17",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13276:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "13276:3:17"
																		},
																		"nativeSrc": "13276:19:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13276:19:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "13239:28:17",
																	"nodeType": "YulIdentifier",
																	"src": "13239:28:17"
																},
																"nativeSrc": "13239:57:17",
																"nodeType": "YulFunctionCall",
																"src": "13239:57:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13231:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "13231:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "12802:500:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12950:9:17",
														"nodeType": "YulTypedName",
														"src": "12950:9:17",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12961:6:17",
														"nodeType": "YulTypedName",
														"src": "12961:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12969:6:17",
														"nodeType": "YulTypedName",
														"src": "12969:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12977:6:17",
														"nodeType": "YulTypedName",
														"src": "12977:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12985:6:17",
														"nodeType": "YulTypedName",
														"src": "12985:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12996:4:17",
														"nodeType": "YulTypedName",
														"src": "12996:4:17",
														"type": ""
													}
												],
												"src": "12802:500:17"
											},
											{
												"body": {
													"nativeSrc": "13387:169:17",
													"nodeType": "YulBlock",
													"src": "13387:169:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "13433:16:17",
																"nodeType": "YulBlock",
																"src": "13433:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13442:1:17",
																					"nodeType": "YulLiteral",
																					"src": "13442:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13445:1:17",
																					"nodeType": "YulLiteral",
																					"src": "13445:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13435:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "13435:6:17"
																			},
																			"nativeSrc": "13435:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "13435:12:17"
																		},
																		"nativeSrc": "13435:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "13435:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13408:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "13408:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13417:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "13417:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13404:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "13404:3:17"
																		},
																		"nativeSrc": "13404:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13404:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13429:2:17",
																		"nodeType": "YulLiteral",
																		"src": "13429:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13400:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "13400:3:17"
																},
																"nativeSrc": "13400:32:17",
																"nodeType": "YulFunctionCall",
																"src": "13400:32:17"
															},
															"nativeSrc": "13397:52:17",
															"nodeType": "YulIf",
															"src": "13397:52:17"
														},
														{
															"nativeSrc": "13458:29:17",
															"nodeType": "YulVariableDeclaration",
															"src": "13458:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13477:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "13477:9:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13471:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "13471:5:17"
																},
																"nativeSrc": "13471:16:17",
																"nodeType": "YulFunctionCall",
																"src": "13471:16:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "13462:5:17",
																	"nodeType": "YulTypedName",
																	"src": "13462:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13520:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "13520:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "13496:23:17",
																	"nodeType": "YulIdentifier",
																	"src": "13496:23:17"
																},
																"nativeSrc": "13496:30:17",
																"nodeType": "YulFunctionCall",
																"src": "13496:30:17"
															},
															"nativeSrc": "13496:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "13496:30:17"
														},
														{
															"nativeSrc": "13535:15:17",
															"nodeType": "YulAssignment",
															"src": "13535:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "13545:5:17",
																"nodeType": "YulIdentifier",
																"src": "13545:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "13535:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "13535:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "13307:249:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13353:9:17",
														"nodeType": "YulTypedName",
														"src": "13353:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13364:7:17",
														"nodeType": "YulTypedName",
														"src": "13364:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13376:6:17",
														"nodeType": "YulTypedName",
														"src": "13376:6:17",
														"type": ""
													}
												],
												"src": "13307:249:17"
											},
											{
												"body": {
													"nativeSrc": "13690:145:17",
													"nodeType": "YulBlock",
													"src": "13690:145:17",
													"statements": [
														{
															"nativeSrc": "13700:26:17",
															"nodeType": "YulAssignment",
															"src": "13700:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13712:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "13712:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13723:2:17",
																		"nodeType": "YulLiteral",
																		"src": "13723:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13708:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "13708:3:17"
																},
																"nativeSrc": "13708:18:17",
																"nodeType": "YulFunctionCall",
																"src": "13708:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13700:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "13700:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13742:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "13742:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "13757:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "13757:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "13773:3:17",
																								"nodeType": "YulLiteral",
																								"src": "13773:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "13778:1:17",
																								"nodeType": "YulLiteral",
																								"src": "13778:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "13769:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "13769:3:17"
																						},
																						"nativeSrc": "13769:11:17",
																						"nodeType": "YulFunctionCall",
																						"src": "13769:11:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13782:1:17",
																						"nodeType": "YulLiteral",
																						"src": "13782:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "13765:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "13765:3:17"
																				},
																				"nativeSrc": "13765:19:17",
																				"nodeType": "YulFunctionCall",
																				"src": "13765:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13753:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "13753:3:17"
																		},
																		"nativeSrc": "13753:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13753:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13735:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "13735:6:17"
																},
																"nativeSrc": "13735:51:17",
																"nodeType": "YulFunctionCall",
																"src": "13735:51:17"
															},
															"nativeSrc": "13735:51:17",
															"nodeType": "YulExpressionStatement",
															"src": "13735:51:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13806:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "13806:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13817:2:17",
																				"nodeType": "YulLiteral",
																				"src": "13817:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13802:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "13802:3:17"
																		},
																		"nativeSrc": "13802:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13802:18:17"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "13822:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "13822:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13795:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "13795:6:17"
																},
																"nativeSrc": "13795:34:17",
																"nodeType": "YulFunctionCall",
																"src": "13795:34:17"
															},
															"nativeSrc": "13795:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "13795:34:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "13561:274:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13651:9:17",
														"nodeType": "YulTypedName",
														"src": "13651:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13662:6:17",
														"nodeType": "YulTypedName",
														"src": "13662:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13670:6:17",
														"nodeType": "YulTypedName",
														"src": "13670:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13681:4:17",
														"nodeType": "YulTypedName",
														"src": "13681:4:17",
														"type": ""
													}
												],
												"src": "13561:274:17"
											},
											{
												"body": {
													"nativeSrc": "13872:95:17",
													"nodeType": "YulBlock",
													"src": "13872:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13889:1:17",
																		"nodeType": "YulLiteral",
																		"src": "13889:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "13896:3:17",
																				"nodeType": "YulLiteral",
																				"src": "13896:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13901:10:17",
																				"nodeType": "YulLiteral",
																				"src": "13901:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "13892:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "13892:3:17"
																		},
																		"nativeSrc": "13892:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13892:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13882:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "13882:6:17"
																},
																"nativeSrc": "13882:31:17",
																"nodeType": "YulFunctionCall",
																"src": "13882:31:17"
															},
															"nativeSrc": "13882:31:17",
															"nodeType": "YulExpressionStatement",
															"src": "13882:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13929:1:17",
																		"nodeType": "YulLiteral",
																		"src": "13929:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13932:4:17",
																		"nodeType": "YulLiteral",
																		"src": "13932:4:17",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13922:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "13922:6:17"
																},
																"nativeSrc": "13922:15:17",
																"nodeType": "YulFunctionCall",
																"src": "13922:15:17"
															},
															"nativeSrc": "13922:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "13922:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13953:1:17",
																		"nodeType": "YulLiteral",
																		"src": "13953:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13956:4:17",
																		"nodeType": "YulLiteral",
																		"src": "13956:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13946:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "13946:6:17"
																},
																"nativeSrc": "13946:15:17",
																"nodeType": "YulFunctionCall",
																"src": "13946:15:17"
															},
															"nativeSrc": "13946:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "13946:15:17"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "13840:127:17",
												"nodeType": "YulFunctionDefinition",
												"src": "13840:127:17"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_string_memory_ptr(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string_memory_ptr(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_address_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, 0x20)\n        let srcEnd := add(add(offset, shl(5, _1)), 0x20)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, 0x20)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        array := allocate_memory(add(and(add(length, 31), not(31)), 0x20))\n        mstore(array, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(array, 0x20), src, length)\n        mstore(add(add(array, length), 0x20), 0)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_string(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        let _2 := 32\n        let offset_1 := calldataload(add(headStart, _2))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let _3 := add(headStart, offset_1)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_4))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _2)\n        let srcEnd := add(add(_3, shl(5, _4)), _2)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, _1) { revert(0, 0) }\n            mstore(dst, abi_decode_string(add(add(_3, innerOffset), _2), dataEnd))\n            dst := add(dst, _2)\n        }\n        value1 := dst_1\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mcopy(pos, add(value, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        end := abi_encode_string(value1, abi_encode_string(value0, pos))\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string_memory_ptr(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n}",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610105575f3560e01c806301ffc9a71461010957806306fdde0314610131578063081812fc14610146578063095ea7b31461016657806323b872dd1461017b57806342842e0e1461018e5780634c7bc5cf146101a15780636352211e146101b457806370a08231146101c7578063715018a6146101e85780638da5cb5b146101f057806395d89b41146101f8578063a22cb46514610200578063aef9509814610213578063b6c3207414610226578063b88d4fde14610239578063c87b56dd1461024c578063d0def5211461025f578063e985e9c514610272578063f2fde38b14610285578063fc12768b14610298575b5f80fd5b61011c61011736600461102f565b6102ab565b60405190151581526020015b60405180910390f35b6101396102d5565b6040516101289190611078565b61015961015436600461108a565b610364565b60405161012891906110a1565b6101796101743660046110d0565b610378565b005b6101796101893660046110f8565b610387565b61017961019c3660046110f8565b610419565b6101796101af36600461127c565b610438565b6101596101c236600461108a565b6104b6565b6101da6101d5366004611348565b6104c0565b604051908152602001610128565b610179610505565b610159610518565b610139610527565b61017961020e366004611361565b610536565b61017961022136600461139a565b610541565b6101796102343660046113dd565b610553565b610179610247366004611432565b610591565b61013961025a36600461108a565b6105a8565b61017961026d3660046114a8565b6106b3565b61011c6102803660046114dc565b6106de565b610179610293366004611348565b61070b565b6101796102a636600461150d565b610748565b5f6001600160e01b03198216632483248360e11b14806102cf57506102cf82610788565b92915050565b60605f80546102e39061155f565b80601f016020809104026020016040519081016040528092919081815260200182805461030f9061155f565b801561035a5780601f106103315761010080835404028352916020019161035a565b820191905f5260205f20905b81548152906001019060200180831161033d57829003601f168201915b5050505050905090565b5f61036e826107d7565b506102cf8261080e565b610383828233610828565b5050565b6001600160a01b0382166103b9575f604051633250574960e11b81526004016103b091906110a1565b60405180910390fd5b5f6103c5838333610835565b9050836001600160a01b0316816001600160a01b031614610413576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016103b0565b50505050565b61043383838360405180602001604052805f815250610591565b505050565b610440610922565b805182511461044d575f80fd5b5f5b825181101561049c5761049483828151811061046d5761046d611597565b602002602001015183838151811061048757610487611597565b6020026020010151610954565b60010161044f565b506040515f80516020611755833981519152905f90a15050565b5f6102cf826107d7565b5f6001600160a01b0382166104ea575f6040516322718ad960e21b81526004016103b091906110a1565b506001600160a01b03165f9081526003602052604090205490565b61050d610922565b6105165f610986565b565b6007546001600160a01b031690565b6060600180546102e39061155f565b6103833383836109d7565b610549610922565b6103838282610a6c565b61055b610922565b5f5b825181101561049c5761058983828151811061057b5761057b611597565b602002602001015183610954565b60010161055d565b61059c848484610387565b61041384848484610abb565b60606105b3826107d7565b505f82815260066020526040812080546105cc9061155f565b80601f01602080910402602001604051908101604052809291908181526020018280546105f89061155f565b80156106435780601f1061061a57610100808354040283529160200191610643565b820191905f5260205f20905b81548152906001019060200180831161062657829003601f168201915b505050505090505f61065f60408051602081019091525f815290565b905080515f03610670575092915050565b8151156106a257808260405160200161068a9291906115c2565b60405160208183030381529060405292505050919050565b6106ab84610bcf565b949350505050565b6106bb610922565b6106c58282610954565b6040515f80516020611755833981519152905f90a15050565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b610713610922565b6001600160a01b03811661073c575f604051631e4fbdf760e01b81526004016103b091906110a1565b61074581610986565b50565b610750610922565b826001600160a01b0316610763836104b6565b6001600160a01b031614610775575f80fd5b61077e82610c40565b6104338382610954565b5f6001600160e01b031982166380ac58cd60e01b14806107b857506001600160e01b03198216635b5e139f60e01b145b806102cf57506301ffc9a760e01b6001600160e01b03198316146102cf565b5f806107e283610c78565b90506001600160a01b0381166102cf57604051637e27328960e01b8152600481018490526024016103b0565b5f908152600460205260409020546001600160a01b031690565b6104338383836001610c92565b5f8061084084610c78565b90506001600160a01b0383161561085c5761085c818486610d8d565b6001600160a01b03811615610896576108775f855f80610c92565b6001600160a01b0381165f90815260036020526040902080545f190190555b6001600160a01b038516156108c4576001600160a01b0385165f908152600360205260409020805460010190555b5f8481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b3361092b610518565b6001600160a01b031614610516573360405163118cdaa760e01b81526004016103b091906110a1565b61095c610922565b600880545f918261096c836115d6565b91905055905061097c8382610df1565b6104338183610a6c565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b038216610a005781604051630b61174360e31b81526004016103b091906110a1565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b5f828152600660205260409020610a83828261163e565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b6001600160a01b0383163b1561041357604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610afd9033908890879087906004016116fd565b6020604051808303815f875af1925050508015610b37575060408051601f3d908101601f19168201909252610b3491810190611739565b60015b610b95573d808015610b64576040519150601f19603f3d011682016040523d82523d5f602084013e610b69565b606091505b5080515f03610b8d5783604051633250574960e11b81526004016103b091906110a1565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b14610bc85783604051633250574960e11b81526004016103b091906110a1565b5050505050565b6060610bda826107d7565b505f610bf060408051602081019091525f815290565b90505f815111610c0e5760405180602001604052805f815250610c39565b80610c1884610e52565b604051602001610c299291906115c2565b6040516020818303038152906040525b9392505050565b5f610c4c5f835f610835565b90506001600160a01b03811661038357604051637e27328960e01b8152600481018390526024016103b0565b5f908152600260205260409020546001600160a01b031690565b8080610ca657506001600160a01b03821615155b15610d5e575f610cb5846107d7565b90506001600160a01b03831615801590610ce15750826001600160a01b0316816001600160a01b031614155b8015610cf45750610cf281846106de565b155b15610d14578260405163a9fbf51f60e01b81526004016103b091906110a1565b8115610d5c5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50505f90815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610d98838383610ee1565b610433576001600160a01b038316610dc657604051637e27328960e01b8152600481018290526024016103b0565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016103b0565b6001600160a01b038216610e1a575f604051633250574960e11b81526004016103b091906110a1565b5f610e2683835f610835565b90506001600160a01b03811615610433575f6040516339e3563760e11b81526004016103b091906110a1565b60605f610e5e83610f45565b60010190505f816001600160401b03811115610e7c57610e7c611131565b6040519080825280601f01601f191660200182016040528015610ea6576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610eb057509392505050565b5f6001600160a01b038316158015906106ab5750826001600160a01b0316846001600160a01b03161480610f1a5750610f1a84846106de565b806106ab5750826001600160a01b0316610f338361080e565b6001600160a01b031614949350505050565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610f835772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6904ee2d6d415b85acef8160201b8310610fad576904ee2d6d415b85acef8160201b830492506020015b662386f26fc100008310610fcb57662386f26fc10000830492506010015b6305f5e1008310610fe3576305f5e100830492506008015b6127108310610ff757612710830492506004015b60648310611009576064830492506002015b600a83106102cf5760010192915050565b6001600160e01b031981168114610745575f80fd5b5f6020828403121561103f575f80fd5b8135610c398161101a565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610c39602083018461104a565b5f6020828403121561109a575f80fd5b5035919050565b6001600160a01b0391909116815260200190565b80356001600160a01b03811681146110cb575f80fd5b919050565b5f80604083850312156110e1575f80fd5b6110ea836110b5565b946020939093013593505050565b5f805f6060848603121561110a575f80fd5b611113846110b5565b9250611121602085016110b5565b9150604084013590509250925092565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f191681016001600160401b038111828210171561116d5761116d611131565b604052919050565b5f6001600160401b0382111561118d5761118d611131565b5060051b60200190565b5f82601f8301126111a6575f80fd5b813560206111bb6111b683611175565b611145565b8083825260208201915060208460051b8701019350868411156111dc575f80fd5b602086015b848110156111ff576111f2816110b5565b83529183019183016111e1565b509695505050505050565b5f6001600160401b0383111561122257611222611131565b611235601f8401601f1916602001611145565b9050828152838383011115611248575f80fd5b828260208301375f602084830101529392505050565b5f82601f83011261126d575f80fd5b610c398383356020850161120a565b5f806040838503121561128d575f80fd5b82356001600160401b03808211156112a3575f80fd5b6112af86838701611197565b93506020915081850135818111156112c5575f80fd5b8501601f810187136112d5575f80fd5b80356112e36111b682611175565b81815260059190911b82018401908481019089831115611301575f80fd5b8584015b838110156113375780358681111561131b575f80fd5b6113298c898389010161125e565b845250918601918601611305565b508096505050505050509250929050565b5f60208284031215611358575f80fd5b610c39826110b5565b5f8060408385031215611372575f80fd5b61137b836110b5565b91506020830135801515811461138f575f80fd5b809150509250929050565b5f80604083850312156113ab575f80fd5b8235915060208301356001600160401b038111156113c7575f80fd5b6113d38582860161125e565b9150509250929050565b5f80604083850312156113ee575f80fd5b82356001600160401b0380821115611404575f80fd5b61141086838701611197565b93506020850135915080821115611425575f80fd5b506113d38582860161125e565b5f805f8060808587031215611445575f80fd5b61144e856110b5565b935061145c602086016110b5565b92506040850135915060608501356001600160401b0381111561147d575f80fd5b8501601f8101871361148d575f80fd5b61149c8782356020840161120a565b91505092959194509250565b5f80604083850312156114b9575f80fd5b6114c2836110b5565b915060208301356001600160401b038111156113c7575f80fd5b5f80604083850312156114ed575f80fd5b6114f6836110b5565b9150611504602084016110b5565b90509250929050565b5f805f6060848603121561151f575f80fd5b611528846110b5565b92506020840135915060408401356001600160401b03811115611549575f80fd5b6115558682870161125e565b9150509250925092565b600181811c9082168061157357607f821691505b60208210810361159157634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52603260045260245ffd5b5f81518060208401855e5f93019283525090919050565b5f6106ab6115d083866115ab565b846115ab565b5f600182016115f357634e487b7160e01b5f52601160045260245ffd5b5060010190565b601f82111561043357805f5260205f20601f840160051c8101602085101561161f5750805b601f840160051c820191505b81811015610bc8575f815560010161162b565b81516001600160401b0381111561165757611657611131565b61166b81611665845461155f565b846115fa565b602080601f83116001811461169e575f84156116875750858301515b5f19600386901b1c1916600185901b1785556116f5565b5f85815260208120601f198616915b828110156116cc578886015182559484019460019091019084016116ad565b50858210156116e957878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f9061172f9083018461104a565b9695505050505050565b5f60208284031215611749575f80fd5b8151610c398161101a56fe34c73884fbbb790762253ae313e57da96c00670344647f0cb8d41ee92b9f1971a264697066735822122067d34c6e7e5b7cfb7b4b7041f269d920a29b96d5434814400ddb38770c496a2264736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x105 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x4C7BC5CF EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xAEF95098 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0xB6C32074 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xD0DEF521 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0xFC12768B EQ PUSH2 0x298 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11C PUSH2 0x117 CALLDATASIZE PUSH1 0x4 PUSH2 0x102F JUMP JUMPDEST PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x1078 JUMP JUMPDEST PUSH2 0x159 PUSH2 0x154 CALLDATASIZE PUSH1 0x4 PUSH2 0x108A JUMP JUMPDEST PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x10A1 JUMP JUMPDEST PUSH2 0x179 PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0x10D0 JUMP JUMPDEST PUSH2 0x378 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x179 PUSH2 0x189 CALLDATASIZE PUSH1 0x4 PUSH2 0x10F8 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST PUSH2 0x179 PUSH2 0x19C CALLDATASIZE PUSH1 0x4 PUSH2 0x10F8 JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH2 0x179 PUSH2 0x1AF CALLDATASIZE PUSH1 0x4 PUSH2 0x127C JUMP JUMPDEST PUSH2 0x438 JUMP JUMPDEST PUSH2 0x159 PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x108A JUMP JUMPDEST PUSH2 0x4B6 JUMP JUMPDEST PUSH2 0x1DA PUSH2 0x1D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1348 JUMP JUMPDEST PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x128 JUMP JUMPDEST PUSH2 0x179 PUSH2 0x505 JUMP JUMPDEST PUSH2 0x159 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x527 JUMP JUMPDEST PUSH2 0x179 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x1361 JUMP JUMPDEST PUSH2 0x536 JUMP JUMPDEST PUSH2 0x179 PUSH2 0x221 CALLDATASIZE PUSH1 0x4 PUSH2 0x139A JUMP JUMPDEST PUSH2 0x541 JUMP JUMPDEST PUSH2 0x179 PUSH2 0x234 CALLDATASIZE PUSH1 0x4 PUSH2 0x13DD JUMP JUMPDEST PUSH2 0x553 JUMP JUMPDEST PUSH2 0x179 PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0x1432 JUMP JUMPDEST PUSH2 0x591 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0x108A JUMP JUMPDEST PUSH2 0x5A8 JUMP JUMPDEST PUSH2 0x179 PUSH2 0x26D CALLDATASIZE PUSH1 0x4 PUSH2 0x14A8 JUMP JUMPDEST PUSH2 0x6B3 JUMP JUMPDEST PUSH2 0x11C PUSH2 0x280 CALLDATASIZE PUSH1 0x4 PUSH2 0x14DC JUMP JUMPDEST PUSH2 0x6DE JUMP JUMPDEST PUSH2 0x179 PUSH2 0x293 CALLDATASIZE PUSH1 0x4 PUSH2 0x1348 JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST PUSH2 0x179 PUSH2 0x2A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x150D JUMP JUMPDEST PUSH2 0x748 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x24832483 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x2CF JUMPI POP PUSH2 0x2CF DUP3 PUSH2 0x788 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x2E3 SWAP1 PUSH2 0x155F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x30F SWAP1 PUSH2 0x155F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x35A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x331 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x35A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x33D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x36E DUP3 PUSH2 0x7D7 JUMP JUMPDEST POP PUSH2 0x2CF DUP3 PUSH2 0x80E JUMP JUMPDEST PUSH2 0x383 DUP3 DUP3 CALLER PUSH2 0x828 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3B9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x10A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x3C5 DUP4 DUP4 CALLER PUSH2 0x835 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x413 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x433 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x591 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x440 PUSH2 0x922 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x44D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x49C JUMPI PUSH2 0x494 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x46D JUMPI PUSH2 0x46D PUSH2 0x1597 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x487 JUMPI PUSH2 0x487 PUSH2 0x1597 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x954 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x44F JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1755 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH0 SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2CF DUP3 PUSH2 0x7D7 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4EA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x10A1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x50D PUSH2 0x922 JUMP JUMPDEST PUSH2 0x516 PUSH0 PUSH2 0x986 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x2E3 SWAP1 PUSH2 0x155F JUMP JUMPDEST PUSH2 0x383 CALLER DUP4 DUP4 PUSH2 0x9D7 JUMP JUMPDEST PUSH2 0x549 PUSH2 0x922 JUMP JUMPDEST PUSH2 0x383 DUP3 DUP3 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x55B PUSH2 0x922 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x49C JUMPI PUSH2 0x589 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x57B JUMPI PUSH2 0x57B PUSH2 0x1597 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x55D JUMP JUMPDEST PUSH2 0x59C DUP5 DUP5 DUP5 PUSH2 0x387 JUMP JUMPDEST PUSH2 0x413 DUP5 DUP5 DUP5 DUP5 PUSH2 0xABB JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5B3 DUP3 PUSH2 0x7D7 JUMP JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x5CC SWAP1 PUSH2 0x155F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5F8 SWAP1 PUSH2 0x155F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x643 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x61A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x643 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x626 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0x65F PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 SUB PUSH2 0x670 JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x6A2 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x68A SWAP3 SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6AB DUP5 PUSH2 0xBCF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x6BB PUSH2 0x922 JUMP JUMPDEST PUSH2 0x6C5 DUP3 DUP3 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1755 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH0 SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x713 PUSH2 0x922 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x73C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x10A1 JUMP JUMPDEST PUSH2 0x745 DUP2 PUSH2 0x986 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x750 PUSH2 0x922 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x763 DUP4 PUSH2 0x4B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x775 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x77E DUP3 PUSH2 0xC40 JUMP JUMPDEST PUSH2 0x433 DUP4 DUP3 PUSH2 0x954 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x7B8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x2CF JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x2CF JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x7E2 DUP4 PUSH2 0xC78 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2CF JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x433 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xC92 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x840 DUP5 PUSH2 0xC78 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x85C JUMPI PUSH2 0x85C DUP2 DUP5 DUP7 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x896 JUMPI PUSH2 0x877 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0xC92 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x8C4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0x92B PUSH2 0x518 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x516 JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x10A1 JUMP JUMPDEST PUSH2 0x95C PUSH2 0x922 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH0 SWAP2 DUP3 PUSH2 0x96C DUP4 PUSH2 0x15D6 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x97C DUP4 DUP3 PUSH2 0xDF1 JUMP JUMPDEST PUSH2 0x433 DUP2 DUP4 PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA00 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x10A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xA83 DUP3 DUP3 PUSH2 0x163E JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x413 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xAFD SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x16FD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB37 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB34 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1739 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB95 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xB64 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0xB8D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x10A1 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0xBC8 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x10A1 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xBDA DUP3 PUSH2 0x7D7 JUMP JUMPDEST POP PUSH0 PUSH2 0xBF0 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0xC0E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xC39 JUMP JUMPDEST DUP1 PUSH2 0xC18 DUP5 PUSH2 0xE52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC29 SWAP3 SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC4C PUSH0 DUP4 PUSH0 PUSH2 0x835 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x383 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xCA6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xD5E JUMPI PUSH0 PUSH2 0xCB5 DUP5 PUSH2 0x7D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xCE1 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xCF4 JUMPI POP PUSH2 0xCF2 DUP2 DUP5 PUSH2 0x6DE JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xD14 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x10A1 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xD5C JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xD98 DUP4 DUP4 DUP4 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x433 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xDC6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE1A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x10A1 JUMP JUMPDEST PUSH0 PUSH2 0xE26 DUP4 DUP4 PUSH0 PUSH2 0x835 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x433 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x10A1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xE5E DUP4 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xE7C JUMPI PUSH2 0xE7C PUSH2 0x1131 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEA6 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xEB0 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x6AB JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xF1A JUMPI POP PUSH2 0xF1A DUP5 DUP5 PUSH2 0x6DE JUMP JUMPDEST DUP1 PUSH2 0x6AB JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF33 DUP4 PUSH2 0x80E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xF83 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH10 0x4EE2D6D415B85ACEF81 PUSH1 0x20 SHL DUP4 LT PUSH2 0xFAD JUMPI PUSH10 0x4EE2D6D415B85ACEF81 PUSH1 0x20 SHL DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xFCB JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xFE3 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xFF7 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1009 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2CF JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x745 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x103F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC39 DUP2 PUSH2 0x101A JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xC39 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x104A JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x109A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10CB JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10EA DUP4 PUSH2 0x10B5 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x110A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1113 DUP5 PUSH2 0x10B5 JUMP JUMPDEST SWAP3 POP PUSH2 0x1121 PUSH1 0x20 DUP6 ADD PUSH2 0x10B5 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x116D JUMPI PUSH2 0x116D PUSH2 0x1131 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x118D JUMPI PUSH2 0x118D PUSH2 0x1131 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x11BB PUSH2 0x11B6 DUP4 PUSH2 0x1175 JUMP JUMPDEST PUSH2 0x1145 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x11DC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x11FF JUMPI PUSH2 0x11F2 DUP2 PUSH2 0x10B5 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x11E1 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x1222 JUMPI PUSH2 0x1222 PUSH2 0x1131 JUMP JUMPDEST PUSH2 0x1235 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x1145 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x1248 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x126D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC39 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x120A JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x128D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x12A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12AF DUP7 DUP4 DUP8 ADD PUSH2 0x1197 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 SWAP2 POP DUP2 DUP6 ADD CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x12C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x12D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x12E3 PUSH2 0x11B6 DUP3 PUSH2 0x1175 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP10 DUP4 GT ISZERO PUSH2 0x1301 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 DUP5 ADD JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1337 JUMPI DUP1 CALLDATALOAD DUP7 DUP2 GT ISZERO PUSH2 0x131B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1329 DUP13 DUP10 DUP4 DUP10 ADD ADD PUSH2 0x125E JUMP JUMPDEST DUP5 MSTORE POP SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x1305 JUMP JUMPDEST POP DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1358 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC39 DUP3 PUSH2 0x10B5 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1372 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x137B DUP4 PUSH2 0x10B5 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x138F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13AB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x13C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13D3 DUP6 DUP3 DUP7 ADD PUSH2 0x125E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13EE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1404 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1410 DUP7 DUP4 DUP8 ADD PUSH2 0x1197 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1425 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D3 DUP6 DUP3 DUP7 ADD PUSH2 0x125E JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1445 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x144E DUP6 PUSH2 0x10B5 JUMP JUMPDEST SWAP4 POP PUSH2 0x145C PUSH1 0x20 DUP7 ADD PUSH2 0x10B5 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x147D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x148D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x149C DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x120A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x14C2 DUP4 PUSH2 0x10B5 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x13C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14ED JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x14F6 DUP4 PUSH2 0x10B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1504 PUSH1 0x20 DUP5 ADD PUSH2 0x10B5 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x151F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1528 DUP5 PUSH2 0x10B5 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1549 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1555 DUP7 DUP3 DUP8 ADD PUSH2 0x125E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1573 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1591 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6AB PUSH2 0x15D0 DUP4 DUP7 PUSH2 0x15AB JUMP JUMPDEST DUP5 PUSH2 0x15AB JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x15F3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x433 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x161F JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBC8 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x162B JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1657 JUMPI PUSH2 0x1657 PUSH2 0x1131 JUMP JUMPDEST PUSH2 0x166B DUP2 PUSH2 0x1665 DUP5 SLOAD PUSH2 0x155F JUMP JUMPDEST DUP5 PUSH2 0x15FA JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x169E JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1687 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x16F5 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x16CC JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x16AD JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x16E9 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x172F SWAP1 DUP4 ADD DUP5 PUSH2 0x104A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1749 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xC39 DUP2 PUSH2 0x101A JUMP INVALID CALLVALUE 0xC7 CODESIZE DUP5 0xFB 0xBB PUSH26 0x762253AE313E57DA96C00670344647F0CB8D41EE92B9F1971A2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0xD34C6E7E5B7CFB7B 0x4B PUSH17 0x41F269D920A29B96D5434814400DDB3877 0xC BLOBHASH PUSH11 0x2264736F6C634300081900 CALLER ",
							"sourceMap": "249:1407:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;937:207:8;;;;;;:::i;:::-;;:::i;:::-;;;565:14:17;;558:22;540:41;;528:2;513:18;937:207:8;;;;;;;;2365:89:5;;;:::i;:::-;;;;;;;:::i;3497:154::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3323:113::-;;;;;;:::i;:::-;;:::i;:::-;;4143:578;;;;;;:::i;:::-;;:::i;4787:132::-;;;;;;:::i;:::-;;:::i;633:269:16:-;;;;;;:::i;:::-;;:::i;2185:118:5:-;;;;;;:::i;:::-;;:::i;1920:208::-;;;;;;:::i;:::-;;:::i;:::-;;;5845:25:17;;;5833:2;5818:18;1920:208:5;5699:177:17;2293:101:0;;;:::i;1638:85::-;;;:::i;2518:93:5:-;;;:::i;3718:144::-;;;;;;:::i;:::-;;:::i;1314:129:16:-;;;;;;:::i;:::-;;:::i;908:205::-;;;;;;:::i;:::-;;:::i;4985:208:5:-;;;;;;:::i;:::-;;:::i;1210:593:8:-;;;;;;:::i;:::-;;:::i;496:131:16:-;;;;;;:::i;:::-;;:::i;3928:153:5:-;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;1449:205:16:-;;;;;;:::i;:::-;;:::i;937:207:8:-;1039:4;-1:-1:-1;;;;;;1062:35:8;;-1:-1:-1;;;1062:35:8;;:75;;;1101:36;1125:11;1101:23;:36::i;:::-;1055:82;937:207;-1:-1:-1;;937:207:8:o;2365:89:5:-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;3323:113::-;3394:35;3403:2;3407:7;735:10:10;3394:8:5;:35::i;:::-;3323:113;;:::o;4143:578::-;-1:-1:-1;;;;;4237:16:5;;4233:87;;4306:1;4276:33;;-1:-1:-1;;;4276:33:5;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;735:10:10;4562:7:5;:34::i;:::-;4538:58;;4627:4;-1:-1:-1;;;;;4610:21:5;:13;-1:-1:-1;;;;;4610:21:5;;4606:109;;4654:50;;-1:-1:-1;;;4654:50:5;;-1:-1:-1;;;;;9652:15:17;;;4654:50:5;;;9634:34:17;9684:18;;;9677:34;;;9747:15;;9727:18;;;9720:43;9569:18;;4654:50:5;9394:375:17;4606:109:5;4223:498;4143:578;;;:::o;4787:132::-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;633:269:16:-;1531:13:0;:11;:13::i;:::-;746:11:16::1;:18;733:2;:9;:31;725:40;;;::::0;::::1;;788:9;784:91;807:2;:9;803:1;:13;784:91;;;836:28;842:2;845:1;842:5;;;;;;;;:::i;:::-;;;;;;;849:11;861:1;849:14;;;;;;;;:::i;:::-;;;;;;;836:5;:28::i;:::-;818:3;;784:91;;;-1:-1:-1::0;889:6:16::1;::::0;-1:-1:-1;;;;;;;;;;;889:6:16;;;::::1;633:269:::0;;:::o;2185:118:5:-;2248:7;2274:22;2288:7;2274:13;:22::i;1920:208::-;1983:7;-1:-1:-1;;;;;2006:19:5;;2002:87;;2075:1;2048:30;;-1:-1:-1;;;2048:30:5;;;;;;;;:::i;2002:87::-;-1:-1:-1;;;;;;2105:16:5;;;;;:9;:16;;;;;;;1920:208::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1710:6;;-1:-1:-1;;;;;1710:6:0;;1638:85::o;2518:93:5:-;2565:13;2597:7;2590:14;;;;;:::i;3718:144::-;3803:52;735:10:10;3836:8:5;3846;3803:18;:52::i;1314:129:16:-;1531:13:0;:11;:13::i;:::-;1402:34:16::1;1415:7;1424:11;1402:12;:34::i;908:205::-:0;1531:13:0;:11;:13::i;:::-;1002:9:16::1;998:88;1021:2;:9;1017:1;:13;998:88;;;1050:25;1056:2;1059:1;1056:5;;;;;;;;:::i;:::-;;;;;;;1063:11;1050:5;:25::i;:::-;1032:3;;998:88;;4985:208:5::0;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;1210:593:8:-;1283:13;1308:22;1322:7;1308:13;:22::i;:::-;-1:-1:-1;1341:23:8;1367:19;;;:10;:19;;;;;1341:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1396:18;1417:10;3250:9:5;;;;;;;;;-1:-1:-1;3250:9:5;;;3174:92;1417:10:8;1396:31;;1506:4;1500:18;1522:1;1500:23;1496:70;;-1:-1:-1;1546:9:8;1210:593;-1:-1:-1;;1210:593:8:o;1496:70::-;1665:23;;:27;1661:95;;1729:4;1735:9;1715:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1708:37;;;;1210:593;;;:::o;1661:95::-;1773:23;1788:7;1773:14;:23::i;:::-;1766:30;1210:593;-1:-1:-1;;;;1210:593:8:o;496:131:16:-;1531:13:0;:11;:13::i;:::-;577:22:16::1;583:2;587:11;577:5;:22::i;:::-;614:6;::::0;-1:-1:-1;;;;;;;;;;;614:6:16;;;::::1;496:131:::0;;:::o;3928:153:5:-;-1:-1:-1;;;;;4039:25:5;;;4016:4;4039:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;3928:153::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2700:1;2672:31;;-1:-1:-1::0;;;2672:31:0::1;;;;;;;;:::i;2623:91::-;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1449:205:16:-;1531:13:0;:11;:13::i;:::-;1588:2:16::1;-1:-1:-1::0;;;;;1568:22:16::1;:16;1576:7;1568;:16::i;:::-;-1:-1:-1::0;;;;;1568:22:16::1;;1560:31;;;::::0;::::1;;1601:14;1607:7;1601:5;:14::i;:::-;1625:22;1631:2;1635:11;1625:5;:22::i;1561:300:5:-:0;1663:4;-1:-1:-1;;;;;;1698:40:5;;-1:-1:-1;;;1698:40:5;;:104;;-1:-1:-1;;;;;;;1754:48:5;;-1:-1:-1;;;1754:48:5;1698:104;:156;;;-1:-1:-1;;;;;;;;;;861:40:12;;;1818:36:5;762:146:12;16138:241:5;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;-1:-1:-1;;;;;;16267:19:5;;16263:88;;16309:31;;-1:-1:-1;;;16309:31:5;;;;;5845:25:17;;;5818:18;;16309:31:5;5699:177:17;5938:127:5;6008:7;6034:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6034:24:5;;5938:127::o;14418:120::-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;8838:795::-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;-1:-1:-1;;;;;;9035:18:5;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;-1:-1:-1;;;;;9161:18:5;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;-1:-1:-1;;;;;9368:15:5;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9368:20:5;;;9157:256;-1:-1:-1;;;;;9427:16:5;;;9423:107;;-1:-1:-1;;;;;9487:13:5;;;;;;:9;:13;;;;;:18;;9504:1;9487:18;;;9423:107;9540:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9540:21:5;-1:-1:-1;;;;;9540:21:5;;;;;;;;;9577:27;;9540:16;;9577:27;;;;;;;9622:4;8838:795;-1:-1:-1;;;;8838:795:5:o;1796:162:0:-;735:10:10;1855:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1855:23:0;;1851:101;;735:10:10;1901:40:0;;-1:-1:-1;;;1901:40:0;;;;;;;;:::i;1119:189:16:-;1531:13:0;:11;:13::i;:::-;1219:8:16::1;:10:::0;;1201:15:::1;::::0;;1219:10:::1;::::0;::::1;:::i;:::-;;;;;1201:28;;1239:18;1245:2;1249:7;1239:5;:18::i;:::-;1267:34;1280:7;1289:11;1267:12;:34::i;2912:187:0:-:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;15591:312:5:-;-1:-1:-1;;;;;15698:22:5;;15694:91;;15765:8;15743:31;;-1:-1:-1;;;15743:31:5;;;;;;;;:::i;15694:91::-;-1:-1:-1;;;;;15794:25:5;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;15794:46:5;;;;;;;;;;15855:41;;540::17;;;15855::5;;513:18:17;15855:41:5;;;;;;;15591:312;;;:::o;1922:167:8:-;2013:19;;;;:10;:19;;;;;:31;2035:9;2013:19;:31;:::i;:::-;-1:-1:-1;2059:23:8;;5845:25:17;;;2059:23:8;;5833:2:17;5818:18;2059:23:8;;;;;;;1922:167;;:::o;16918:782:5:-;-1:-1:-1;;;;;17034:14:5;;;:18;17030:664;;17072:71;;-1:-1:-1;;;17072:71:5;;-1:-1:-1;;;;;17072:36:5;;;;;:71;;735:10:10;;17123:4:5;;17129:7;;17138:4;;17072:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17072:71:5;;;;;;;;-1:-1:-1;;17072:71:5;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17381:6;:13;17398:1;17381:18;17377:293;;17452:2;17430:25;;-1:-1:-1;;;17430:25:5;;;;;;;;:::i;17377:293::-;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;-1:-1:-1;;;;;;17190:51:5;;-1:-1:-1;;;17190:51:5;17186:130;;17294:2;17272:25;;-1:-1:-1;;;17272:25:5;;;;;;;;:::i;17186:130::-;17144:186;16918:782;;;;:::o;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;3250:9;;;;;;;;;-1:-1:-1;3250:9:5;;;3174:92;2823:10;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;2677:255;-1:-1:-1;;;2677:255:5:o;11462:227::-;11513:21;11537:40;11553:1;11557:7;11574:1;11537:7;:40::i;:::-;11513:64;-1:-1:-1;;;;;;11591:27:5;;11587:96;;11641:31;;-1:-1:-1;;;11641:31:5;;;;;5845:25:17;;;5818:18;;11641:31:5;5699:177:17;5707:115:5;5773:7;5799:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5799:16:5;;5707:115::o;14720:662::-;14880:9;:31;;;-1:-1:-1;;;;;;14893:18:5;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;-1:-1:-1;;;;;;15093:18:5;;;;;;:35;;;15124:4;-1:-1:-1;;;;;15115:13:5;:5;-1:-1:-1;;;;;15115:13:5;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;-1:-1:-1;;;15189:27:5;;;;;;;;:::i;15089:142::-;15249:9;15245:81;;;15303:7;15299:2;-1:-1:-1;;;;;15283:28:5;15292:5;-1:-1:-1;;;;;15283:28:5;;;;;;;;;;;15245:81;14913:423;14876:460;-1:-1:-1;;15346:24:5;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15346:29:5;-1:-1:-1;;;;;15346:29:5;;;;;;;;;;14720:662::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;-1:-1:-1;;;;;7252:19:5;;7248:186;;7298:31;;-1:-1:-1;;;7298:31:5;;;;;5845:25:17;;;5818:18;;7298:31:5;5699:177:17;7248:186:5;7375:44;;-1:-1:-1;;;7375:44:5;;-1:-1:-1;;;;;13753:32:17;;7375:44:5;;;13735:51:17;13802:18;;;13795:34;;;13708:18;;7375:44:5;13561:274:17;9955:327:5;-1:-1:-1;;;;;10022:16:5;;10018:87;;10091:1;10061:33;;-1:-1:-1;;;10061:33:5;;;;;;;;:::i;10018:87::-;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;-1:-1:-1;;;;;;10184:27:5;;;10180:96;;10262:1;10234:31;;-1:-1:-1;;;10234:31:5;;;;;;;;:::i;637:698:11:-;693:13;742:14;759:17;770:5;759:10;:17::i;:::-;779:1;759:21;742:38;;794:20;828:6;-1:-1:-1;;;;;817:18:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:18:11;-1:-1:-1;794:41:11;-1:-1:-1;955:28:11;;;971:2;955:28;1010:282;-1:-1:-1;;1041:5:11;-1:-1:-1;;;1175:2:11;1164:14;;1159:32;1041:5;1146:46;1236:2;1227:11;;;-1:-1:-1;1256:21:11;1010:282;1256:21;-1:-1:-1;1312:6:11;637:698;-1:-1:-1;;;637:698:11:o;6376:272:5:-;6479:4;-1:-1:-1;;;;;6514:21:5;;;;;;:127;;;6561:7;-1:-1:-1;;;;;6552:16:5;:5;-1:-1:-1;;;;;6552:16:5;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:88;;;;6633:7;-1:-1:-1;;;;;6608:32:5;:21;6621:7;6608:12;:21::i;:::-;-1:-1:-1;;;;;6608:32:5;;6495:146;6376:272;-1:-1:-1;;;;6376:272:5:o;12214:916:14:-;12267:7;;-1:-1:-1;;;12342:17:14;;12338:103;;-1:-1:-1;;;12379:17:14;;;-1:-1:-1;12424:2:14;12414:12;12338:103;-1:-1:-1;;;12458:5:14;:17;12454:103;;-1:-1:-1;;;12495:17:14;;;-1:-1:-1;12540:2:14;12530:12;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;-1:-1:-1;12656:2:14;12646:12;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;-1:-1:-1;12770:1:14;12760:11;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;-1:-1:-1;12883:1:14;12873:11;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;-1:-1:-1;12996:1:14;12986:11;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;13117:6;12214:916;-1:-1:-1;;12214:916:14:o;14:131:17:-;-1:-1:-1;;;;;;88:32:17;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:300::-;645:3;683:5;677:12;710:6;705:3;698:19;766:6;759:4;752:5;748:16;741:4;736:3;732:14;726:47;818:1;811:4;802:6;797:3;793:16;789:27;782:38;881:4;874:2;870:7;865:2;857:6;853:15;849:29;844:3;840:39;836:50;829:57;;;592:300;;;;:::o;897:231::-;1046:2;1035:9;1028:21;1009:4;1066:56;1118:2;1107:9;1103:18;1095:6;1066:56;:::i;1133:180::-;1192:6;1245:2;1233:9;1224:7;1220:23;1216:32;1213:52;;;1261:1;1258;1251:12;1213:52;-1:-1:-1;1284:23:17;;1133:180;-1:-1:-1;1133:180:17:o;1318:203::-;-1:-1:-1;;;;;1482:32:17;;;;1464:51;;1452:2;1437:18;;1318:203::o;1526:173::-;1594:20;;-1:-1:-1;;;;;1643:31:17;;1633:42;;1623:70;;1689:1;1686;1679:12;1623:70;1526:173;;;:::o;1704:254::-;1772:6;1780;1833:2;1821:9;1812:7;1808:23;1804:32;1801:52;;;1849:1;1846;1839:12;1801:52;1872:29;1891:9;1872:29;:::i;:::-;1862:39;1948:2;1933:18;;;;1920:32;;-1:-1:-1;;;1704:254:17:o;1963:328::-;2040:6;2048;2056;2109:2;2097:9;2088:7;2084:23;2080:32;2077:52;;;2125:1;2122;2115:12;2077:52;2148:29;2167:9;2148:29;:::i;:::-;2138:39;;2196:38;2230:2;2219:9;2215:18;2196:38;:::i;:::-;2186:48;;2281:2;2270:9;2266:18;2253:32;2243:42;;1963:328;;;;;:::o;2296:127::-;2357:10;2352:3;2348:20;2345:1;2338:31;2388:4;2385:1;2378:15;2412:4;2409:1;2402:15;2428:275;2499:2;2493:9;2564:2;2545:13;;-1:-1:-1;;2541:27:17;2529:40;;-1:-1:-1;;;;;2584:34:17;;2620:22;;;2581:62;2578:88;;;2646:18;;:::i;:::-;2682:2;2675:22;2428:275;;-1:-1:-1;2428:275:17:o;2708:183::-;2768:4;-1:-1:-1;;;;;2790:30:17;;2787:56;;;2823:18;;:::i;:::-;-1:-1:-1;2868:1:17;2864:14;2880:4;2860:25;;2708:183::o;2896:674::-;2950:5;3003:3;2996:4;2988:6;2984:17;2980:27;2970:55;;3021:1;3018;3011:12;2970:55;3057:6;3044:20;3083:4;3107:60;3123:43;3163:2;3123:43;:::i;:::-;3107:60;:::i;:::-;3189:3;3213:2;3208:3;3201:15;3241:4;3236:3;3232:14;3225:21;;3298:4;3292:2;3289:1;3285:10;3277:6;3273:23;3269:34;3255:48;;3326:3;3318:6;3315:15;3312:35;;;3343:1;3340;3333:12;3312:35;3379:4;3371:6;3367:17;3393:148;3409:6;3404:3;3401:15;3393:148;;;3475:23;3494:3;3475:23;:::i;:::-;3463:36;;3519:12;;;;3426;;3393:148;;;-1:-1:-1;3559:5:17;2896:674;-1:-1:-1;;;;;;2896:674:17:o;3575:407::-;3640:5;-1:-1:-1;;;;;3663:30:17;;3660:56;;;3696:18;;:::i;:::-;3734:57;3779:2;3758:15;;-1:-1:-1;;3754:29:17;3785:4;3750:40;3734:57;:::i;:::-;3725:66;;3814:6;3807:5;3800:21;3854:3;3845:6;3840:3;3836:16;3833:25;3830:45;;;3871:1;3868;3861:12;3830:45;3920:6;3915:3;3908:4;3901:5;3897:16;3884:43;3974:1;3967:4;3958:6;3951:5;3947:18;3943:29;3936:40;3575:407;;;;;:::o;3987:222::-;4030:5;4083:3;4076:4;4068:6;4064:17;4060:27;4050:55;;4101:1;4098;4091:12;4050:55;4123:80;4199:3;4190:6;4177:20;4170:4;4162:6;4158:17;4123:80;:::i;4214:1289::-;4342:6;4350;4403:2;4391:9;4382:7;4378:23;4374:32;4371:52;;;4419:1;4416;4409:12;4371:52;4446:23;;-1:-1:-1;;;;;4518:14:17;;;4515:34;;;4545:1;4542;4535:12;4515:34;4568:61;4621:7;4612:6;4601:9;4597:22;4568:61;:::i;:::-;4558:71;;4648:2;4638:12;;4703:2;4692:9;4688:18;4675:32;4732:2;4722:8;4719:16;4716:36;;;4748:1;4745;4738:12;4716:36;4771:24;;4826:4;4818:13;;4814:27;-1:-1:-1;4804:55:17;;4855:1;4852;4845:12;4804:55;4891:2;4878:16;4914:60;4930:43;4970:2;4930:43;:::i;4914:60::-;5008:15;;;5090:1;5086:10;;;;5078:19;;5074:28;;;5039:12;;;;5114:19;;;5111:39;;;5146:1;5143;5136:12;5111:39;5178:2;5174;5170:11;5190:283;5206:6;5201:3;5198:15;5190:283;;;5292:3;5279:17;5328:2;5315:11;5312:19;5309:39;;;5344:1;5341;5334:12;5309:39;5373:57;5422:7;5417:2;5403:11;5399:2;5395:20;5391:29;5373:57;:::i;:::-;5361:70;;-1:-1:-1;5451:12:17;;;;5223;;5190:283;;;5194:3;5492:5;5482:15;;;;;;;;4214:1289;;;;;:::o;5508:186::-;5567:6;5620:2;5608:9;5599:7;5595:23;5591:32;5588:52;;;5636:1;5633;5626:12;5588:52;5659:29;5678:9;5659:29;:::i;5881:347::-;5946:6;5954;6007:2;5995:9;5986:7;5982:23;5978:32;5975:52;;;6023:1;6020;6013:12;5975:52;6046:29;6065:9;6046:29;:::i;:::-;6036:39;;6125:2;6114:9;6110:18;6097:32;6172:5;6165:13;6158:21;6151:5;6148:32;6138:60;;6194:1;6191;6184:12;6138:60;6217:5;6207:15;;;5881:347;;;;;:::o;6233:390::-;6311:6;6319;6372:2;6360:9;6351:7;6347:23;6343:32;6340:52;;;6388:1;6385;6378:12;6340:52;6411:23;;;-1:-1:-1;6485:2:17;6470:18;;6457:32;-1:-1:-1;;;;;6501:30:17;;6498:50;;;6544:1;6541;6534:12;6498:50;6567;6609:7;6600:6;6589:9;6585:22;6567:50;:::i;:::-;6557:60;;;6233:390;;;;;:::o;6628:569::-;6731:6;6739;6792:2;6780:9;6771:7;6767:23;6763:32;6760:52;;;6808:1;6805;6798:12;6760:52;6835:23;;-1:-1:-1;;;;;6907:14:17;;;6904:34;;;6934:1;6931;6924:12;6904:34;6957:61;7010:7;7001:6;6990:9;6986:22;6957:61;:::i;:::-;6947:71;;7071:2;7060:9;7056:18;7043:32;7027:48;;7100:2;7090:8;7087:16;7084:36;;;7116:1;7113;7106:12;7084:36;;7139:52;7183:7;7172:8;7161:9;7157:24;7139:52;:::i;7202:667::-;7297:6;7305;7313;7321;7374:3;7362:9;7353:7;7349:23;7345:33;7342:53;;;7391:1;7388;7381:12;7342:53;7414:29;7433:9;7414:29;:::i;:::-;7404:39;;7462:38;7496:2;7485:9;7481:18;7462:38;:::i;:::-;7452:48;-1:-1:-1;7547:2:17;7532:18;;7519:32;;-1:-1:-1;7602:2:17;7587:18;;7574:32;-1:-1:-1;;;;;7618:30:17;;7615:50;;;7661:1;7658;7651:12;7615:50;7684:22;;7737:4;7729:13;;7725:27;-1:-1:-1;7715:55:17;;7766:1;7763;7756:12;7715:55;7789:74;7855:7;7850:2;7837:16;7832:2;7828;7824:11;7789:74;:::i;:::-;7779:84;;;7202:667;;;;;;;:::o;7874:396::-;7952:6;7960;8013:2;8001:9;7992:7;7988:23;7984:32;7981:52;;;8029:1;8026;8019:12;7981:52;8052:29;8071:9;8052:29;:::i;:::-;8042:39;-1:-1:-1;8132:2:17;8117:18;;8104:32;-1:-1:-1;;;;;8148:30:17;;8145:50;;;8191:1;8188;8181:12;8275:260;8343:6;8351;8404:2;8392:9;8383:7;8379:23;8375:32;8372:52;;;8420:1;8417;8410:12;8372:52;8443:29;8462:9;8443:29;:::i;:::-;8433:39;;8491:38;8525:2;8514:9;8510:18;8491:38;:::i;:::-;8481:48;;8275:260;;;;;:::o;8540:464::-;8627:6;8635;8643;8696:2;8684:9;8675:7;8671:23;8667:32;8664:52;;;8712:1;8709;8702:12;8664:52;8735:29;8754:9;8735:29;:::i;:::-;8725:39;-1:-1:-1;8811:2:17;8796:18;;8783:32;;-1:-1:-1;8866:2:17;8851:18;;8838:32;-1:-1:-1;;;;;8882:30:17;;8879:50;;;8925:1;8922;8915:12;8879:50;8948;8990:7;8981:6;8970:9;8966:22;8948:50;:::i;:::-;8938:60;;;8540:464;;;;;:::o;9009:380::-;9088:1;9084:12;;;;9131;;;9152:61;;9206:4;9198:6;9194:17;9184:27;;9152:61;9259:2;9251:6;9248:14;9228:18;9225:38;9222:161;;9305:10;9300:3;9296:20;9293:1;9286:31;9340:4;9337:1;9330:15;9368:4;9365:1;9358:15;9222:161;;9009:380;;;:::o;9774:127::-;9835:10;9830:3;9826:20;9823:1;9816:31;9866:4;9863:1;9856:15;9890:4;9887:1;9880:15;9906:212;9948:3;9986:5;9980:12;10030:6;10023:4;10016:5;10012:16;10007:3;10001:36;10092:1;10056:16;;10081:13;;;-1:-1:-1;10056:16:17;;9906:212;-1:-1:-1;9906:212:17:o;10123:267::-;10302:3;10327:57;10353:30;10379:3;10371:6;10353:30;:::i;:::-;10345:6;10327:57;:::i;10395:232::-;10434:3;10455:17;;;10452:140;;10514:10;10509:3;10505:20;10502:1;10495:31;10549:4;10546:1;10539:15;10577:4;10574:1;10567:15;10452:140;-1:-1:-1;10619:1:17;10608:13;;10395:232::o;10758:518::-;10860:2;10855:3;10852:11;10849:421;;;10896:5;10893:1;10886:16;10940:4;10937:1;10927:18;11010:2;10998:10;10994:19;10991:1;10987:27;10981:4;10977:38;11046:4;11034:10;11031:20;11028:47;;;-1:-1:-1;11069:4:17;11028:47;11124:2;11119:3;11115:12;11112:1;11108:20;11102:4;11098:31;11088:41;;11179:81;11197:2;11190:5;11187:13;11179:81;;;11256:1;11242:16;;11223:1;11212:13;11179:81;;11452:1345;11572:10;;-1:-1:-1;;;;;11594:30:17;;11591:56;;;11627:18;;:::i;:::-;11656:97;11746:6;11706:38;11738:4;11732:11;11706:38;:::i;:::-;11700:4;11656:97;:::i;:::-;11808:4;;11865:2;11854:14;;11882:1;11877:663;;;;12584:1;12601:6;12598:89;;;-1:-1:-1;12653:19:17;;;12647:26;12598:89;-1:-1:-1;;11409:1:17;11405:11;;;11401:24;11397:29;11387:40;11433:1;11429:11;;;11384:57;12700:81;;11847:944;;11877:663;10705:1;10698:14;;;10742:4;10729:18;;-1:-1:-1;;11913:20:17;;;12031:236;12045:7;12042:1;12039:14;12031:236;;;12134:19;;;12128:26;12113:42;;12226:27;;;;12194:1;12182:14;;;;12061:19;;12031:236;;;12035:3;12295:6;12286:7;12283:19;12280:201;;;12356:19;;;12350:26;-1:-1:-1;;12439:1:17;12435:14;;;12451:3;12431:24;12427:37;12423:42;12408:58;12393:74;;12280:201;;;12527:1;12518:6;12515:1;12511:14;12507:22;12501:4;12494:36;11847:944;;;;;11452:1345;;:::o;12802:500::-;-1:-1:-1;;;;;13071:15:17;;;13053:34;;13123:15;;13118:2;13103:18;;13096:43;13170:2;13155:18;;13148:34;;;13218:3;13213:2;13198:18;;13191:31;;;12996:4;;13239:57;;13276:19;;13268:6;13239:57;:::i;:::-;13231:65;12802:500;-1:-1:-1;;;;;;12802:500:17:o;13307:249::-;13376:6;13429:2;13417:9;13408:7;13404:23;13400:32;13397:52;;;13445:1;13442;13435:12;13397:52;13477:9;13471:16;13496:30;13520:5;13496:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1211600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "31543",
								"balanceOf(address)": "2739",
								"exchangeNewToken(address,uint256,string)": "infinite",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mint(address,string)": "infinite",
								"mint(address[],string)": "infinite",
								"mint(address[],string[])": "infinite",
								"name()": "infinite",
								"owner()": "2567",
								"ownerOf(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26898",
								"setUrl(uint256,string)": "infinite",
								"supportsInterface(bytes4)": "infinite",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28774"
							},
							"internal": {
								"_mint(address,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 249,
									"end": 1656,
									"name": "PUSH",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 249,
									"end": 1656,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 249,
									"end": 1656,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 337,
									"end": 338,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 338,
									"name": "PUSH",
									"source": 16,
									"value": "8"
								},
								{
									"begin": 310,
									"end": 338,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 364,
									"end": 490,
									"name": "CALLVALUE",
									"source": 16
								},
								{
									"begin": 364,
									"end": 490,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 364,
									"end": 490,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 364,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 364,
									"end": 490,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 364,
									"end": 490,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 364,
									"end": 490,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 364,
									"end": 490,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 364,
									"end": 490,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 364,
									"end": 490,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 364,
									"end": 490,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 364,
									"end": 490,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 364,
									"end": 490,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 364,
									"end": 490,
									"name": "PUSHSIZE",
									"source": 16
								},
								{
									"begin": 364,
									"end": 490,
									"name": "CODESIZE",
									"source": 16
								},
								{
									"begin": 364,
									"end": 490,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 364,
									"end": 490,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 364,
									"end": 490,
									"name": "PUSHSIZE",
									"source": 16
								},
								{
									"begin": 364,
									"end": 490,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 364,
									"end": 490,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 364,
									"end": 490,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 364,
									"end": 490,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 364,
									"end": 490,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 364,
									"end": 490,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 364,
									"end": 490,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 364,
									"end": 490,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 364,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 364,
									"end": 490,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 364,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 364,
									"end": 490,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 364,
									"end": 490,
									"name": "tag",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 364,
									"end": 490,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 469,
									"end": 481,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 447,
									"end": 451,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 453,
									"end": 459,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 447,
									"end": 451,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4302,
									"end": 4353,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 4275,
									"end": 4293,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 4275,
									"end": 4293,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 364,
									"end": 490,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 364,
									"end": 490,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 364,
									"end": 490,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 249,
									"end": 1656,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "26"
								},
								{
									"begin": 249,
									"end": 1656,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 17,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 17,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 146,
									"end": 862,
									"name": "tag",
									"source": 17,
									"value": "21"
								},
								{
									"begin": 146,
									"end": 862,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 17
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "29"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 17,
									"value": "29"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "31"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "31"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 17,
									"value": "31"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 17,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "33"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "33"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 17,
									"value": "33"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 709,
									"end": 712,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 702,
									"end": 706,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 697,
									"end": 699,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 689,
									"end": 695,
									"name": "DUP9",
									"source": 17
								},
								{
									"begin": 685,
									"end": 700,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 681,
									"end": 707,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 678,
									"end": 713,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 675,
									"end": 730,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 675,
									"end": 730,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "34"
								},
								{
									"begin": 675,
									"end": 730,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 726,
									"end": 727,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 723,
									"end": 724,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 716,
									"end": 728,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 675,
									"end": 730,
									"name": "tag",
									"source": 17,
									"value": "34"
								},
								{
									"begin": 675,
									"end": 730,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 783,
									"end": 785,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 776,
									"end": 780,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 768,
									"end": 774,
									"name": "DUP8",
									"source": 17
								},
								{
									"begin": 764,
									"end": 781,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 757,
									"end": 761,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 749,
									"end": 755,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 745,
									"end": 762,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 739,
									"end": 786,
									"name": "MCOPY",
									"source": 17
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 823,
									"end": 827,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 818,
									"end": 820,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 810,
									"end": 816,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 806,
									"end": 821,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 802,
									"end": 828,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 795,
									"end": 832,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 850,
									"end": 856,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 841,
									"end": 856,
									"name": "SWAP5",
									"source": 17
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 146,
									"end": 862,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 146,
									"end": 862,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 146,
									"end": 862,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 146,
									"end": 862,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 146,
									"end": 862,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 867,
									"end": 1596,
									"name": "tag",
									"source": 17,
									"value": "3"
								},
								{
									"begin": 867,
									"end": 1596,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 975,
									"end": 981,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 983,
									"end": 989,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 991,
									"end": 997,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1044,
									"end": 1046,
									"name": "PUSH",
									"source": 17,
									"value": "60"
								},
								{
									"begin": 1032,
									"end": 1041,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 1023,
									"end": 1030,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 1019,
									"end": 1042,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 1015,
									"end": 1047,
									"name": "SLT",
									"source": 17
								},
								{
									"begin": 1012,
									"end": 1064,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1012,
									"end": 1064,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "36"
								},
								{
									"begin": 1012,
									"end": 1064,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1060,
									"end": 1061,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1057,
									"end": 1058,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1050,
									"end": 1062,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1012,
									"end": 1064,
									"name": "tag",
									"source": 17,
									"value": "36"
								},
								{
									"begin": 1012,
									"end": 1064,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1086,
									"end": 1102,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 1086,
									"end": 1102,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1131,
									"end": 1162,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1131,
									"end": 1162,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 1121,
									"end": 1163,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1121,
									"end": 1163,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 1111,
									"end": 1181,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "37"
								},
								{
									"begin": 1111,
									"end": 1181,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1177,
									"end": 1178,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1174,
									"end": 1175,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1167,
									"end": 1179,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1111,
									"end": 1181,
									"name": "tag",
									"source": 17,
									"value": "37"
								},
								{
									"begin": 1111,
									"end": 1181,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1249,
									"end": 1251,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 1234,
									"end": 1252,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 1234,
									"end": 1252,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1228,
									"end": 1253,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 1200,
									"end": 1205,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1200,
									"end": 1205,
									"name": "SWAP4",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1302,
									"end": 1316,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1302,
									"end": 1316,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1302,
									"end": 1316,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 1299,
									"end": 1333,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1299,
									"end": 1333,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "38"
								},
								{
									"begin": 1299,
									"end": 1333,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1329,
									"end": 1330,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1326,
									"end": 1327,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1319,
									"end": 1331,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1299,
									"end": 1333,
									"name": "tag",
									"source": 17,
									"value": "38"
								},
								{
									"begin": 1299,
									"end": 1333,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1352,
									"end": 1413,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "39"
								},
								{
									"begin": 1405,
									"end": 1412,
									"name": "DUP8",
									"source": 17
								},
								{
									"begin": 1396,
									"end": 1402,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 1385,
									"end": 1394,
									"name": "DUP9",
									"source": 17
								},
								{
									"begin": 1381,
									"end": 1403,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1352,
									"end": 1413,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "21"
								},
								{
									"begin": 1352,
									"end": 1413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1352,
									"end": 1413,
									"name": "tag",
									"source": 17,
									"value": "39"
								},
								{
									"begin": 1352,
									"end": 1413,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1342,
									"end": 1413,
									"name": "SWAP4",
									"source": 17
								},
								{
									"begin": 1342,
									"end": 1413,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1459,
									"end": 1461,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 1444,
									"end": 1462,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1438,
									"end": 1463,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 1422,
									"end": 1463,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1422,
									"end": 1463,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1488,
									"end": 1490,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1478,
									"end": 1486,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1475,
									"end": 1491,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 1472,
									"end": 1508,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1472,
									"end": 1508,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 1472,
									"end": 1508,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1504,
									"end": 1505,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1501,
									"end": 1502,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1494,
									"end": 1506,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1472,
									"end": 1508,
									"name": "tag",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 1472,
									"end": 1508,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1472,
									"end": 1508,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1527,
									"end": 1590,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "41"
								},
								{
									"begin": 1582,
									"end": 1589,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 1571,
									"end": 1579,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1560,
									"end": 1569,
									"name": "DUP8",
									"source": 17
								},
								{
									"begin": 1556,
									"end": 1580,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1527,
									"end": 1590,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "21"
								},
								{
									"begin": 1527,
									"end": 1590,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1527,
									"end": 1590,
									"name": "tag",
									"source": 17,
									"value": "41"
								},
								{
									"begin": 1527,
									"end": 1590,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1517,
									"end": 1590,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1517,
									"end": 1590,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1517,
									"end": 1590,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 867,
									"end": 1596,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 867,
									"end": 1596,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 867,
									"end": 1596,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 867,
									"end": 1596,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 867,
									"end": 1596,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 867,
									"end": 1596,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1601,
									"end": 1981,
									"name": "tag",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 1601,
									"end": 1981,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1680,
									"end": 1681,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 1676,
									"end": 1688,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1676,
									"end": 1688,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1676,
									"end": 1688,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 1676,
									"end": 1688,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1723,
									"end": 1735,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1723,
									"end": 1735,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 1723,
									"end": 1735,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1744,
									"end": 1805,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "43"
								},
								{
									"begin": 1744,
									"end": 1805,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1798,
									"end": 1802,
									"name": "PUSH",
									"source": 17,
									"value": "7F"
								},
								{
									"begin": 1790,
									"end": 1796,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1786,
									"end": 1803,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 1776,
									"end": 1803,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1776,
									"end": 1803,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1744,
									"end": 1805,
									"name": "tag",
									"source": 17,
									"value": "43"
								},
								{
									"begin": 1744,
									"end": 1805,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1851,
									"end": 1853,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 1843,
									"end": 1849,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1840,
									"end": 1854,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 1820,
									"end": 1838,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1817,
									"end": 1855,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 1814,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "44"
								},
								{
									"begin": 1814,
									"end": 1975,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1897,
									"end": 1907,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B71"
								},
								{
									"begin": 1892,
									"end": 1895,
									"name": "PUSH",
									"source": 17,
									"value": "E0"
								},
								{
									"begin": 1888,
									"end": 1908,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 1885,
									"end": 1886,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1878,
									"end": 1909,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1932,
									"end": 1936,
									"name": "PUSH",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 1929,
									"end": 1930,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 1922,
									"end": 1937,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1960,
									"end": 1964,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 1957,
									"end": 1958,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1950,
									"end": 1965,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1814,
									"end": 1975,
									"name": "tag",
									"source": 17,
									"value": "44"
								},
								{
									"begin": 1814,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1814,
									"end": 1975,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1601,
									"end": 1981,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1601,
									"end": 1981,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1601,
									"end": 1981,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1601,
									"end": 1981,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2112,
									"end": 2630,
									"name": "tag",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 2112,
									"end": 2630,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2214,
									"end": 2216,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 2209,
									"end": 2212,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2206,
									"end": 2217,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 2203,
									"end": 2624,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 2203,
									"end": 2624,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "47"
								},
								{
									"begin": 2203,
									"end": 2624,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 2250,
									"end": 2255,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 2247,
									"end": 2248,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2240,
									"end": 2256,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 2294,
									"end": 2298,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 2291,
									"end": 2292,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2281,
									"end": 2299,
									"name": "KECCAK256",
									"source": 17
								},
								{
									"begin": 2364,
									"end": 2366,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 2352,
									"end": 2362,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2348,
									"end": 2367,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2345,
									"end": 2346,
									"name": "PUSH",
									"source": 17,
									"value": "5"
								},
								{
									"begin": 2341,
									"end": 2368,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 2335,
									"end": 2339,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2331,
									"end": 2369,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2400,
									"end": 2404,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 2388,
									"end": 2398,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 2385,
									"end": 2405,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 2382,
									"end": 2429,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 2382,
									"end": 2429,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "48"
								},
								{
									"begin": 2382,
									"end": 2429,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2423,
									"end": 2427,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 2382,
									"end": 2429,
									"name": "tag",
									"source": 17,
									"value": "48"
								},
								{
									"begin": 2382,
									"end": 2429,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2478,
									"end": 2480,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 2473,
									"end": 2476,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2469,
									"end": 2481,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2466,
									"end": 2467,
									"name": "PUSH",
									"source": 17,
									"value": "5"
								},
								{
									"begin": 2462,
									"end": 2482,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 2456,
									"end": 2460,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2452,
									"end": 2483,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2442,
									"end": 2483,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 2442,
									"end": 2483,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2533,
									"end": 2614,
									"name": "tag",
									"source": 17,
									"value": "49"
								},
								{
									"begin": 2533,
									"end": 2614,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2551,
									"end": 2553,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2544,
									"end": 2549,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2541,
									"end": 2554,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 2533,
									"end": 2614,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 2533,
									"end": 2614,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "51"
								},
								{
									"begin": 2533,
									"end": 2614,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 2610,
									"end": 2611,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2596,
									"end": 2612,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2596,
									"end": 2612,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 2577,
									"end": 2578,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 2566,
									"end": 2579,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2533,
									"end": 2614,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "49"
								},
								{
									"begin": 2533,
									"end": 2614,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2533,
									"end": 2614,
									"name": "tag",
									"source": 17,
									"value": "51"
								},
								{
									"begin": 2533,
									"end": 2614,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2537,
									"end": 2540,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2537,
									"end": 2540,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2203,
									"end": 2624,
									"name": "tag",
									"source": 17,
									"value": "47"
								},
								{
									"begin": 2203,
									"end": 2624,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2112,
									"end": 2630,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2112,
									"end": 2630,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2112,
									"end": 2630,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2112,
									"end": 2630,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2806,
									"end": 4151,
									"name": "tag",
									"source": 17,
									"value": "9"
								},
								{
									"begin": 2806,
									"end": 4151,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2926,
									"end": 2936,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2926,
									"end": 2936,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2948,
									"end": 2978,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2948,
									"end": 2978,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 2945,
									"end": 3001,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 2945,
									"end": 3001,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "55"
								},
								{
									"begin": 2945,
									"end": 3001,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 2981,
									"end": 2999,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "55"
								},
								{
									"begin": 2981,
									"end": 2999,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 2981,
									"end": 2999,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2981,
									"end": 2999,
									"name": "tag",
									"source": 17,
									"value": "55"
								},
								{
									"begin": 2981,
									"end": 2999,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3010,
									"end": 3107,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "56"
								},
								{
									"begin": 3100,
									"end": 3106,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3060,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "57"
								},
								{
									"begin": 3092,
									"end": 3096,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 3086,
									"end": 3097,
									"name": "SLOAD",
									"source": 17
								},
								{
									"begin": 3060,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 3060,
									"end": 3098,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3060,
									"end": 3098,
									"name": "tag",
									"source": 17,
									"value": "57"
								},
								{
									"begin": 3060,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3054,
									"end": 3058,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 3010,
									"end": 3107,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 3010,
									"end": 3107,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3010,
									"end": 3107,
									"name": "tag",
									"source": 17,
									"value": "56"
								},
								{
									"begin": 3010,
									"end": 3107,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3162,
									"end": 3166,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 3162,
									"end": 3166,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 3219,
									"end": 3221,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 3208,
									"end": 3222,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 3208,
									"end": 3222,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 3236,
									"end": 3237,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 3231,
									"end": 3894,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3231,
									"end": 3894,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 3231,
									"end": 3894,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "59"
								},
								{
									"begin": 3231,
									"end": 3894,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 3938,
									"end": 3939,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 3955,
									"end": 3961,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 3952,
									"end": 4041,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 3952,
									"end": 4041,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "60"
								},
								{
									"begin": 3952,
									"end": 4041,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4007,
									"end": 4026,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 4007,
									"end": 4026,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 4007,
									"end": 4026,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 4001,
									"end": 4027,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 3952,
									"end": 4041,
									"name": "tag",
									"source": 17,
									"value": "60"
								},
								{
									"begin": 3952,
									"end": 4041,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2763,
									"end": 2764,
									"name": "PUSH",
									"source": 17,
									"value": "3"
								},
								{
									"begin": 2759,
									"end": 2770,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 2759,
									"end": 2770,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2759,
									"end": 2770,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 2755,
									"end": 2779,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 2751,
									"end": 2780,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 2741,
									"end": 2781,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 2787,
									"end": 2788,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 2783,
									"end": 2794,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 2783,
									"end": 2794,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2783,
									"end": 2794,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 2738,
									"end": 2795,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 4054,
									"end": 4135,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 4054,
									"end": 4135,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 3201,
									"end": 4145,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "58"
								},
								{
									"begin": 3201,
									"end": 4145,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3231,
									"end": 3894,
									"name": "tag",
									"source": 17,
									"value": "59"
								},
								{
									"begin": 3231,
									"end": 3894,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2059,
									"end": 2060,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2052,
									"end": 2066,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 2052,
									"end": 2066,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2052,
									"end": 2066,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 2096,
									"end": 2100,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 2083,
									"end": 2101,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2083,
									"end": 2101,
									"name": "KECCAK256",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3267,
									"end": 3287,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 3267,
									"end": 3287,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 3267,
									"end": 3287,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 3385,
									"end": 3621,
									"name": "tag",
									"source": 17,
									"value": "63"
								},
								{
									"begin": 3385,
									"end": 3621,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3399,
									"end": 3406,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3396,
									"end": 3397,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3393,
									"end": 3407,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 3385,
									"end": 3621,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 3385,
									"end": 3621,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "65"
								},
								{
									"begin": 3385,
									"end": 3621,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 3488,
									"end": 3507,
									"name": "DUP9",
									"source": 17
								},
								{
									"begin": 3488,
									"end": 3507,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 3488,
									"end": 3507,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3482,
									"end": 3508,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 3467,
									"end": 3509,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3467,
									"end": 3509,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 3580,
									"end": 3607,
									"name": "SWAP5",
									"source": 17
								},
								{
									"begin": 3580,
									"end": 3607,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 3580,
									"end": 3607,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3580,
									"end": 3607,
									"name": "SWAP5",
									"source": 17
								},
								{
									"begin": 3548,
									"end": 3549,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 3536,
									"end": 3550,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3536,
									"end": 3550,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 3536,
									"end": 3550,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3536,
									"end": 3550,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3415,
									"end": 3434,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 3415,
									"end": 3434,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3385,
									"end": 3621,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "63"
								},
								{
									"begin": 3385,
									"end": 3621,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3385,
									"end": 3621,
									"name": "tag",
									"source": 17,
									"value": "65"
								},
								{
									"begin": 3385,
									"end": 3621,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3389,
									"end": 3392,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3649,
									"end": 3655,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 3640,
									"end": 3647,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3637,
									"end": 3656,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 3634,
									"end": 3835,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 3634,
									"end": 3835,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "66"
								},
								{
									"begin": 3634,
									"end": 3835,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 3710,
									"end": 3729,
									"name": "DUP8",
									"source": 17
								},
								{
									"begin": 3710,
									"end": 3729,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 3710,
									"end": 3729,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3704,
									"end": 3730,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3793,
									"end": 3794,
									"name": "PUSH",
									"source": 17,
									"value": "3"
								},
								{
									"begin": 3789,
									"end": 3803,
									"name": "DUP9",
									"source": 17
								},
								{
									"begin": 3789,
									"end": 3803,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3789,
									"end": 3803,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 3805,
									"end": 3808,
									"name": "PUSH",
									"source": 17,
									"value": "F8"
								},
								{
									"begin": 3785,
									"end": 3809,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 3781,
									"end": 3818,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 3777,
									"end": 3819,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 3762,
									"end": 3820,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 3747,
									"end": 3821,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3747,
									"end": 3821,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 3634,
									"end": 3835,
									"name": "tag",
									"source": 17,
									"value": "66"
								},
								{
									"begin": 3634,
									"end": 3835,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3634,
									"end": 3835,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3634,
									"end": 3835,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3881,
									"end": 3882,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 3872,
									"end": 3878,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 3869,
									"end": 3870,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 3865,
									"end": 3879,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 3861,
									"end": 3883,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3855,
									"end": 3859,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 3848,
									"end": 3884,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 3201,
									"end": 4145,
									"name": "tag",
									"source": 17,
									"value": "58"
								},
								{
									"begin": 3201,
									"end": 4145,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3201,
									"end": 4145,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3201,
									"end": 4145,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3201,
									"end": 4145,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3201,
									"end": 4145,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2806,
									"end": 4151,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2806,
									"end": 4151,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2806,
									"end": 4151,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4156,
									"end": 4359,
									"name": "tag",
									"source": 17,
									"value": "26"
								},
								{
									"begin": 4156,
									"end": 4359,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 249,
									"end": 1656,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 249,
									"end": 1656,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 249,
									"end": 1656,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 249,
									"end": 1656,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 1656,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 249,
									"end": 1656,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 1656,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122067d34c6e7e5b7cfb7b4b7041f269d920a29b96d5434814400ddb38770c496a2264736f6c63430008190033",
									".code": [
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "tag",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH",
											"source": 16,
											"value": "1FFC9A7"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH",
											"source": 16,
											"value": "6FDDE03"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH",
											"source": 16,
											"value": "81812FC"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH",
											"source": 16,
											"value": "95EA7B3"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "6"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH",
											"source": 16,
											"value": "23B872DD"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH",
											"source": 16,
											"value": "42842E0E"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH",
											"source": 16,
											"value": "4C7BC5CF"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH",
											"source": 16,
											"value": "6352211E"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH",
											"source": 16,
											"value": "70A08231"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH",
											"source": 16,
											"value": "715018A6"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH",
											"source": 16,
											"value": "8DA5CB5B"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "13"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH",
											"source": 16,
											"value": "95D89B41"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "14"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH",
											"source": 16,
											"value": "A22CB465"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "15"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH",
											"source": 16,
											"value": "AEF95098"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "16"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH",
											"source": 16,
											"value": "B6C32074"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH",
											"source": 16,
											"value": "B88D4FDE"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "18"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH",
											"source": 16,
											"value": "C87B56DD"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "19"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH",
											"source": 16,
											"value": "D0DEF521"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH",
											"source": 16,
											"value": "E985E9C5"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH",
											"source": 16,
											"value": "F2FDE38B"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH",
											"source": 16,
											"value": "FC12768B"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "tag",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 249,
											"end": 1656,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 633,
											"end": 902,
											"name": "tag",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 633,
											"end": 902,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 633,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 633,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "52"
										},
										{
											"begin": 633,
											"end": 902,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 633,
											"end": 902,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 633,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "53"
										},
										{
											"begin": 633,
											"end": 902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 633,
											"end": 902,
											"name": "tag",
											"source": 16,
											"value": "52"
										},
										{
											"begin": 633,
											"end": 902,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 633,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "54"
										},
										{
											"begin": 633,
											"end": 902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5845,
											"end": 5870,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5845,
											"end": 5870,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5845,
											"end": 5870,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5833,
											"end": 5835,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5818,
											"end": 5836,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 5699,
											"end": 5876,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "tag",
											"source": 16,
											"value": "16"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "78"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "79"
										},
										{
											"begin": 1314,
											"end": 1443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "tag",
											"source": 16,
											"value": "78"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 1314,
											"end": 1443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 908,
											"end": 1113,
											"name": "tag",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 908,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 908,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 908,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "82"
										},
										{
											"begin": 908,
											"end": 1113,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 908,
											"end": 1113,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 908,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "83"
										},
										{
											"begin": 908,
											"end": 1113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 908,
											"end": 1113,
											"name": "tag",
											"source": 16,
											"value": "82"
										},
										{
											"begin": 908,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 908,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 908,
											"end": 1113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 496,
											"end": 627,
											"name": "tag",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 496,
											"end": 627,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 496,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "94"
										},
										{
											"begin": 496,
											"end": 627,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 496,
											"end": 627,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 496,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "95"
										},
										{
											"begin": 496,
											"end": 627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 496,
											"end": 627,
											"name": "tag",
											"source": 16,
											"value": "94"
										},
										{
											"begin": 496,
											"end": 627,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 496,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "96"
										},
										{
											"begin": 496,
											"end": 627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 1654,
											"name": "tag",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 1449,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1449,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1449,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "106"
										},
										{
											"begin": 1449,
											"end": 1654,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 1449,
											"end": 1654,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1449,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "107"
										},
										{
											"begin": 1449,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1449,
											"end": 1654,
											"name": "tag",
											"source": 16,
											"value": "106"
										},
										{
											"begin": 1449,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1449,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "108"
										},
										{
											"begin": 1449,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1039,
											"end": 1043,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24832483"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 1125,
											"end": 1136,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1101,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 1101,
											"end": 1137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1055,
											"end": 1137,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 3623,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 4276,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "64283D7B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9652,
											"end": 9667,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9652,
											"end": 9667,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 9652,
											"end": 9667,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9634,
											"end": 9668,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9684,
											"end": 9702,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 9684,
											"end": 9702,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9684,
											"end": 9702,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9677,
											"end": 9711,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9677,
											"end": 9711,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9677,
											"end": 9711,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9747,
											"end": 9762,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9747,
											"end": 9762,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 9727,
											"end": 9745,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 9727,
											"end": 9745,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9727,
											"end": 9745,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9720,
											"end": 9763,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9569,
											"end": 9587,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 9569,
											"end": 9587,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 9394,
											"end": 9769,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 633,
											"end": 902,
											"name": "tag",
											"source": 16,
											"value": "54"
										},
										{
											"begin": 633,
											"end": 902,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 746,
											"end": 757,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 746,
											"end": 764,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 733,
											"end": 735,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 733,
											"end": 742,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 733,
											"end": 764,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 725,
											"end": 765,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "145"
										},
										{
											"begin": 725,
											"end": 765,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 725,
											"end": 765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 725,
											"end": 765,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 725,
											"end": 765,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 725,
											"end": 765,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "145"
										},
										{
											"begin": 725,
											"end": 765,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 788,
											"end": 797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 784,
											"end": 875,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "146"
										},
										{
											"begin": 784,
											"end": 875,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 807,
											"end": 809,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 807,
											"end": 816,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 803,
											"end": 804,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 784,
											"end": 875,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 784,
											"end": 875,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "147"
										},
										{
											"begin": 784,
											"end": 875,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 836,
											"end": 864,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "149"
										},
										{
											"begin": 842,
											"end": 844,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 845,
											"end": 846,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 842,
											"end": 847,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 842,
											"end": 847,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 842,
											"end": 847,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 842,
											"end": 847,
											"modifierDepth": 1,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 842,
											"end": 847,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "151"
										},
										{
											"begin": 842,
											"end": 847,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 842,
											"end": 847,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "151"
										},
										{
											"begin": 842,
											"end": 847,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "152"
										},
										{
											"begin": 842,
											"end": 847,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 842,
											"end": 847,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "151"
										},
										{
											"begin": 842,
											"end": 847,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 842,
											"end": 847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 842,
											"end": 847,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 842,
											"end": 847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 842,
											"end": 847,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 842,
											"end": 847,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 842,
											"end": 847,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 849,
											"end": 860,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 861,
											"end": 862,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 849,
											"end": 863,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 849,
											"end": 863,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 849,
											"end": 863,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 849,
											"end": 863,
											"modifierDepth": 1,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 849,
											"end": 863,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "154"
										},
										{
											"begin": 849,
											"end": 863,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 849,
											"end": 863,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "154"
										},
										{
											"begin": 849,
											"end": 863,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "152"
										},
										{
											"begin": 849,
											"end": 863,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 849,
											"end": 863,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "154"
										},
										{
											"begin": 849,
											"end": 863,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 849,
											"end": 863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 849,
											"end": 863,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 849,
											"end": 863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 849,
											"end": 863,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 849,
											"end": 863,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 849,
											"end": 863,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 836,
											"end": 841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "155"
										},
										{
											"begin": 836,
											"end": 864,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 836,
											"end": 864,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "149"
										},
										{
											"begin": 836,
											"end": 864,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 818,
											"end": 821,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 818,
											"end": 821,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 784,
											"end": 875,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "146"
										},
										{
											"begin": 784,
											"end": 875,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 784,
											"end": 875,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "147"
										},
										{
											"begin": 784,
											"end": 875,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 889,
											"end": 895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 889,
											"end": 895,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "F4DB1D2D8C78BB068FEDC1FF59E5527A703B6F0E58A740D5AC3015D7A2341D3D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 889,
											"end": 895,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 889,
											"end": 895,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 889,
											"end": 895,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 889,
											"end": 895,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 16
										},
										{
											"begin": 633,
											"end": 902,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 633,
											"end": 902,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 633,
											"end": 902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "22718AD9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2048,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "tag",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 1314,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1402,
											"end": 1436,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "126"
										},
										{
											"begin": 1415,
											"end": 1422,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1424,
											"end": 1435,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1402,
											"end": 1414,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "181"
										},
										{
											"begin": 1402,
											"end": 1436,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 908,
											"end": 1113,
											"name": "tag",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 908,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1086,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "185"
										},
										{
											"begin": 998,
											"end": 1086,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1021,
											"end": 1023,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1021,
											"end": 1030,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1017,
											"end": 1018,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1017,
											"end": 1030,
											"modifierDepth": 1,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 998,
											"end": 1086,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 998,
											"end": 1086,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "147"
										},
										{
											"begin": 998,
											"end": 1086,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1050,
											"end": 1075,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "188"
										},
										{
											"begin": 1056,
											"end": 1058,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1059,
											"end": 1060,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1056,
											"end": 1061,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1056,
											"end": 1061,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1056,
											"end": 1061,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1056,
											"end": 1061,
											"modifierDepth": 1,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 1056,
											"end": 1061,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "190"
										},
										{
											"begin": 1056,
											"end": 1061,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1056,
											"end": 1061,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "190"
										},
										{
											"begin": 1056,
											"end": 1061,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "152"
										},
										{
											"begin": 1056,
											"end": 1061,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1056,
											"end": 1061,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "190"
										},
										{
											"begin": 1056,
											"end": 1061,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1056,
											"end": 1061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1056,
											"end": 1061,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 1056,
											"end": 1061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1056,
											"end": 1061,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1056,
											"end": 1061,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1056,
											"end": 1061,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1063,
											"end": 1074,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1050,
											"end": 1055,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "155"
										},
										{
											"begin": 1050,
											"end": 1075,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1050,
											"end": 1075,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "188"
										},
										{
											"begin": 1050,
											"end": 1075,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1032,
											"end": 1035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1035,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 998,
											"end": 1086,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "185"
										},
										{
											"begin": 998,
											"end": 1086,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1283,
											"end": 1296,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 1322,
											"end": 1329,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1308,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 1308,
											"end": 1330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1341,
											"end": 1364,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1377,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 1341,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 1341,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1506,
											"end": 1510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1522,
											"end": 1523,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1500,
											"end": 1523,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1546,
											"end": 1555,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1688,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1688,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1729,
											"end": 1733,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1735,
											"end": 1744,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 1715,
											"end": 1745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 1788,
											"end": 1795,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1773,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 1773,
											"end": 1796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 496,
											"end": 627,
											"name": "tag",
											"source": 16,
											"value": "96"
										},
										{
											"begin": 496,
											"end": 627,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 577,
											"end": 599,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "213"
										},
										{
											"begin": 583,
											"end": 585,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 587,
											"end": 598,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 577,
											"end": 582,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "155"
										},
										{
											"begin": 577,
											"end": 599,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 577,
											"end": 599,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "213"
										},
										{
											"begin": 577,
											"end": 599,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 614,
											"end": 620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 614,
											"end": 620,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "F4DB1D2D8C78BB068FEDC1FF59E5527A703B6F0E58A740D5AC3015D7A2341D3D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 614,
											"end": 620,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 614,
											"end": 620,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 614,
											"end": 620,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 614,
											"end": 620,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 16
										},
										{
											"begin": 496,
											"end": 627,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 496,
											"end": 627,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 496,
											"end": 627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 1654,
											"name": "tag",
											"source": 16,
											"value": "108"
										},
										{
											"begin": 1449,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1588,
											"end": 1590,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1568,
											"end": 1590,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1568,
											"end": 1584,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "224"
										},
										{
											"begin": 1576,
											"end": 1583,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1568,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "57"
										},
										{
											"begin": 1568,
											"end": 1584,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1568,
											"end": 1584,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "224"
										},
										{
											"begin": 1568,
											"end": 1584,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1568,
											"end": 1590,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1568,
											"end": 1590,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1560,
											"end": 1591,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "225"
										},
										{
											"begin": 1560,
											"end": 1591,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1560,
											"end": 1591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1560,
											"end": 1591,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1560,
											"end": 1591,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1560,
											"end": 1591,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "225"
										},
										{
											"begin": 1560,
											"end": 1591,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "226"
										},
										{
											"begin": 1607,
											"end": 1614,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1606,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "227"
										},
										{
											"begin": 1601,
											"end": 1615,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1615,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "226"
										},
										{
											"begin": 1601,
											"end": 1615,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1625,
											"end": 1647,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "140"
										},
										{
											"begin": 1631,
											"end": 1633,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1635,
											"end": 1646,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1625,
											"end": 1630,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "155"
										},
										{
											"begin": 1625,
											"end": 1647,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 861,
											"end": 901,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16220,
											"end": 16233,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 16245,
											"end": 16252,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 16236,
											"end": 16253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7E273289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5845,
											"end": 5870,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5845,
											"end": 5870,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5845,
											"end": 5870,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5818,
											"end": 5836,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 5818,
											"end": 5836,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 5699,
											"end": 5876,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 6065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8955,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8958,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 8958,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1119,
											"end": 1308,
											"name": "tag",
											"source": 16,
											"value": "155"
										},
										{
											"begin": 1119,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 1219,
											"end": 1229,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1219,
											"end": 1229,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1201,
											"end": 1216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1216,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1201,
											"end": 1216,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1219,
											"end": 1229,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "261"
										},
										{
											"begin": 1219,
											"end": 1229,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1219,
											"end": 1229,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "262"
										},
										{
											"begin": 1219,
											"end": 1229,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1219,
											"end": 1229,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "261"
										},
										{
											"begin": 1219,
											"end": 1229,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1219,
											"end": 1229,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1219,
											"end": 1229,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1219,
											"end": 1229,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1219,
											"end": 1229,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 1201,
											"end": 1229,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1201,
											"end": 1229,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1257,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "263"
										},
										{
											"begin": 1245,
											"end": 1247,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1249,
											"end": 1256,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1244,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "264"
										},
										{
											"begin": 1239,
											"end": 1257,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1257,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "263"
										},
										{
											"begin": 1239,
											"end": 1257,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1267,
											"end": 1301,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "140"
										},
										{
											"begin": 1280,
											"end": 1287,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1289,
											"end": 1300,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1267,
											"end": 1279,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "181"
										},
										{
											"begin": 1267,
											"end": 1301,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15765,
											"end": 15773,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B611743"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 15743,
											"end": 15774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2023,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 2035,
											"end": 2044,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 2013,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5845,
											"end": 5870,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5845,
											"end": 5870,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5845,
											"end": 5870,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 8,
											"value": "F8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5833,
											"end": 5835,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5818,
											"end": 5836,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 2089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 5,
											"value": "150B7A02"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17452,
											"end": 17454,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 17430,
											"end": 17455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17294,
											"end": 17296,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 17272,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 2754,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2766,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2766,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 2901,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 2878,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11462,
											"end": 11689,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 11462,
											"end": 11689,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11513,
											"end": 11534,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11537,
											"end": 11577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 11553,
											"end": 11554,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11557,
											"end": 11564,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11574,
											"end": 11575,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11537,
											"end": 11544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 11537,
											"end": 11577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11537,
											"end": 11577,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 11537,
											"end": 11577,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11513,
											"end": 11577,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11591,
											"end": 11618,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11591,
											"end": 11618,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11587,
											"end": 11683,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 11587,
											"end": 11683,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11641,
											"end": 11672,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11641,
											"end": 11672,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7E273289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11641,
											"end": 11672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11641,
											"end": 11672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11641,
											"end": 11672,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 11641,
											"end": 11672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11641,
											"end": 11672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5845,
											"end": 5870,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5845,
											"end": 5870,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5845,
											"end": 5870,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5818,
											"end": 5836,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 5818,
											"end": 5836,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11641,
											"end": 11672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 5699,
											"end": 5876,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5773,
											"end": 5780,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15211,
											"end": 15215,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9FBF51F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 15189,
											"end": 15216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7E273289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5845,
											"end": 5870,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5845,
											"end": 5870,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5845,
											"end": 5870,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5818,
											"end": 5836,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 5818,
											"end": 5836,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 5699,
											"end": 5876,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "177E802F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13753,
											"end": 13785,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13753,
											"end": 13785,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13735,
											"end": 13786,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13802,
											"end": 13820,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 13802,
											"end": 13820,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13802,
											"end": 13820,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13795,
											"end": 13829,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13795,
											"end": 13829,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13795,
											"end": 13829,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13708,
											"end": 13726,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 13708,
											"end": 13726,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 13561,
											"end": 13835,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 10061,
											"end": 10094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "tag",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10114,
											"end": 10135,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 10146,
											"end": 10148,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10150,
											"end": 10157,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 10138,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "tag",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39E35637"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 10234,
											"end": 10265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 955,
											"end": 983,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 955,
											"end": 983,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 11
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 11
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 11
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6633,
											"end": 6640,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 6621,
											"end": 6628,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 6608,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "tag",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4EE2D6D415B85ACEF81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4EE2D6D415B85ACEF81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 14,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 14,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 14,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 14,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 14,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 14,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "111"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 17,
											"value": "374"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "220"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "390"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 17,
											"value": "390"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "300"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "374"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 592,
											"end": 892,
											"name": "tag",
											"source": 17,
											"value": "375"
										},
										{
											"begin": 592,
											"end": 892,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 645,
											"end": 648,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 683,
											"end": 688,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 677,
											"end": 689,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 710,
											"end": 716,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 705,
											"end": 708,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 698,
											"end": 717,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 766,
											"end": 772,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 759,
											"end": 763,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 752,
											"end": 757,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 748,
											"end": 764,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 741,
											"end": 745,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 736,
											"end": 739,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 732,
											"end": 746,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 726,
											"end": 773,
											"name": "MCOPY",
											"source": 17
										},
										{
											"begin": 818,
											"end": 819,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 811,
											"end": 815,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 802,
											"end": 808,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 797,
											"end": 800,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 793,
											"end": 809,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 789,
											"end": 816,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 782,
											"end": 820,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 881,
											"end": 885,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 870,
											"end": 877,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 857,
											"end": 863,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 853,
											"end": 868,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 849,
											"end": 878,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 840,
											"end": 879,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 836,
											"end": 886,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 829,
											"end": 886,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 829,
											"end": 886,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 829,
											"end": 886,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 592,
											"end": 892,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 592,
											"end": 892,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 592,
											"end": 892,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 592,
											"end": 892,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 592,
											"end": 892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 897,
											"end": 1128,
											"name": "tag",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 897,
											"end": 1128,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1046,
											"end": 1048,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1035,
											"end": 1044,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1028,
											"end": 1049,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1009,
											"end": 1013,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "300"
										},
										{
											"begin": 1118,
											"end": 1120,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1107,
											"end": 1116,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1103,
											"end": 1121,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1095,
											"end": 1101,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1066,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "375"
										},
										{
											"begin": 1066,
											"end": 1122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1133,
											"end": 1313,
											"name": "tag",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 1133,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1192,
											"end": 1198,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1247,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1233,
											"end": 1242,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1224,
											"end": 1231,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1220,
											"end": 1243,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1216,
											"end": 1248,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 1213,
											"end": 1265,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1213,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "397"
										},
										{
											"begin": 1213,
											"end": 1265,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1261,
											"end": 1262,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1258,
											"end": 1259,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1251,
											"end": 1263,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1213,
											"end": 1265,
											"name": "tag",
											"source": 17,
											"value": "397"
										},
										{
											"begin": 1213,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1284,
											"end": 1307,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1307,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1133,
											"end": 1313,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1133,
											"end": 1313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1318,
											"end": 1521,
											"name": "tag",
											"source": 17,
											"value": "39"
										},
										{
											"begin": 1318,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1452,
											"end": 1454,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1318,
											"end": 1521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1526,
											"end": 1699,
											"name": "tag",
											"source": 17,
											"value": "376"
										},
										{
											"begin": 1526,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1594,
											"end": 1614,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1594,
											"end": 1614,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1643,
											"end": 1674,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1643,
											"end": 1674,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1633,
											"end": 1675,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1633,
											"end": 1675,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "400"
										},
										{
											"begin": 1623,
											"end": 1693,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1689,
											"end": 1690,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1686,
											"end": 1687,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1679,
											"end": 1691,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1693,
											"name": "tag",
											"source": 17,
											"value": "400"
										},
										{
											"begin": 1623,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1526,
											"end": 1699,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1526,
											"end": 1699,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1526,
											"end": 1699,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1526,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1704,
											"end": 1958,
											"name": "tag",
											"source": 17,
											"value": "42"
										},
										{
											"begin": 1704,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1772,
											"end": 1778,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1780,
											"end": 1786,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1833,
											"end": 1835,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1821,
											"end": 1830,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1812,
											"end": 1819,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1808,
											"end": 1831,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1804,
											"end": 1836,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 1801,
											"end": 1853,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1801,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "402"
										},
										{
											"begin": 1801,
											"end": 1853,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1849,
											"end": 1850,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1847,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1839,
											"end": 1851,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1801,
											"end": 1853,
											"name": "tag",
											"source": 17,
											"value": "402"
										},
										{
											"begin": 1801,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1872,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "403"
										},
										{
											"begin": 1891,
											"end": 1900,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1872,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "376"
										},
										{
											"begin": 1872,
											"end": 1901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1872,
											"end": 1901,
											"name": "tag",
											"source": 17,
											"value": "403"
										},
										{
											"begin": 1872,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1862,
											"end": 1901,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 1948,
											"end": 1950,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1920,
											"end": 1952,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1920,
											"end": 1952,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1704,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1963,
											"end": 2291,
											"name": "tag",
											"source": 17,
											"value": "46"
										},
										{
											"begin": 1963,
											"end": 2291,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2040,
											"end": 2046,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2054,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2056,
											"end": 2062,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2109,
											"end": 2111,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 2097,
											"end": 2106,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2088,
											"end": 2095,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2084,
											"end": 2107,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2080,
											"end": 2112,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2077,
											"end": 2129,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2077,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "405"
										},
										{
											"begin": 2077,
											"end": 2129,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2125,
											"end": 2126,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2123,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2115,
											"end": 2127,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2077,
											"end": 2129,
											"name": "tag",
											"source": 17,
											"value": "405"
										},
										{
											"begin": 2077,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "406"
										},
										{
											"begin": 2167,
											"end": 2176,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "376"
										},
										{
											"begin": 2148,
											"end": 2177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "tag",
											"source": 17,
											"value": "406"
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2138,
											"end": 2177,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2138,
											"end": 2177,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2196,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "407"
										},
										{
											"begin": 2230,
											"end": 2232,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2219,
											"end": 2228,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2215,
											"end": 2233,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2196,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "376"
										},
										{
											"begin": 2196,
											"end": 2234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2196,
											"end": 2234,
											"name": "tag",
											"source": 17,
											"value": "407"
										},
										{
											"begin": 2196,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2186,
											"end": 2234,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2186,
											"end": 2234,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2281,
											"end": 2283,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2270,
											"end": 2279,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2266,
											"end": 2284,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2253,
											"end": 2285,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2243,
											"end": 2285,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2243,
											"end": 2285,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1963,
											"end": 2291,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1963,
											"end": 2291,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1963,
											"end": 2291,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1963,
											"end": 2291,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1963,
											"end": 2291,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1963,
											"end": 2291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2296,
											"end": 2423,
											"name": "tag",
											"source": 17,
											"value": "340"
										},
										{
											"begin": 2296,
											"end": 2423,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2357,
											"end": 2367,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 2352,
											"end": 2355,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 2348,
											"end": 2368,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 2345,
											"end": 2346,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2338,
											"end": 2369,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2388,
											"end": 2392,
											"name": "PUSH",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 2385,
											"end": 2386,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2378,
											"end": 2393,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2412,
											"end": 2416,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 2409,
											"end": 2410,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2402,
											"end": 2417,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2428,
											"end": 2703,
											"name": "tag",
											"source": 17,
											"value": "377"
										},
										{
											"begin": 2428,
											"end": 2703,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2499,
											"end": 2501,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2502,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2564,
											"end": 2566,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 2545,
											"end": 2558,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2545,
											"end": 2558,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2568,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2529,
											"end": 2569,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2529,
											"end": 2569,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2584,
											"end": 2618,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2584,
											"end": 2618,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 2620,
											"end": 2642,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2620,
											"end": 2642,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2620,
											"end": 2642,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 2581,
											"end": 2643,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 2578,
											"end": 2666,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2578,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "411"
										},
										{
											"begin": 2578,
											"end": 2666,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2646,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "411"
										},
										{
											"begin": 2646,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "340"
										},
										{
											"begin": 2646,
											"end": 2664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2646,
											"end": 2664,
											"name": "tag",
											"source": 17,
											"value": "411"
										},
										{
											"begin": 2646,
											"end": 2664,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2682,
											"end": 2684,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2675,
											"end": 2697,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2428,
											"end": 2703,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2428,
											"end": 2703,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2428,
											"end": 2703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2708,
											"end": 2891,
											"name": "tag",
											"source": 17,
											"value": "378"
										},
										{
											"begin": 2708,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2768,
											"end": 2772,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2790,
											"end": 2820,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2790,
											"end": 2820,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 2787,
											"end": 2843,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2787,
											"end": 2843,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "414"
										},
										{
											"begin": 2787,
											"end": 2843,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2823,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "414"
										},
										{
											"begin": 2823,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "340"
										},
										{
											"begin": 2823,
											"end": 2841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2823,
											"end": 2841,
											"name": "tag",
											"source": 17,
											"value": "414"
										},
										{
											"begin": 2823,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2868,
											"end": 2869,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 2864,
											"end": 2878,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 2880,
											"end": 2884,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2860,
											"end": 2885,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2860,
											"end": 2885,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2708,
											"end": 2891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2896,
											"end": 3570,
											"name": "tag",
											"source": 17,
											"value": "379"
										},
										{
											"begin": 2896,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2950,
											"end": 2955,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3003,
											"end": 3006,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2996,
											"end": 3000,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 2988,
											"end": 2994,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2984,
											"end": 3001,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2980,
											"end": 3007,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2970,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "416"
										},
										{
											"begin": 2970,
											"end": 3025,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3021,
											"end": 3022,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3019,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3011,
											"end": 3023,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2970,
											"end": 3025,
											"name": "tag",
											"source": 17,
											"value": "416"
										},
										{
											"begin": 2970,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3057,
											"end": 3063,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3044,
											"end": 3064,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3083,
											"end": 3087,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3107,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "417"
										},
										{
											"begin": 3123,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "418"
										},
										{
											"begin": 3163,
											"end": 3165,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3123,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "378"
										},
										{
											"begin": 3123,
											"end": 3166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3123,
											"end": 3166,
											"name": "tag",
											"source": 17,
											"value": "418"
										},
										{
											"begin": 3123,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3107,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "377"
										},
										{
											"begin": 3107,
											"end": 3167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3107,
											"end": 3167,
											"name": "tag",
											"source": 17,
											"value": "417"
										},
										{
											"begin": 3107,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3189,
											"end": 3192,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3213,
											"end": 3215,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3208,
											"end": 3211,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3201,
											"end": 3216,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3241,
											"end": 3245,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3236,
											"end": 3239,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3232,
											"end": 3246,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3298,
											"end": 3302,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3292,
											"end": 3294,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3290,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 3285,
											"end": 3295,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 3277,
											"end": 3283,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 3273,
											"end": 3296,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3269,
											"end": 3303,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3255,
											"end": 3303,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 3255,
											"end": 3303,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3329,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3318,
											"end": 3324,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3315,
											"end": 3330,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 3312,
											"end": 3347,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3312,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "419"
										},
										{
											"begin": 3312,
											"end": 3347,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3343,
											"end": 3344,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3340,
											"end": 3341,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3333,
											"end": 3345,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3312,
											"end": 3347,
											"name": "tag",
											"source": 17,
											"value": "419"
										},
										{
											"begin": 3312,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3379,
											"end": 3383,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3371,
											"end": 3377,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3367,
											"end": 3384,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3393,
											"end": 3541,
											"name": "tag",
											"source": 17,
											"value": "420"
										},
										{
											"begin": 3393,
											"end": 3541,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3409,
											"end": 3415,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3404,
											"end": 3407,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3401,
											"end": 3416,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 3393,
											"end": 3541,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3393,
											"end": 3541,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "422"
										},
										{
											"begin": 3393,
											"end": 3541,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3475,
											"end": 3498,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "423"
										},
										{
											"begin": 3494,
											"end": 3497,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3475,
											"end": 3498,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "376"
										},
										{
											"begin": 3475,
											"end": 3498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3475,
											"end": 3498,
											"name": "tag",
											"source": 17,
											"value": "423"
										},
										{
											"begin": 3475,
											"end": 3498,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3463,
											"end": 3499,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3463,
											"end": 3499,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3519,
											"end": 3531,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3519,
											"end": 3531,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3519,
											"end": 3531,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3519,
											"end": 3531,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3426,
											"end": 3438,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3426,
											"end": 3438,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3393,
											"end": 3541,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "420"
										},
										{
											"begin": 3393,
											"end": 3541,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3393,
											"end": 3541,
											"name": "tag",
											"source": 17,
											"value": "422"
										},
										{
											"begin": 3393,
											"end": 3541,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3559,
											"end": 3564,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": 2896,
											"end": 3570,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2896,
											"end": 3570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3575,
											"end": 3982,
											"name": "tag",
											"source": 17,
											"value": "380"
										},
										{
											"begin": 3575,
											"end": 3982,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3640,
											"end": 3645,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3663,
											"end": 3693,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3663,
											"end": 3693,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 3660,
											"end": 3716,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3660,
											"end": 3716,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "426"
										},
										{
											"begin": 3660,
											"end": 3716,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3696,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "426"
										},
										{
											"begin": 3696,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "340"
										},
										{
											"begin": 3696,
											"end": 3714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3696,
											"end": 3714,
											"name": "tag",
											"source": 17,
											"value": "426"
										},
										{
											"begin": 3696,
											"end": 3714,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3734,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "427"
										},
										{
											"begin": 3779,
											"end": 3781,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 3758,
											"end": 3773,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3758,
											"end": 3773,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3754,
											"end": 3783,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3785,
											"end": 3789,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3750,
											"end": 3790,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3734,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "377"
										},
										{
											"begin": 3734,
											"end": 3791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3734,
											"end": 3791,
											"name": "tag",
											"source": 17,
											"value": "427"
										},
										{
											"begin": 3734,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3725,
											"end": 3791,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3725,
											"end": 3791,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3814,
											"end": 3820,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3807,
											"end": 3812,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3800,
											"end": 3821,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3854,
											"end": 3857,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3845,
											"end": 3851,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3840,
											"end": 3843,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3836,
											"end": 3852,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3833,
											"end": 3858,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 3830,
											"end": 3875,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3830,
											"end": 3875,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "428"
										},
										{
											"begin": 3830,
											"end": 3875,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3871,
											"end": 3872,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3868,
											"end": 3869,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3861,
											"end": 3873,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3830,
											"end": 3875,
											"name": "tag",
											"source": 17,
											"value": "428"
										},
										{
											"begin": 3830,
											"end": 3875,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3920,
											"end": 3926,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3915,
											"end": 3918,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3906,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3897,
											"end": 3913,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3884,
											"end": 3927,
											"name": "CALLDATACOPY",
											"source": 17
										},
										{
											"begin": 3974,
											"end": 3975,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3967,
											"end": 3971,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3958,
											"end": 3964,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3951,
											"end": 3956,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3947,
											"end": 3965,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3943,
											"end": 3972,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3936,
											"end": 3976,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3575,
											"end": 3982,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 3575,
											"end": 3982,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3575,
											"end": 3982,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3575,
											"end": 3982,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3575,
											"end": 3982,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3575,
											"end": 3982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3987,
											"end": 4209,
											"name": "tag",
											"source": 17,
											"value": "381"
										},
										{
											"begin": 3987,
											"end": 4209,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4030,
											"end": 4035,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4083,
											"end": 4086,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4076,
											"end": 4080,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 4068,
											"end": 4074,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4064,
											"end": 4081,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4060,
											"end": 4087,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 4050,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "430"
										},
										{
											"begin": 4050,
											"end": 4105,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4101,
											"end": 4102,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4098,
											"end": 4099,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4091,
											"end": 4103,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4050,
											"end": 4105,
											"name": "tag",
											"source": 17,
											"value": "430"
										},
										{
											"begin": 4050,
											"end": 4105,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4123,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "300"
										},
										{
											"begin": 4199,
											"end": 4202,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4190,
											"end": 4196,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4177,
											"end": 4197,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 4170,
											"end": 4174,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4162,
											"end": 4168,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4158,
											"end": 4175,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4123,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "380"
										},
										{
											"begin": 4123,
											"end": 4203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4214,
											"end": 5503,
											"name": "tag",
											"source": 17,
											"value": "53"
										},
										{
											"begin": 4214,
											"end": 5503,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4342,
											"end": 4348,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4350,
											"end": 4356,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4403,
											"end": 4405,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4391,
											"end": 4400,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4382,
											"end": 4389,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4378,
											"end": 4401,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4374,
											"end": 4406,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 4371,
											"end": 4423,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4371,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "433"
										},
										{
											"begin": 4371,
											"end": 4423,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4419,
											"end": 4420,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4416,
											"end": 4417,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4409,
											"end": 4421,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4371,
											"end": 4423,
											"name": "tag",
											"source": 17,
											"value": "433"
										},
										{
											"begin": 4371,
											"end": 4423,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4446,
											"end": 4469,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4446,
											"end": 4469,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4518,
											"end": 4532,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4518,
											"end": 4532,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4518,
											"end": 4532,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 4515,
											"end": 4549,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4515,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "434"
										},
										{
											"begin": 4515,
											"end": 4549,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4545,
											"end": 4546,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4542,
											"end": 4543,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4535,
											"end": 4547,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4515,
											"end": 4549,
											"name": "tag",
											"source": 17,
											"value": "434"
										},
										{
											"begin": 4515,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4568,
											"end": 4629,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "435"
										},
										{
											"begin": 4621,
											"end": 4628,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4601,
											"end": 4610,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4597,
											"end": 4619,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4568,
											"end": 4629,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "379"
										},
										{
											"begin": 4568,
											"end": 4629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4568,
											"end": 4629,
											"name": "tag",
											"source": 17,
											"value": "435"
										},
										{
											"begin": 4568,
											"end": 4629,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4558,
											"end": 4629,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 4558,
											"end": 4629,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4648,
											"end": 4650,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4638,
											"end": 4650,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4638,
											"end": 4650,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4703,
											"end": 4705,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4692,
											"end": 4701,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4688,
											"end": 4706,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4675,
											"end": 4707,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 4732,
											"end": 4734,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4722,
											"end": 4730,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4719,
											"end": 4735,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 4716,
											"end": 4752,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4716,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "436"
										},
										{
											"begin": 4716,
											"end": 4752,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4748,
											"end": 4749,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4745,
											"end": 4746,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4738,
											"end": 4750,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4716,
											"end": 4752,
											"name": "tag",
											"source": 17,
											"value": "436"
										},
										{
											"begin": 4716,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4771,
											"end": 4795,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4771,
											"end": 4795,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4826,
											"end": 4830,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 4818,
											"end": 4831,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4818,
											"end": 4831,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4814,
											"end": 4841,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 4804,
											"end": 4859,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "437"
										},
										{
											"begin": 4804,
											"end": 4859,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 4856,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4852,
											"end": 4853,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4845,
											"end": 4857,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4804,
											"end": 4859,
											"name": "tag",
											"source": 17,
											"value": "437"
										},
										{
											"begin": 4804,
											"end": 4859,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4891,
											"end": 4893,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4878,
											"end": 4894,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 4914,
											"end": 4974,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 4930,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "418"
										},
										{
											"begin": 4970,
											"end": 4972,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4930,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "378"
										},
										{
											"begin": 4930,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4914,
											"end": 4974,
											"name": "tag",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 4914,
											"end": 4974,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5008,
											"end": 5023,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5008,
											"end": 5023,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5008,
											"end": 5023,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5090,
											"end": 5091,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 5086,
											"end": 5096,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5086,
											"end": 5096,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5086,
											"end": 5096,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5086,
											"end": 5096,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 5078,
											"end": 5097,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5078,
											"end": 5097,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5074,
											"end": 5102,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5074,
											"end": 5102,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5074,
											"end": 5102,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5039,
											"end": 5051,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5039,
											"end": 5051,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5039,
											"end": 5051,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5039,
											"end": 5051,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5114,
											"end": 5133,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 5114,
											"end": 5133,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5114,
											"end": 5133,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 5111,
											"end": 5150,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5111,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "440"
										},
										{
											"begin": 5111,
											"end": 5150,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5146,
											"end": 5147,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5143,
											"end": 5144,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5136,
											"end": 5148,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5111,
											"end": 5150,
											"name": "tag",
											"source": 17,
											"value": "440"
										},
										{
											"begin": 5111,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5178,
											"end": 5180,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5174,
											"end": 5176,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5170,
											"end": 5181,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5190,
											"end": 5473,
											"name": "tag",
											"source": 17,
											"value": "441"
										},
										{
											"begin": 5190,
											"end": 5473,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5206,
											"end": 5212,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5201,
											"end": 5204,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5198,
											"end": 5213,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 5190,
											"end": 5473,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5190,
											"end": 5473,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "443"
										},
										{
											"begin": 5190,
											"end": 5473,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5292,
											"end": 5295,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 5328,
											"end": 5330,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5315,
											"end": 5326,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5312,
											"end": 5331,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 5309,
											"end": 5348,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5309,
											"end": 5348,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "444"
										},
										{
											"begin": 5309,
											"end": 5348,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5344,
											"end": 5345,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5342,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5334,
											"end": 5346,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5309,
											"end": 5348,
											"name": "tag",
											"source": 17,
											"value": "444"
										},
										{
											"begin": 5309,
											"end": 5348,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5373,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "445"
										},
										{
											"begin": 5422,
											"end": 5429,
											"name": "DUP13",
											"source": 17
										},
										{
											"begin": 5417,
											"end": 5419,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 5403,
											"end": 5414,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5399,
											"end": 5401,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 5395,
											"end": 5415,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5391,
											"end": 5420,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5373,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "381"
										},
										{
											"begin": 5373,
											"end": 5430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5373,
											"end": 5430,
											"name": "tag",
											"source": 17,
											"value": "445"
										},
										{
											"begin": 5373,
											"end": 5430,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5361,
											"end": 5431,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5361,
											"end": 5431,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5451,
											"end": 5463,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5451,
											"end": 5463,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5451,
											"end": 5463,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5451,
											"end": 5463,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5223,
											"end": 5235,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5223,
											"end": 5235,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5190,
											"end": 5473,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "441"
										},
										{
											"begin": 5190,
											"end": 5473,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5190,
											"end": 5473,
											"name": "tag",
											"source": 17,
											"value": "443"
										},
										{
											"begin": 5190,
											"end": 5473,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5194,
											"end": 5197,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5492,
											"end": 5497,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5482,
											"end": 5497,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": 5482,
											"end": 5497,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5482,
											"end": 5497,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5482,
											"end": 5497,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5482,
											"end": 5497,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5482,
											"end": 5497,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5482,
											"end": 5497,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5482,
											"end": 5497,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4214,
											"end": 5503,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4214,
											"end": 5503,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4214,
											"end": 5503,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4214,
											"end": 5503,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4214,
											"end": 5503,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4214,
											"end": 5503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5508,
											"end": 5694,
											"name": "tag",
											"source": 17,
											"value": "61"
										},
										{
											"begin": 5508,
											"end": 5694,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5567,
											"end": 5573,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5620,
											"end": 5622,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5608,
											"end": 5617,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5599,
											"end": 5606,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5595,
											"end": 5618,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 5588,
											"end": 5640,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5588,
											"end": 5640,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 5588,
											"end": 5640,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5636,
											"end": 5637,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5633,
											"end": 5634,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5626,
											"end": 5638,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5588,
											"end": 5640,
											"name": "tag",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 5588,
											"end": 5640,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "300"
										},
										{
											"begin": 5678,
											"end": 5687,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "376"
										},
										{
											"begin": 5659,
											"end": 5688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5881,
											"end": 6228,
											"name": "tag",
											"source": 17,
											"value": "75"
										},
										{
											"begin": 5881,
											"end": 6228,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5946,
											"end": 5952,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5954,
											"end": 5960,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6007,
											"end": 6009,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5995,
											"end": 6004,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5986,
											"end": 5993,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5982,
											"end": 6005,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5978,
											"end": 6010,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 5975,
											"end": 6027,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5975,
											"end": 6027,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "451"
										},
										{
											"begin": 5975,
											"end": 6027,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6023,
											"end": 6024,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6020,
											"end": 6021,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6013,
											"end": 6025,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5975,
											"end": 6027,
											"name": "tag",
											"source": 17,
											"value": "451"
										},
										{
											"begin": 5975,
											"end": 6027,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6046,
											"end": 6075,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "452"
										},
										{
											"begin": 6065,
											"end": 6074,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6046,
											"end": 6075,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "376"
										},
										{
											"begin": 6046,
											"end": 6075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6046,
											"end": 6075,
											"name": "tag",
											"source": 17,
											"value": "452"
										},
										{
											"begin": 6046,
											"end": 6075,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6036,
											"end": 6075,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6036,
											"end": 6075,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6125,
											"end": 6127,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6114,
											"end": 6123,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6110,
											"end": 6128,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6097,
											"end": 6129,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 6172,
											"end": 6177,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6165,
											"end": 6178,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6158,
											"end": 6179,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6151,
											"end": 6156,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6148,
											"end": 6180,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 6138,
											"end": 6198,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "453"
										},
										{
											"begin": 6138,
											"end": 6198,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6194,
											"end": 6195,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6191,
											"end": 6192,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6184,
											"end": 6196,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6138,
											"end": 6198,
											"name": "tag",
											"source": 17,
											"value": "453"
										},
										{
											"begin": 6138,
											"end": 6198,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6217,
											"end": 6222,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6207,
											"end": 6222,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6207,
											"end": 6222,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6207,
											"end": 6222,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5881,
											"end": 6228,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5881,
											"end": 6228,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5881,
											"end": 6228,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5881,
											"end": 6228,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5881,
											"end": 6228,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5881,
											"end": 6228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6233,
											"end": 6623,
											"name": "tag",
											"source": 17,
											"value": "79"
										},
										{
											"begin": 6233,
											"end": 6623,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6311,
											"end": 6317,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6319,
											"end": 6325,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6372,
											"end": 6374,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6360,
											"end": 6369,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6351,
											"end": 6358,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6347,
											"end": 6370,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 6343,
											"end": 6375,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 6340,
											"end": 6392,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6340,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "455"
										},
										{
											"begin": 6340,
											"end": 6392,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6388,
											"end": 6389,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6385,
											"end": 6386,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6378,
											"end": 6390,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6340,
											"end": 6392,
											"name": "tag",
											"source": 17,
											"value": "455"
										},
										{
											"begin": 6340,
											"end": 6392,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6411,
											"end": 6434,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6411,
											"end": 6434,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 6411,
											"end": 6434,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6485,
											"end": 6487,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6470,
											"end": 6488,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6470,
											"end": 6488,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6457,
											"end": 6489,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6501,
											"end": 6531,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6501,
											"end": 6531,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 6498,
											"end": 6548,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6498,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "456"
										},
										{
											"begin": 6498,
											"end": 6548,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6544,
											"end": 6545,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6541,
											"end": 6542,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6534,
											"end": 6546,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6498,
											"end": 6548,
											"name": "tag",
											"source": 17,
											"value": "456"
										},
										{
											"begin": 6498,
											"end": 6548,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6567,
											"end": 6617,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "457"
										},
										{
											"begin": 6609,
											"end": 6616,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6600,
											"end": 6606,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6589,
											"end": 6598,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 6585,
											"end": 6607,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6567,
											"end": 6617,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "381"
										},
										{
											"begin": 6567,
											"end": 6617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6567,
											"end": 6617,
											"name": "tag",
											"source": 17,
											"value": "457"
										},
										{
											"begin": 6567,
											"end": 6617,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6557,
											"end": 6617,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6557,
											"end": 6617,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6557,
											"end": 6617,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6233,
											"end": 6623,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6233,
											"end": 6623,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6233,
											"end": 6623,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6233,
											"end": 6623,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6233,
											"end": 6623,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6233,
											"end": 6623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6628,
											"end": 7197,
											"name": "tag",
											"source": 17,
											"value": "83"
										},
										{
											"begin": 6628,
											"end": 7197,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6731,
											"end": 6737,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6739,
											"end": 6745,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6792,
											"end": 6794,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6780,
											"end": 6789,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6771,
											"end": 6778,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6767,
											"end": 6790,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 6763,
											"end": 6795,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 6760,
											"end": 6812,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6760,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "459"
										},
										{
											"begin": 6760,
											"end": 6812,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6808,
											"end": 6809,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6805,
											"end": 6806,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6798,
											"end": 6810,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6760,
											"end": 6812,
											"name": "tag",
											"source": 17,
											"value": "459"
										},
										{
											"begin": 6760,
											"end": 6812,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6835,
											"end": 6858,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6835,
											"end": 6858,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6907,
											"end": 6921,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6907,
											"end": 6921,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6907,
											"end": 6921,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 6904,
											"end": 6938,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6904,
											"end": 6938,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "460"
										},
										{
											"begin": 6904,
											"end": 6938,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6934,
											"end": 6935,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6931,
											"end": 6932,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6924,
											"end": 6936,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6904,
											"end": 6938,
											"name": "tag",
											"source": 17,
											"value": "460"
										},
										{
											"begin": 6904,
											"end": 6938,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6957,
											"end": 7018,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "461"
										},
										{
											"begin": 7010,
											"end": 7017,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 7001,
											"end": 7007,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6990,
											"end": 6999,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 6986,
											"end": 7008,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6957,
											"end": 7018,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "379"
										},
										{
											"begin": 6957,
											"end": 7018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6957,
											"end": 7018,
											"name": "tag",
											"source": 17,
											"value": "461"
										},
										{
											"begin": 6957,
											"end": 7018,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6947,
											"end": 7018,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 6947,
											"end": 7018,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7071,
											"end": 7073,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7060,
											"end": 7069,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7056,
											"end": 7074,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7043,
											"end": 7075,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 7027,
											"end": 7075,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7027,
											"end": 7075,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7102,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7090,
											"end": 7098,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7087,
											"end": 7103,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 7084,
											"end": 7120,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7084,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "462"
										},
										{
											"begin": 7084,
											"end": 7120,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7116,
											"end": 7117,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7113,
											"end": 7114,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7106,
											"end": 7118,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7084,
											"end": 7120,
											"name": "tag",
											"source": 17,
											"value": "462"
										},
										{
											"begin": 7084,
											"end": 7120,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7084,
											"end": 7120,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7139,
											"end": 7191,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "457"
										},
										{
											"begin": 7183,
											"end": 7190,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7172,
											"end": 7180,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7161,
											"end": 7170,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 7157,
											"end": 7181,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7139,
											"end": 7191,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "381"
										},
										{
											"begin": 7139,
											"end": 7191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7202,
											"end": 7869,
											"name": "tag",
											"source": 17,
											"value": "87"
										},
										{
											"begin": 7202,
											"end": 7869,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7297,
											"end": 7303,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7305,
											"end": 7311,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7313,
											"end": 7319,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7321,
											"end": 7327,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7374,
											"end": 7377,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 7362,
											"end": 7371,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7353,
											"end": 7360,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 7349,
											"end": 7372,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 7345,
											"end": 7378,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 7342,
											"end": 7395,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7342,
											"end": 7395,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "465"
										},
										{
											"begin": 7342,
											"end": 7395,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7391,
											"end": 7392,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7388,
											"end": 7389,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7381,
											"end": 7393,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7342,
											"end": 7395,
											"name": "tag",
											"source": 17,
											"value": "465"
										},
										{
											"begin": 7342,
											"end": 7395,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7414,
											"end": 7443,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "466"
										},
										{
											"begin": 7433,
											"end": 7442,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7414,
											"end": 7443,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "376"
										},
										{
											"begin": 7414,
											"end": 7443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7414,
											"end": 7443,
											"name": "tag",
											"source": 17,
											"value": "466"
										},
										{
											"begin": 7414,
											"end": 7443,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7404,
											"end": 7443,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 7404,
											"end": 7443,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "467"
										},
										{
											"begin": 7496,
											"end": 7498,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7485,
											"end": 7494,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 7481,
											"end": 7499,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "376"
										},
										{
											"begin": 7462,
											"end": 7500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "tag",
											"source": 17,
											"value": "467"
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7452,
											"end": 7500,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7547,
											"end": 7549,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7532,
											"end": 7550,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7532,
											"end": 7550,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7519,
											"end": 7551,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 7519,
											"end": 7551,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7602,
											"end": 7604,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 7587,
											"end": 7605,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7587,
											"end": 7605,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7574,
											"end": 7606,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7618,
											"end": 7648,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7618,
											"end": 7648,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 7615,
											"end": 7665,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7615,
											"end": 7665,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "468"
										},
										{
											"begin": 7615,
											"end": 7665,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7661,
											"end": 7662,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7658,
											"end": 7659,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7651,
											"end": 7663,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7615,
											"end": 7665,
											"name": "tag",
											"source": 17,
											"value": "468"
										},
										{
											"begin": 7615,
											"end": 7665,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7684,
											"end": 7706,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7684,
											"end": 7706,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7737,
											"end": 7741,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 7729,
											"end": 7742,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7729,
											"end": 7742,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7725,
											"end": 7752,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 7715,
											"end": 7770,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "469"
										},
										{
											"begin": 7715,
											"end": 7770,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7766,
											"end": 7767,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7763,
											"end": 7764,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7756,
											"end": 7768,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7715,
											"end": 7770,
											"name": "tag",
											"source": 17,
											"value": "469"
										},
										{
											"begin": 7715,
											"end": 7770,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7789,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "470"
										},
										{
											"begin": 7855,
											"end": 7862,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 7850,
											"end": 7852,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7837,
											"end": 7853,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 7832,
											"end": 7834,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7828,
											"end": 7830,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7824,
											"end": 7835,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7789,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "380"
										},
										{
											"begin": 7789,
											"end": 7863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7789,
											"end": 7863,
											"name": "tag",
											"source": 17,
											"value": "470"
										},
										{
											"begin": 7789,
											"end": 7863,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7779,
											"end": 7863,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7779,
											"end": 7863,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7779,
											"end": 7863,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7202,
											"end": 7869,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7202,
											"end": 7869,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 7202,
											"end": 7869,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7202,
											"end": 7869,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 7202,
											"end": 7869,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7202,
											"end": 7869,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7202,
											"end": 7869,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7202,
											"end": 7869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7874,
											"end": 8270,
											"name": "tag",
											"source": 17,
											"value": "95"
										},
										{
											"begin": 7874,
											"end": 8270,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7952,
											"end": 7958,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7960,
											"end": 7966,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8013,
											"end": 8015,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 8001,
											"end": 8010,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7988,
											"end": 8011,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 7984,
											"end": 8016,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 7981,
											"end": 8033,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7981,
											"end": 8033,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "472"
										},
										{
											"begin": 7981,
											"end": 8033,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8029,
											"end": 8030,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8026,
											"end": 8027,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8019,
											"end": 8031,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7981,
											"end": 8033,
											"name": "tag",
											"source": 17,
											"value": "472"
										},
										{
											"begin": 7981,
											"end": 8033,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8052,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "473"
										},
										{
											"begin": 8071,
											"end": 8080,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8052,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "376"
										},
										{
											"begin": 8052,
											"end": 8081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8052,
											"end": 8081,
											"name": "tag",
											"source": 17,
											"value": "473"
										},
										{
											"begin": 8052,
											"end": 8081,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8042,
											"end": 8081,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8132,
											"end": 8134,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8117,
											"end": 8135,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8117,
											"end": 8135,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8104,
											"end": 8136,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8148,
											"end": 8178,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8148,
											"end": 8178,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 8145,
											"end": 8195,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8145,
											"end": 8195,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "456"
										},
										{
											"begin": 8145,
											"end": 8195,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8191,
											"end": 8192,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8188,
											"end": 8189,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8181,
											"end": 8193,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 8275,
											"end": 8535,
											"name": "tag",
											"source": 17,
											"value": "99"
										},
										{
											"begin": 8275,
											"end": 8535,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8343,
											"end": 8349,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8351,
											"end": 8357,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8404,
											"end": 8406,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 8392,
											"end": 8401,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8383,
											"end": 8390,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 8379,
											"end": 8402,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 8375,
											"end": 8407,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 8372,
											"end": 8424,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8372,
											"end": 8424,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "477"
										},
										{
											"begin": 8372,
											"end": 8424,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8420,
											"end": 8421,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8417,
											"end": 8418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8410,
											"end": 8422,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 8372,
											"end": 8424,
											"name": "tag",
											"source": 17,
											"value": "477"
										},
										{
											"begin": 8372,
											"end": 8424,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8443,
											"end": 8472,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "478"
										},
										{
											"begin": 8462,
											"end": 8471,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8443,
											"end": 8472,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "376"
										},
										{
											"begin": 8443,
											"end": 8472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8443,
											"end": 8472,
											"name": "tag",
											"source": 17,
											"value": "478"
										},
										{
											"begin": 8443,
											"end": 8472,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8433,
											"end": 8472,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8433,
											"end": 8472,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8491,
											"end": 8529,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 8525,
											"end": 8527,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8514,
											"end": 8523,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8510,
											"end": 8528,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8491,
											"end": 8529,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "376"
										},
										{
											"begin": 8491,
											"end": 8529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8491,
											"end": 8529,
											"name": "tag",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 8491,
											"end": 8529,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8481,
											"end": 8529,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8481,
											"end": 8529,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8275,
											"end": 8535,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8275,
											"end": 8535,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8275,
											"end": 8535,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8275,
											"end": 8535,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8275,
											"end": 8535,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8275,
											"end": 8535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8540,
											"end": 9004,
											"name": "tag",
											"source": 17,
											"value": "107"
										},
										{
											"begin": 8540,
											"end": 9004,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8627,
											"end": 8633,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8635,
											"end": 8641,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8643,
											"end": 8649,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8696,
											"end": 8698,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 8684,
											"end": 8693,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8675,
											"end": 8682,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 8671,
											"end": 8694,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 8667,
											"end": 8699,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 8664,
											"end": 8716,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8664,
											"end": 8716,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "481"
										},
										{
											"begin": 8664,
											"end": 8716,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8712,
											"end": 8713,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8709,
											"end": 8710,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8702,
											"end": 8714,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 8664,
											"end": 8716,
											"name": "tag",
											"source": 17,
											"value": "481"
										},
										{
											"begin": 8664,
											"end": 8716,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8735,
											"end": 8764,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "482"
										},
										{
											"begin": 8754,
											"end": 8763,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8735,
											"end": 8764,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "376"
										},
										{
											"begin": 8735,
											"end": 8764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8735,
											"end": 8764,
											"name": "tag",
											"source": 17,
											"value": "482"
										},
										{
											"begin": 8735,
											"end": 8764,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8725,
											"end": 8764,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8811,
											"end": 8813,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8796,
											"end": 8814,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8796,
											"end": 8814,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8783,
											"end": 8815,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 8783,
											"end": 8815,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8866,
											"end": 8868,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 8851,
											"end": 8869,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8851,
											"end": 8869,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8838,
											"end": 8870,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8882,
											"end": 8912,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8882,
											"end": 8912,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 8879,
											"end": 8929,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8879,
											"end": 8929,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "483"
										},
										{
											"begin": 8879,
											"end": 8929,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8925,
											"end": 8926,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8922,
											"end": 8923,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8915,
											"end": 8927,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 8879,
											"end": 8929,
											"name": "tag",
											"source": 17,
											"value": "483"
										},
										{
											"begin": 8879,
											"end": 8929,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8948,
											"end": 8998,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "484"
										},
										{
											"begin": 8990,
											"end": 8997,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 8981,
											"end": 8987,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8970,
											"end": 8979,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 8966,
											"end": 8988,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8948,
											"end": 8998,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "381"
										},
										{
											"begin": 8948,
											"end": 8998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8948,
											"end": 8998,
											"name": "tag",
											"source": 17,
											"value": "484"
										},
										{
											"begin": 8948,
											"end": 8998,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8938,
											"end": 8998,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8938,
											"end": 8998,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8938,
											"end": 8998,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8540,
											"end": 9004,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8540,
											"end": 9004,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8540,
											"end": 9004,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8540,
											"end": 9004,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8540,
											"end": 9004,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8540,
											"end": 9004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9009,
											"end": 9389,
											"name": "tag",
											"source": 17,
											"value": "115"
										},
										{
											"begin": 9009,
											"end": 9389,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9088,
											"end": 9089,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 9084,
											"end": 9096,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9084,
											"end": 9096,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9084,
											"end": 9096,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 9084,
											"end": 9096,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9131,
											"end": 9143,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9131,
											"end": 9143,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 9131,
											"end": 9143,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9152,
											"end": 9213,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "486"
										},
										{
											"begin": 9152,
											"end": 9213,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9206,
											"end": 9210,
											"name": "PUSH",
											"source": 17,
											"value": "7F"
										},
										{
											"begin": 9198,
											"end": 9204,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9194,
											"end": 9211,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 9184,
											"end": 9211,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9184,
											"end": 9211,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9152,
											"end": 9213,
											"name": "tag",
											"source": 17,
											"value": "486"
										},
										{
											"begin": 9152,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9259,
											"end": 9261,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9251,
											"end": 9257,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9248,
											"end": 9262,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 9228,
											"end": 9246,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9225,
											"end": 9263,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 9222,
											"end": 9383,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "487"
										},
										{
											"begin": 9222,
											"end": 9383,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9305,
											"end": 9315,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 9300,
											"end": 9303,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 9296,
											"end": 9316,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 9293,
											"end": 9294,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9286,
											"end": 9317,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9340,
											"end": 9344,
											"name": "PUSH",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 9330,
											"end": 9345,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9368,
											"end": 9372,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 9365,
											"end": 9366,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9358,
											"end": 9373,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 9222,
											"end": 9383,
											"name": "tag",
											"source": 17,
											"value": "487"
										},
										{
											"begin": 9222,
											"end": 9383,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9222,
											"end": 9383,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9009,
											"end": 9389,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9009,
											"end": 9389,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9009,
											"end": 9389,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9009,
											"end": 9389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9774,
											"end": 9901,
											"name": "tag",
											"source": 17,
											"value": "152"
										},
										{
											"begin": 9774,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9835,
											"end": 9845,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 9830,
											"end": 9833,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 9826,
											"end": 9846,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 9823,
											"end": 9824,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9816,
											"end": 9847,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9866,
											"end": 9870,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 9863,
											"end": 9864,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 9856,
											"end": 9871,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9890,
											"end": 9894,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 9887,
											"end": 9888,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9880,
											"end": 9895,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 9906,
											"end": 10118,
											"name": "tag",
											"source": 17,
											"value": "382"
										},
										{
											"begin": 9906,
											"end": 10118,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9948,
											"end": 9951,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9986,
											"end": 9991,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9980,
											"end": 9992,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 10030,
											"end": 10036,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10023,
											"end": 10027,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10016,
											"end": 10021,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10012,
											"end": 10028,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10007,
											"end": 10010,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10001,
											"end": 10037,
											"name": "MCOPY",
											"source": 17
										},
										{
											"begin": 10092,
											"end": 10093,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10056,
											"end": 10072,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 10056,
											"end": 10072,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10081,
											"end": 10094,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 10081,
											"end": 10094,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10081,
											"end": 10094,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10056,
											"end": 10072,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10056,
											"end": 10072,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9906,
											"end": 10118,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9906,
											"end": 10118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10123,
											"end": 10390,
											"name": "tag",
											"source": 17,
											"value": "207"
										},
										{
											"begin": 10123,
											"end": 10390,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10302,
											"end": 10305,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10327,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "208"
										},
										{
											"begin": 10353,
											"end": 10383,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "493"
										},
										{
											"begin": 10379,
											"end": 10382,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10371,
											"end": 10377,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 10353,
											"end": 10383,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "382"
										},
										{
											"begin": 10353,
											"end": 10383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10353,
											"end": 10383,
											"name": "tag",
											"source": 17,
											"value": "493"
										},
										{
											"begin": 10353,
											"end": 10383,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10345,
											"end": 10351,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10327,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "382"
										},
										{
											"begin": 10327,
											"end": 10384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10395,
											"end": 10627,
											"name": "tag",
											"source": 17,
											"value": "262"
										},
										{
											"begin": 10395,
											"end": 10627,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10434,
											"end": 10437,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10455,
											"end": 10472,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 10455,
											"end": 10472,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10455,
											"end": 10472,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10452,
											"end": 10592,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "495"
										},
										{
											"begin": 10452,
											"end": 10592,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10514,
											"end": 10524,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 10509,
											"end": 10512,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 10505,
											"end": 10525,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 10502,
											"end": 10503,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10495,
											"end": 10526,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10549,
											"end": 10553,
											"name": "PUSH",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 10546,
											"end": 10547,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 10539,
											"end": 10554,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10577,
											"end": 10581,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 10574,
											"end": 10575,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10567,
											"end": 10582,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 10452,
											"end": 10592,
											"name": "tag",
											"source": 17,
											"value": "495"
										},
										{
											"begin": 10452,
											"end": 10592,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10619,
											"end": 10620,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 10608,
											"end": 10621,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10608,
											"end": 10621,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10395,
											"end": 10627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10758,
											"end": 11276,
											"name": "tag",
											"source": 17,
											"value": "384"
										},
										{
											"begin": 10758,
											"end": 11276,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10860,
											"end": 10862,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 10855,
											"end": 10858,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10852,
											"end": 10863,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 10849,
											"end": 11270,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10849,
											"end": 11270,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "140"
										},
										{
											"begin": 10849,
											"end": 11270,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10896,
											"end": 10901,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10893,
											"end": 10894,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10886,
											"end": 10902,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10940,
											"end": 10944,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10937,
											"end": 10938,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10927,
											"end": 10945,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 11010,
											"end": 11012,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 10998,
											"end": 11008,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10994,
											"end": 11013,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10991,
											"end": 10992,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 10987,
											"end": 11014,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 10981,
											"end": 10985,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10977,
											"end": 11015,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11046,
											"end": 11050,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11034,
											"end": 11044,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 11031,
											"end": 11051,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 11028,
											"end": 11075,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11028,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "499"
										},
										{
											"begin": 11028,
											"end": 11075,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11069,
											"end": 11073,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 11028,
											"end": 11075,
											"name": "tag",
											"source": 17,
											"value": "499"
										},
										{
											"begin": 11028,
											"end": 11075,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11124,
											"end": 11126,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 11119,
											"end": 11122,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 11115,
											"end": 11127,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11112,
											"end": 11113,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 11108,
											"end": 11128,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 11102,
											"end": 11106,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11098,
											"end": 11129,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11088,
											"end": 11129,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11088,
											"end": 11129,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11179,
											"end": 11260,
											"name": "tag",
											"source": 17,
											"value": "500"
										},
										{
											"begin": 11179,
											"end": 11260,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11197,
											"end": 11199,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11190,
											"end": 11195,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11187,
											"end": 11200,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 11179,
											"end": 11260,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11179,
											"end": 11260,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "293"
										},
										{
											"begin": 11179,
											"end": 11260,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11256,
											"end": 11257,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11242,
											"end": 11258,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11242,
											"end": 11258,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 11223,
											"end": 11224,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 11212,
											"end": 11225,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11179,
											"end": 11260,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "500"
										},
										{
											"begin": 11179,
											"end": 11260,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11452,
											"end": 12797,
											"name": "tag",
											"source": 17,
											"value": "273"
										},
										{
											"begin": 11452,
											"end": 12797,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11572,
											"end": 11582,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11572,
											"end": 11582,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11594,
											"end": 11624,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11594,
											"end": 11624,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 11591,
											"end": 11647,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11591,
											"end": 11647,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "506"
										},
										{
											"begin": 11591,
											"end": 11647,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11627,
											"end": 11645,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "506"
										},
										{
											"begin": 11627,
											"end": 11645,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "340"
										},
										{
											"begin": 11627,
											"end": 11645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11627,
											"end": 11645,
											"name": "tag",
											"source": 17,
											"value": "506"
										},
										{
											"begin": 11627,
											"end": 11645,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11656,
											"end": 11753,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "507"
										},
										{
											"begin": 11746,
											"end": 11752,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11706,
											"end": 11744,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "508"
										},
										{
											"begin": 11738,
											"end": 11742,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 11732,
											"end": 11743,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 11706,
											"end": 11744,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "115"
										},
										{
											"begin": 11706,
											"end": 11744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11706,
											"end": 11744,
											"name": "tag",
											"source": 17,
											"value": "508"
										},
										{
											"begin": 11706,
											"end": 11744,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11700,
											"end": 11704,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 11656,
											"end": 11753,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "384"
										},
										{
											"begin": 11656,
											"end": 11753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11656,
											"end": 11753,
											"name": "tag",
											"source": 17,
											"value": "507"
										},
										{
											"begin": 11656,
											"end": 11753,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11808,
											"end": 11812,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11808,
											"end": 11812,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 11865,
											"end": 11867,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 11854,
											"end": 11868,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11854,
											"end": 11868,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 11882,
											"end": 11883,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 11877,
											"end": 12540,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11877,
											"end": 12540,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 11877,
											"end": 12540,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "510"
										},
										{
											"begin": 11877,
											"end": 12540,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12584,
											"end": 12585,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12601,
											"end": 12607,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 12598,
											"end": 12687,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 12598,
											"end": 12687,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "511"
										},
										{
											"begin": 12598,
											"end": 12687,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12653,
											"end": 12672,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 12653,
											"end": 12672,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12653,
											"end": 12672,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12647,
											"end": 12673,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 12598,
											"end": 12687,
											"name": "tag",
											"source": 17,
											"value": "511"
										},
										{
											"begin": 12598,
											"end": 12687,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11409,
											"end": 11410,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 11405,
											"end": 11416,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 11405,
											"end": 11416,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11405,
											"end": 11416,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 11401,
											"end": 11425,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 11397,
											"end": 11426,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 11433,
											"end": 11434,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 11429,
											"end": 11440,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 11429,
											"end": 11440,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11429,
											"end": 11440,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 11384,
											"end": 11441,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 12700,
											"end": 12781,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 12700,
											"end": 12781,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 11847,
											"end": 12791,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "509"
										},
										{
											"begin": 11847,
											"end": 12791,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11877,
											"end": 12540,
											"name": "tag",
											"source": 17,
											"value": "510"
										},
										{
											"begin": 11877,
											"end": 12540,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10705,
											"end": 10706,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10698,
											"end": 10712,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10698,
											"end": 10712,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10698,
											"end": 10712,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10742,
											"end": 10746,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10729,
											"end": 10747,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10729,
											"end": 10747,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11913,
											"end": 11933,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 11913,
											"end": 11933,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 11913,
											"end": 11933,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12031,
											"end": 12267,
											"name": "tag",
											"source": 17,
											"value": "514"
										},
										{
											"begin": 12031,
											"end": 12267,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12045,
											"end": 12052,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12042,
											"end": 12043,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12039,
											"end": 12053,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 12031,
											"end": 12267,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 12031,
											"end": 12267,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "516"
										},
										{
											"begin": 12031,
											"end": 12267,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12134,
											"end": 12153,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 12134,
											"end": 12153,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 12134,
											"end": 12153,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12128,
											"end": 12154,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 12113,
											"end": 12155,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12113,
											"end": 12155,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 12226,
											"end": 12253,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 12226,
											"end": 12253,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 12226,
											"end": 12253,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12226,
											"end": 12253,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 12194,
											"end": 12195,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 12182,
											"end": 12196,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12182,
											"end": 12196,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12182,
											"end": 12196,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12182,
											"end": 12196,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12061,
											"end": 12080,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 12061,
											"end": 12080,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12031,
											"end": 12267,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "514"
										},
										{
											"begin": 12031,
											"end": 12267,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12031,
											"end": 12267,
											"name": "tag",
											"source": 17,
											"value": "516"
										},
										{
											"begin": 12031,
											"end": 12267,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12035,
											"end": 12038,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12295,
											"end": 12301,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 12286,
											"end": 12293,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12283,
											"end": 12302,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 12280,
											"end": 12481,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 12280,
											"end": 12481,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "517"
										},
										{
											"begin": 12280,
											"end": 12481,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12356,
											"end": 12375,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 12356,
											"end": 12375,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 12356,
											"end": 12375,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12350,
											"end": 12376,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12439,
											"end": 12440,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 12435,
											"end": 12449,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 12435,
											"end": 12449,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12435,
											"end": 12449,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 12451,
											"end": 12454,
											"name": "PUSH",
											"source": 17,
											"value": "F8"
										},
										{
											"begin": 12431,
											"end": 12455,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 12427,
											"end": 12464,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 12423,
											"end": 12465,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 12408,
											"end": 12466,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 12393,
											"end": 12467,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12393,
											"end": 12467,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 12280,
											"end": 12481,
											"name": "tag",
											"source": 17,
											"value": "517"
										},
										{
											"begin": 12280,
											"end": 12481,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12280,
											"end": 12481,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12280,
											"end": 12481,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12527,
											"end": 12528,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 12518,
											"end": 12524,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 12515,
											"end": 12516,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 12511,
											"end": 12525,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 12507,
											"end": 12529,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12501,
											"end": 12505,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 12494,
											"end": 12530,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 11847,
											"end": 12791,
											"name": "tag",
											"source": 17,
											"value": "509"
										},
										{
											"begin": 11847,
											"end": 12791,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11847,
											"end": 12791,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11847,
											"end": 12791,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11847,
											"end": 12791,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11847,
											"end": 12791,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11452,
											"end": 12797,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11452,
											"end": 12797,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11452,
											"end": 12797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12802,
											"end": 13302,
											"name": "tag",
											"source": 17,
											"value": "279"
										},
										{
											"begin": 12802,
											"end": 13302,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13071,
											"end": 13086,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 13071,
											"end": 13086,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13071,
											"end": 13086,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 13053,
											"end": 13087,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13053,
											"end": 13087,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13123,
											"end": 13138,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 13123,
											"end": 13138,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 13118,
											"end": 13120,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 13103,
											"end": 13121,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13103,
											"end": 13121,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13096,
											"end": 13139,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13170,
											"end": 13172,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 13155,
											"end": 13173,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13155,
											"end": 13173,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13148,
											"end": 13182,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13148,
											"end": 13182,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13148,
											"end": 13182,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13218,
											"end": 13221,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 13213,
											"end": 13215,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 13198,
											"end": 13216,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13198,
											"end": 13216,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13191,
											"end": 13222,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13191,
											"end": 13222,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13191,
											"end": 13222,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12996,
											"end": 13000,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12996,
											"end": 13000,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13239,
											"end": 13296,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "519"
										},
										{
											"begin": 13239,
											"end": 13296,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13276,
											"end": 13295,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13276,
											"end": 13295,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13268,
											"end": 13274,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 13239,
											"end": 13296,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "375"
										},
										{
											"begin": 13239,
											"end": 13296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13239,
											"end": 13296,
											"name": "tag",
											"source": 17,
											"value": "519"
										},
										{
											"begin": 13239,
											"end": 13296,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13231,
											"end": 13296,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": 12802,
											"end": 13302,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12802,
											"end": 13302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13307,
											"end": 13556,
											"name": "tag",
											"source": 17,
											"value": "282"
										},
										{
											"begin": 13307,
											"end": 13556,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13376,
											"end": 13382,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13429,
											"end": 13431,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 13417,
											"end": 13426,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13408,
											"end": 13415,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 13404,
											"end": 13427,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 13400,
											"end": 13432,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 13397,
											"end": 13449,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 13397,
											"end": 13449,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "521"
										},
										{
											"begin": 13397,
											"end": 13449,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 13445,
											"end": 13446,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13442,
											"end": 13443,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 13435,
											"end": 13447,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 13397,
											"end": 13449,
											"name": "tag",
											"source": 17,
											"value": "521"
										},
										{
											"begin": 13397,
											"end": 13449,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13477,
											"end": 13486,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13471,
											"end": 13487,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 13496,
											"end": 13526,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "300"
										},
										{
											"begin": 13520,
											"end": 13525,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13496,
											"end": 13526,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "374"
										},
										{
											"begin": 13496,
											"end": 13526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										}
									],
									".data": {
										"F4DB1D2D8C78BB068FEDC1FF59E5527A703B6F0E58A740D5AC3015D7A2341D3D": "34c73884fbbb790762253ae313e57da96c00670344647f0cb8d41ee92b9f1971"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/erc721/NftV1Collection.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"exchangeNewToken(address,uint256,string)": "fc12768b",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,string)": "d0def521",
							"mint(address[],string)": "b6c32074",
							"mint(address[],string[])": "4c7bc5cf",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setUrl(uint256,string)": "aef95098",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadataUrl\",\"type\":\"string\"}],\"name\":\"exchangeNewToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"metadataUrl\",\"type\":\"string[]\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"metadataUrl\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadataUrl\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadataUrl\",\"type\":\"string\"}],\"name\":\"setUrl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/erc721/NftV1Collection.sol\":\"NftV1Collection\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/erc721/NftV1Collection.sol\":{\"keccak256\":\"0x861a8d82bcc4f48fb5038dc64321c9ba4251314d54e4ba9108ac40949140a2ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ee1576b49f87596b7beab1f4d5e7b5cbbc6379ef756db01edcab02e16699f2e\",\"dweb:/ipfs/Qmb33ZqcWhRo59GzGB7U2vB8hP9cwq6WUf77Lf38pjWTe5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "contracts/erc721/NftV1Collection.sol:NftV1Collection",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "contracts/erc721/NftV1Collection.sol:NftV1Collection",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "contracts/erc721/NftV1Collection.sol:NftV1Collection",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "contracts/erc721/NftV1Collection.sol:NftV1Collection",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "contracts/erc721/NftV1Collection.sol:NftV1Collection",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "contracts/erc721/NftV1Collection.sol:NftV1Collection",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1488,
								"contract": "contracts/erc721/NftV1Collection.sol:NftV1Collection",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 8,
								"contract": "contracts/erc721/NftV1Collection.sol:NftV1Collection",
								"label": "_owner",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 3106,
								"contract": "contracts/erc721/NftV1Collection.sol:NftV1Collection",
								"label": "_tokenId",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1644
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1645,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1644,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1644,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1644
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1626,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1626,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1935
						]
					},
					"id": 152,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 152,
							"sourceUnit": 1936,
							"src": "132:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1935,
										"src": "140:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
					"exportedSymbols": {
						"IERC165": [
							1935
						],
						"IERC4906": [
							175
						],
						"IERC721": [
							1442
						]
					},
					"id": 176,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 153,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 155,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 152,
							"src": "133:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 154,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1935,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 157,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 180,
							"src": "172:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 156,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "180:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 159,
										"name": "IERC165",
										"nameLocations": [
											"279:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1935,
										"src": "279:7:2"
									},
									"id": 160,
									"nodeType": "InheritanceSpecifier",
									"src": "279:7:2"
								},
								{
									"baseName": {
										"id": 161,
										"name": "IERC721",
										"nameLocations": [
											"288:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1442,
										"src": "288:7:2"
									},
									"id": 162,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:2"
								}
							],
							"canonicalName": "IERC4906",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 158,
								"nodeType": "StructuredDocumentation",
								"src": "212:45:2",
								"text": "@title EIP-721 Metadata Update Extension"
							},
							"fullyImplemented": false,
							"id": 175,
							"linearizedBaseContracts": [
								175,
								1442,
								1935
							],
							"name": "IERC4906",
							"nameLocation": "267:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "302:201:2",
										"text": "@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."
									},
									"eventSelector": "f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7",
									"id": 167,
									"name": "MetadataUpdate",
									"nameLocation": "514:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "537:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "529:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:18:2"
									},
									"src": "508:39:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "553:212:2",
										"text": "@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."
									},
									"eventSelector": "6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c",
									"id": 174,
									"name": "BatchMetadataUpdate",
									"nameLocation": "776:19:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "804:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "796:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": false,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "826:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "818:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "795:42:2"
									},
									"src": "770:68:2"
								}
							],
							"scope": 176,
							"src": "257:583:2",
							"usedErrors": [],
							"usedEvents": [
								167,
								174,
								1341,
								1350,
								1359
							]
						}
					],
					"src": "107:734:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
					"exportedSymbols": {
						"IERC721": [
							1442
						]
					},
					"id": 180,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 177,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../token/ERC721/IERC721.sol",
							"id": 179,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 180,
							"sourceUnit": 1443,
							"src": "132:52:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 178,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "140:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:79:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							316
						],
						"IERC20Errors": [
							221
						],
						"IERC721Errors": [
							269
						]
					},
					"id": 317,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 181,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 182,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:4",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 221,
							"linearizedBaseContracts": [
								221
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 191,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "652:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "668:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "685:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:4"
									},
									"src": "621:80:4"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 196,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "889:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:4"
									},
									"src": "864:41:4"
								},
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 201,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1102:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:4"
									},
									"src": "1075:45:4"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:4",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 210,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1509:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1526:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1545:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:4"
									},
									"src": "1476:85:4"
								},
								{
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 215,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1773:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:4"
									},
									"src": "1746:45:4"
								},
								{
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:4",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 220,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2023:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:4"
									},
									"src": "1997:43:4"
								}
							],
							"scope": 317,
							"src": "278:1764:4",
							"usedErrors": [
								191,
								196,
								201,
								210,
								215,
								220
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 222,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:4",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 269,
							"linearizedBaseContracts": [
								269
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:4",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 227,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2465:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:4"
									},
									"src": "2440:40:4"
								},
								{
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:4",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 232,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "2652:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:4"
									},
									"src": "2623:46:4"
								},
								{
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:4",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 241,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2996:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3012:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3029:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:4"
									},
									"src": "2969:75:4"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 246,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3233:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:4"
									},
									"src": "3207:42:4"
								},
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 251,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3447:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:4"
									},
									"src": "3419:46:4"
								},
								{
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 258,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3756:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3774:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:4"
									},
									"src": "3723:68:4"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 263,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "4004:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:4"
									},
									"src": "3976:46:4"
								},
								{
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 268,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "4258:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:4"
									},
									"src": "4230:46:4"
								}
							],
							"scope": 317,
							"src": "2186:2092:4",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 270,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:4",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 316,
							"linearizedBaseContracts": [
								316
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 281,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4854:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4870:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4887:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4903:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:4"
									},
									"src": "4821:99:4"
								},
								{
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 286,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "5110:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:4"
									},
									"src": "5083:43:4"
								},
								{
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 291,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "5325:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:4"
									},
									"src": "5296:47:4"
								},
								{
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 298,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "5645:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "5663:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:4"
									},
									"src": "5610:68:4"
								},
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 303,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "5892:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:4"
									},
									"src": "5863:47:4"
								},
								{
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 308,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "6147:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:4"
									},
									"src": "6118:47:4"
								},
								{
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:4",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 315,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "6488:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "6507:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:4"
									},
									"src": "6456:73:4"
								}
							],
							"scope": 317,
							"src": "4424:2107:4",
							"usedErrors": [
								281,
								286,
								291,
								298,
								303,
								308,
								315
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1644
						],
						"ERC165": [
							1923
						],
						"ERC721": [
							1325
						],
						"IERC165": [
							1935
						],
						"IERC721": [
							1442
						],
						"IERC721Errors": [
							269
						],
						"IERC721Metadata": [
							1614
						],
						"IERC721Receiver": [
							1460
						],
						"Strings": [
							1899
						]
					},
					"id": 1326,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 318,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 320,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1443,
							"src": "133:38:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 319,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "141:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 322,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1461,
							"src": "172:54:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 321,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1460,
										"src": "180:15:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1615,
							"src": "227:65:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 323,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1614,
										"src": "235:15:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 326,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1645,
							"src": "293:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 325,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1644,
										"src": "301:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 328,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1900,
							"src": "342:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 327,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1899,
										"src": "350:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 331,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1924,
							"src": "391:69:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 329,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1935,
										"src": "399:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 330,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1923,
										"src": "408:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 333,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 317,
							"src": "461:66:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 332,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 269,
										"src": "469:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 335,
										"name": "Context",
										"nameLocations": [
											"804:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1644,
										"src": "804:7:5"
									},
									"id": 336,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:5"
								},
								{
									"baseName": {
										"id": 337,
										"name": "ERC165",
										"nameLocations": [
											"813:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1923,
										"src": "813:6:5"
									},
									"id": 338,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:5"
								},
								{
									"baseName": {
										"id": 339,
										"name": "IERC721",
										"nameLocations": [
											"821:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1442,
										"src": "821:7:5"
									},
									"id": 340,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:5"
								},
								{
									"baseName": {
										"id": 341,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1614,
										"src": "830:15:5"
									},
									"id": 342,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:5"
								},
								{
									"baseName": {
										"id": 343,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 269,
										"src": "847:13:5"
									},
									"id": 344,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:5"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 334,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:5",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1325,
							"linearizedBaseContracts": [
								1325,
								269,
								1614,
								1442,
								1923,
								1935,
								1644
							],
							"name": "ERC721",
							"nameLocation": "794:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 347,
									"libraryName": {
										"id": 345,
										"name": "Strings",
										"nameLocations": [
											"873:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1899,
										"src": "873:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:5",
									"typeName": {
										"id": 346,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 349,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "917:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 348,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 351,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "964:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 350,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 355,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "993:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 354,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:5",
										"keyType": {
											"id": 352,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 353,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 359,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "1051:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 358,
										"keyName": "owner",
										"keyNameLocation": "1067:5:5",
										"keyType": {
											"id": 356,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 357,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 363,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "1109:59:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 362,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:5",
										"keyType": {
											"id": 360,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 361,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 369,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "1175:86:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 368,
										"keyName": "owner",
										"keyNameLocation": "1191:5:5",
										"keyType": {
											"id": 364,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 367,
											"keyName": "operator",
											"keyNameLocation": "1216:8:5",
											"keyType": {
												"id": 365,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 366,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "1437:57:5",
										"statements": [
											{
												"expression": {
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 377,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "1447:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 378,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "1455:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:5"
											},
											{
												"expression": {
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 381,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "1470:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 382,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "1480:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:5"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:5",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 386,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1393:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 371,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1414:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 373,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:5"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:5"
									},
									"scope": 1325,
									"src": "1381:113:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1922,
										1934
									],
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "1669:192:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 397,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1698:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 399,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1442,
																			"src": "1718:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1442_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1442_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 398,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1442",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:5",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 403,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1754:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 405,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1614,
																			"src": "1774:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1614_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1614_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 404,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1614",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:5",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 412,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1842:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 410,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1325_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:5",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1922,
															"src": "1818:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 396,
												"id": 415,
												"nodeType": "Return",
												"src": "1679:175:5"
											}
										]
									},
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 393,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 391,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1923,
												"src": "1637:6:5"
											},
											{
												"id": 392,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1935,
												"src": "1645:7:5"
											}
										],
										"src": "1628:25:5"
									},
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "1588:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 388,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:5"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "1663:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:5"
									},
									"scope": 1325,
									"src": "1561:300:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1367
									],
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "1992:136:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 425,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "2006:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 426,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 439,
												"nodeType": "IfStatement",
												"src": "2002:87:5",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "2027:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 434,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 432,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 431,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2048:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 437,
															"nodeType": "RevertStatement",
															"src": "2041:37:5"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 440,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "2105:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 442,
													"indexExpression": {
														"id": 441,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "2115:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 424,
												"id": 443,
												"nodeType": "Return",
												"src": "2098:23:5"
											}
										]
									},
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:5",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1939:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:5"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1983:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:5"
									},
									"scope": 1325,
									"src": "1920:208:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1375
									],
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "2257:46:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 454,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "2288:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 453,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "2274:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 452,
												"id": 456,
												"nodeType": "Return",
												"src": "2267:29:5"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:5",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2202:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:5"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2248:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:5"
									},
									"scope": 1325,
									"src": "2185:118:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1599
									],
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "2425:29:5",
										"statements": [
											{
												"expression": {
													"id": 464,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 349,
													"src": "2442:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 463,
												"id": 465,
												"nodeType": "Return",
												"src": "2435:12:5"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:5",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:5"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "2410:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 461,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:5"
									},
									"scope": 1325,
									"src": "2365:89:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1605
									],
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "2580:31:5",
										"statements": [
											{
												"expression": {
													"id": 473,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 351,
													"src": "2597:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 472,
												"id": 474,
												"nodeType": "Return",
												"src": "2590:14:5"
											}
										]
									},
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:5",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:5"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "2565:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 470,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:5"
									},
									"scope": 1325,
									"src": "2518:93:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1613
									],
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "2756:176:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 485,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "2780:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 484,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "2766:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:5"
											},
											{
												"assignments": [
													489
												],
												"declarations": [
													{
														"constant": false,
														"id": 489,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 511,
														"src": "2799:21:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 488,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 492,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 490,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "2823:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:5"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 495,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 489,
																		"src": "2856:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 493,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:5",
													"trueExpression": {
														"arguments": [
															{
																"id": 503,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "2892:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 504,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 479,
																		"src": "2901:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:5",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1712,
																	"src": "2901:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 500,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:5",
																	"typeDescriptions": {}
																}
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:5",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 483,
												"id": 510,
												"nodeType": "Return",
												"src": "2843:82:5"
											}
										]
									},
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:5",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2695:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:5"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2741:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 481,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:5"
									},
									"scope": 1325,
									"src": "2677:255:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "3240:26:5",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 517,
												"id": 519,
												"nodeType": "Return",
												"src": "3250:9:5"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:5",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:5"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "3225:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 515,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:5"
									},
									"scope": 1325,
									"src": "3174:92:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1415
									],
									"body": {
										"id": 536,
										"nodeType": "Block",
										"src": "3384:52:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 530,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "3403:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 531,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3407:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 532,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1626,
																"src": "3416:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 529,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1128,
															1194
														],
														"referencedDeclaration": 1128,
														"src": "3394:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:5"
											}
										]
									},
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:5",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "3340:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "3352:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:5"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:5"
									},
									"scope": 1325,
									"src": "3323:113:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1431
									],
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "3573:78:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 546,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "3597:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 545,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "3583:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 550,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "3636:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 549,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "3623:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 544,
												"id": 552,
												"nodeType": "Return",
												"src": "3616:28:5"
											}
										]
									},
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:5",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3518:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:5"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3564:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:5"
									},
									"scope": 1325,
									"src": "3497:154:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1423
									],
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "3793:69:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 563,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1626,
																"src": "3822:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 565,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "3836:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 566,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "3846:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 562,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "3803:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:5"
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:5",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "3745:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "3763:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 558,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:5"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:5"
									},
									"scope": 1325,
									"src": "3718:144:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1441
									],
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "4022:59:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 580,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "4039:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 582,
														"indexExpression": {
															"id": 581,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "4058:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 584,
													"indexExpression": {
														"id": 583,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "4065:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 579,
												"id": 585,
												"nodeType": "Return",
												"src": "4032:42:5"
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:5",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "3954:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "3969:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:5"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "4016:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 577,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:5"
									},
									"scope": 1325,
									"src": "3928:153:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1407
									],
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "4223:498:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 597,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "4237:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 598,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 611,
												"nodeType": "IfStatement",
												"src": "4233:87:5",
												"trueBody": {
													"id": 610,
													"nodeType": "Block",
													"src": "4255:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 606,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 604,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 603,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "4276:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 609,
															"nodeType": "RevertStatement",
															"src": "4269:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 632,
														"src": "4538:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 612,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 620,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "4570:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "4574:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 617,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1626,
																"src": "4583:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "4562:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 621,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "4610:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 622,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "4627:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 631,
												"nodeType": "IfStatement",
												"src": "4606:109:5",
												"trueBody": {
													"id": 630,
													"nodeType": "Block",
													"src": "4633:82:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 625,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 590,
																		"src": "4675:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 626,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 594,
																		"src": "4681:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 627,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 613,
																		"src": "4690:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 624,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "4654:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 629,
															"nodeType": "RevertStatement",
															"src": "4647:57:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 588,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:5",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4165:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4179:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4191:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:5"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:5"
									},
									"scope": 1325,
									"src": "4143:578:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1397
									],
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "4863:56:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4890:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 645,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "4896:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 646,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "4900:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 643,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															651,
															677
														],
														"referencedDeclaration": 677,
														"src": "4873:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:5"
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:5",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4813:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4827:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4839:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:5"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:5"
									},
									"scope": 1325,
									"src": "4787:132:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1387
									],
									"body": {
										"id": 676,
										"nodeType": "Block",
										"src": "5088:105:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 664,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "5111:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 665,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "5117:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "5121:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 663,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "5098:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 670,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "5162:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 671,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "5168:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 672,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "5172:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 673,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "5181:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 669,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "5139:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:5"
											}
										]
									},
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:5",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5011:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5025:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5037:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5054:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:5"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:5"
									},
									"scope": 1325,
									"src": "4985:208:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "5782:40:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 685,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "5799:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 687,
													"indexExpression": {
														"id": 686,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "5807:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 684,
												"id": 688,
												"nodeType": "Return",
												"src": "5792:23:5"
											}
										]
									},
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:5",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "5725:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:5"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "5773:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:5"
									},
									"scope": 1325,
									"src": "5707:115:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "6017:48:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 698,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "6034:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 700,
													"indexExpression": {
														"id": 699,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "6050:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 697,
												"id": 701,
												"nodeType": "Return",
												"src": "6027:31:5"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:5",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "5960:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:5"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "6008:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:5"
									},
									"scope": 1325,
									"src": "5938:127:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "6485:163:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 715,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "6514:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 716,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 721,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 706,
																			"src": "6552:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 722,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 708,
																			"src": "6561:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 725,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 706,
																				"src": "6589:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 726,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 708,
																				"src": "6596:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 724,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "6572:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 730,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 710,
																				"src": "6621:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 729,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 703,
																			"src": "6608:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 732,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 708,
																		"src": "6633:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 735,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 714,
												"id": 737,
												"nodeType": "Return",
												"src": "6495:146:5"
											}
										]
									},
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:5",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6399:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6414:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6431:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:5"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6479:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 712,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:5"
									},
									"scope": 1325,
									"src": "6376:272:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "7179:271:5",
										"statements": [
											{
												"condition": {
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:5",
													"subExpression": {
														"arguments": [
															{
																"id": 750,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 742,
																"src": "7208:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 751,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "7215:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 752,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "7224:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 749,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "7194:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 774,
												"nodeType": "IfStatement",
												"src": "7189:255:5",
												"trueBody": {
													"id": 773,
													"nodeType": "Block",
													"src": "7234:210:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 755,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "7252:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 758,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 756,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 771,
																"nodeType": "Block",
																"src": "7350:84:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 767,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 744,
																					"src": "7402:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 768,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "7411:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 766,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 258,
																				"src": "7375:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 769,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 770,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:5"
																	}
																]
															},
															"id": 772,
															"nodeType": "IfStatement",
															"src": "7248:186:5",
															"trueBody": {
																"id": 765,
																"nodeType": "Block",
																"src": "7273:71:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 762,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "7321:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 761,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 232,
																				"src": "7298:22:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 764,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:5"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:5",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "7108:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "7123:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "7140:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:5"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:5"
									},
									"scope": 1325,
									"src": "7082:368:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "8167:78:5",
										"statements": [
											{
												"id": 790,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:5",
												"statements": [
													{
														"expression": {
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 784,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "8201:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 786,
																"indexExpression": {
																	"id": 785,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "8211:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 787,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "8223:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 789,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:5",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "8118:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "8135:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 780,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:5"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:5"
									},
									"scope": 1325,
									"src": "8092:153:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 881,
										"nodeType": "Block",
										"src": "8933:700:5",
										"statements": [
											{
												"assignments": [
													805
												],
												"declarations": [
													{
														"constant": false,
														"id": 805,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 881,
														"src": "8943:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 804,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 809,
												"initialValue": {
													"arguments": [
														{
															"id": 807,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "8967:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 806,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "8958:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 810,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "9035:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 811,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 823,
												"nodeType": "IfStatement",
												"src": "9031:86:5",
												"trueBody": {
													"id": 822,
													"nodeType": "Block",
													"src": "9055:62:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 817,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "9086:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 818,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "9092:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 819,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "9098:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 816,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "9069:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 821,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 824,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "9161:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 825,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 828,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 851,
												"nodeType": "IfStatement",
												"src": "9157:256:5",
												"trueBody": {
													"id": 850,
													"nodeType": "Block",
													"src": "9181:232:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 833,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 831,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 835,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "9298:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 836,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 830,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1128,
																		1194
																	],
																	"referencedDeclaration": 1194,
																	"src": "9277:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 842,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:5"
														},
														{
															"id": 849,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:5",
															"statements": [
																{
																	"expression": {
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 843,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 359,
																				"src": "9368:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 845,
																			"indexExpression": {
																				"id": 844,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 805,
																				"src": "9378:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 848,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:5"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 852,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "9427:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 853,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 866,
												"nodeType": "IfStatement",
												"src": "9423:107:5",
												"trueBody": {
													"id": 865,
													"nodeType": "Block",
													"src": "9445:85:5",
													"statements": [
														{
															"id": 864,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:5",
															"statements": [
																{
																	"expression": {
																		"id": 862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 858,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 359,
																				"src": "9487:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 860,
																			"indexExpression": {
																				"id": 859,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 795,
																				"src": "9497:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 863,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:5"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 867,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "9540:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 869,
														"indexExpression": {
															"id": 868,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "9548:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 870,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "9559:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 872,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 874,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "9586:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 875,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "9592:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 876,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "9596:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 873,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "9577:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 878,
												"nodeType": "EmitStatement",
												"src": "9572:32:5"
											},
											{
												"expression": {
													"id": 879,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 805,
													"src": "9622:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 803,
												"id": 880,
												"nodeType": "Return",
												"src": "9615:11:5"
											}
										]
									},
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:5",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8855:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8867:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8884:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:5"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8924:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:5"
									},
									"scope": 1325,
									"src": "8838:795:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "10008:274:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 890,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "10022:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 891,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 904,
												"nodeType": "IfStatement",
												"src": "10018:87:5",
												"trueBody": {
													"id": 903,
													"nodeType": "Block",
													"src": "10040:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 897,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 896,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "10061:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 902,
															"nodeType": "RevertStatement",
															"src": "10054:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													906
												],
												"declarations": [
													{
														"constant": false,
														"id": 906,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 931,
														"src": "10114:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 905,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 915,
												"initialValue": {
													"arguments": [
														{
															"id": 908,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "10146:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 909,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "10150:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 910,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 907,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "10138:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 916,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "10184:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 917,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 930,
												"nodeType": "IfStatement",
												"src": "10180:96:5",
												"trueBody": {
													"id": 929,
													"nodeType": "Block",
													"src": "10213:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 925,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 923,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 922,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 246,
																	"src": "10234:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 928,
															"nodeType": "RevertStatement",
															"src": "10227:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 883,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:5",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "9970:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "9982:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:5"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:5"
									},
									"scope": 1325,
									"src": "9955:327:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "10690:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 941,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "10710:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "10714:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 940,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															947,
															973
														],
														"referencedDeclaration": 973,
														"src": "10700:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:5"
											}
										]
									},
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:5",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "10652:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "10664:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:5"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:5"
									},
									"scope": 1325,
									"src": "10633:100:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 972,
										"nodeType": "Block",
										"src": "11038:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 958,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "11054:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 959,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "11058:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 957,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "11048:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 963,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 967,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "11111:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 968,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "11115:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 969,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "11124:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 962,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "11076:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:5"
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:5",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "10973:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "10985:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "11002:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 953,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:5"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:5"
									},
									"scope": 1325,
									"src": "10954:182:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "11503:186:5",
										"statements": [
											{
												"assignments": [
													980
												],
												"declarations": [
													{
														"constant": false,
														"id": 980,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1005,
														"src": "11513:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 979,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 992,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 982,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 986,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "11557:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 987,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 981,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "11537:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 993,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "11591:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 994,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1004,
												"nodeType": "IfStatement",
												"src": "11587:96:5",
												"trueBody": {
													"id": 1003,
													"nodeType": "Block",
													"src": "11620:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1000,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 976,
																		"src": "11664:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 999,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "11641:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1002,
															"nodeType": "RevertStatement",
															"src": "11634:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 974,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:5",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "11477:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:5"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:5"
									},
									"scope": 1325,
									"src": "11462:227:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "12084:389:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1016,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "12098:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1017,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1030,
												"nodeType": "IfStatement",
												"src": "12094:87:5",
												"trueBody": {
													"id": 1029,
													"nodeType": "Block",
													"src": "12116:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1025,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1024,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1023,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1022,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "12137:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1028,
															"nodeType": "RevertStatement",
															"src": "12130:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													1032
												],
												"declarations": [
													{
														"constant": false,
														"id": 1032,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1065,
														"src": "12190:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1031,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1041,
												"initialValue": {
													"arguments": [
														{
															"id": 1034,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "12222:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1035,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "12226:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1036,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1033,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "12214:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1042,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "12260:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1043,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1053,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "12362:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1054,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "12379:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1063,
													"nodeType": "IfStatement",
													"src": "12358:109:5",
													"trueBody": {
														"id": 1062,
														"nodeType": "Block",
														"src": "12385:82:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1057,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1009,
																			"src": "12427:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1058,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1013,
																			"src": "12433:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1059,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1032,
																			"src": "12442:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1056,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 241,
																		"src": "12406:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 1060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1061,
																"nodeType": "RevertStatement",
																"src": "12399:57:5"
															}
														]
													}
												},
												"id": 1064,
												"nodeType": "IfStatement",
												"src": "12256:211:5",
												"trueBody": {
													"id": 1052,
													"nodeType": "Block",
													"src": "12289:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1049,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1013,
																		"src": "12333:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1048,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "12310:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1051,
															"nodeType": "RevertStatement",
															"src": "12303:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:5",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "12032:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "12046:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "12058:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:5"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:5"
									},
									"scope": 1325,
									"src": "12013:460:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "13481:53:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1077,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "13505:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1078,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "13511:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1079,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "13515:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1076,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1084,
															1110
														],
														"referencedDeclaration": 1110,
														"src": "13491:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:5"
											}
										]
									},
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "13429:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "13443:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "13455:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:5"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:5"
									},
									"scope": 1325,
									"src": "13406:128:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "13873:102:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1097,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "13893:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1098,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "13899:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1099,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "13903:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1096,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "13883:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1101,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1103,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "13944:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1104,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "13950:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1105,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "13954:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1106,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "13963:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1102,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "13921:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:5"
											}
										]
									},
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:5",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13794:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13808:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13820:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13837:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1092,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:5"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:5"
									},
									"scope": 1325,
									"src": "13771:204:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "14488:50:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1121,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "14507:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1122,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "14511:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1123,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "14520:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1120,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1128,
															1194
														],
														"referencedDeclaration": 1194,
														"src": "14498:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1126,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:5"
											}
										]
									},
									"documentation": {
										"id": 1111,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:5",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "14436:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "14448:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "14465:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:5"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:5"
									},
									"scope": 1325,
									"src": "14418:120:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "14814:568:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1140,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "14880:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1141,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "14893:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1142,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1186,
												"nodeType": "IfStatement",
												"src": "14876:460:5",
												"trueBody": {
													"id": 1185,
													"nodeType": "Block",
													"src": "14913:423:5",
													"statements": [
														{
															"assignments": [
																1149
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1149,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1185,
																	"src": "14927:13:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1148,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:5",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1153,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1151,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1133,
																		"src": "14957:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1150,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1260,
																	"src": "14943:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1154,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1135,
																			"src": "15093:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1157,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1156,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1155,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1160,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1149,
																			"src": "15115:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1161,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1135,
																			"src": "15124:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:5",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1165,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1149,
																				"src": "15150:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1166,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1135,
																				"src": "15157:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1164,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "15133:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1175,
															"nodeType": "IfStatement",
															"src": "15089:142:5",
															"trueBody": {
																"id": 1174,
																"nodeType": "Block",
																"src": "15164:67:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1171,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1135,
																					"src": "15211:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1170,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 263,
																				"src": "15189:21:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1173,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:5"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1176,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1137,
																"src": "15249:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1184,
															"nodeType": "IfStatement",
															"src": "15245:81:5",
															"trueBody": {
																"id": 1183,
																"nodeType": "Block",
																"src": "15260:66:5",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1178,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1149,
																					"src": "15292:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1179,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1131,
																					"src": "15299:2:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1180,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1133,
																					"src": "15303:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1177,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1350,
																				"src": "15283:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1182,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:5"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1187,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "15346:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1189,
														"indexExpression": {
															"id": 1188,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "15362:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1190,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "15373:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:5"
											}
										]
									},
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:5",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14738:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14750:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14767:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14781:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1136,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:5"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:5"
									},
									"scope": 1325,
									"src": "14720:662:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "15684:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1204,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "15698:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1205,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1215,
												"nodeType": "IfStatement",
												"src": "15694:91:5",
												"trueBody": {
													"id": 1214,
													"nodeType": "Block",
													"src": "15722:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1211,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1199,
																		"src": "15765:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1210,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 268,
																	"src": "15743:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1213,
															"nodeType": "RevertStatement",
															"src": "15736:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1216,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "15794:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1219,
															"indexExpression": {
																"id": 1217,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "15813:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1220,
														"indexExpression": {
															"id": 1218,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "15820:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1221,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "15832:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1225,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "15870:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1226,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "15877:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1227,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "15887:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1224,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1359,
														"src": "15855:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1229,
												"nodeType": "EmitStatement",
												"src": "15850:46:5"
											}
										]
									},
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:5",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "15619:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "15634:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "15652:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1200,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:5"
									},
									"returnParameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:5"
									},
									"scope": 1325,
									"src": "15591:312:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "16210:169:5",
										"statements": [
											{
												"assignments": [
													1240
												],
												"declarations": [
													{
														"constant": false,
														"id": 1240,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1259,
														"src": "16220:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1239,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1244,
												"initialValue": {
													"arguments": [
														{
															"id": 1242,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "16245:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1241,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "16236:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1245,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "16267:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1246,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1256,
												"nodeType": "IfStatement",
												"src": "16263:88:5",
												"trueBody": {
													"id": 1255,
													"nodeType": "Block",
													"src": "16288:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1252,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1234,
																		"src": "16332:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1251,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "16309:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1254,
															"nodeType": "RevertStatement",
															"src": "16302:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1257,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1240,
													"src": "16367:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1238,
												"id": 1258,
												"nodeType": "Return",
												"src": "16360:12:5"
											}
										]
									},
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:5",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "16161:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:5"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "16201:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:5"
									},
									"scope": 1325,
									"src": "16138:241:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1323,
										"nodeType": "Block",
										"src": "17020:680:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1272,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "17034:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1322,
												"nodeType": "IfStatement",
												"src": "17030:664:5",
												"trueBody": {
													"id": 1321,
													"nodeType": "Block",
													"src": "17054:640:5",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1301,
																		"nodeType": "Block",
																		"src": "17168:162:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1294,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1290,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1288,
																						"src": "17190:6:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1291,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1460,
																								"src": "17200:15:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1460_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1292,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:5",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1459,
																							"src": "17200:32:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1293,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:5",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1300,
																				"nodeType": "IfStatement",
																				"src": "17186:130:5",
																				"trueBody": {
																					"id": 1299,
																					"nodeType": "Block",
																					"src": "17243:73:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1296,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1265,
																										"src": "17294:2:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1295,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 251,
																									"src": "17272:21:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1297,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1298,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1302,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1289,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1288,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1302,
																				"src": "17153:13:5",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1287,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:5"
																	},
																	"src": "17144:186:5"
																},
																{
																	"block": {
																		"id": 1318,
																		"nodeType": "Block",
																		"src": "17359:325:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1309,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1306,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1304,
																							"src": "17381:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1307,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:5",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1308,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1316,
																					"nodeType": "Block",
																					"src": "17480:190:5",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:5",
																								"nodeType": "YulBlock",
																								"src": "17566:86:5",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:5",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:5",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:5",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:5"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:5",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:5"
																													},
																													"nativeSrc": "17599:15:5",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:5"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:5",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:5"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:5",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:5"
																													},
																													"nativeSrc": "17616:13:5",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:5"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:5",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:5"
																											},
																											"nativeSrc": "17592:38:5",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:5"
																										},
																										"nativeSrc": "17592:38:5",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:5"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1304,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:5",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1304,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:5",
																									"valueSize": 1
																								}
																							],
																							"id": 1315,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:5"
																						}
																					]
																				},
																				"id": 1317,
																				"nodeType": "IfStatement",
																				"src": "17377:293:5",
																				"trueBody": {
																					"id": 1314,
																					"nodeType": "Block",
																					"src": "17401:73:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1311,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1265,
																										"src": "17452:2:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1310,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 251,
																									"src": "17430:21:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1312,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1313,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1319,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1305,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1304,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1319,
																				"src": "17338:19:5",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1303,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:5"
																	},
																	"src": "17331:353:5"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1281,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1626,
																			"src": "17109:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1283,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1263,
																		"src": "17123:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1284,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1267,
																		"src": "17129:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1285,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1269,
																		"src": "17138:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1278,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1265,
																				"src": "17088:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1277,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1460,
																			"src": "17072:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1460_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1460",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:5",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1459,
																	"src": "17072:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:5",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1320,
															"nodeType": "TryStatement",
															"src": "17068:616:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1261,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:5",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16950:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16964:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16976:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16993:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:5"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:5"
									},
									"scope": 1325,
									"src": "16918:782:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1326,
							"src": "776:16926:5",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "107:17596:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1935
						],
						"IERC721": [
							1442
						]
					},
					"id": 1443,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1327,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1329,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1443,
							"sourceUnit": 1936,
							"src": "134:62:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1328,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1935,
										"src": "142:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1331,
										"name": "IERC165",
										"nameLocations": [
											"287:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1935,
										"src": "287:7:6"
									},
									"id": 1332,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:6"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1330,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:6",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1442,
							"linearizedBaseContracts": [
								1442,
								1935
							],
							"name": "IERC721",
							"nameLocation": "276:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1333,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:6",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1341,
									"name": "Transfer",
									"nameLocation": "400:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "409:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "431:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "451:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:6"
									},
									"src": "394:82:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1342,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:6",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1350,
									"name": "Approval",
									"nameLocation": "587:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "596:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "619:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "645:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:6"
									},
									"src": "581:89:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:6",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1359,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "819:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "842:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "868:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1356,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:6"
									},
									"src": "798:85:6"
								},
								{
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:6",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "989:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:6"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "1027:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:6"
									},
									"scope": 1442,
									"src": "970:74:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1368,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:6",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "1203:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:6"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "1243:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:6"
									},
									"scope": 1442,
									"src": "1186:72:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1860:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1874:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1886:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1903:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1383,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:6"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:6"
									},
									"scope": 1442,
									"src": "1834:99:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1388,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "2675:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "2689:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "2701:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:6"
									},
									"returnParameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:6"
									},
									"scope": 1442,
									"src": "2649:78:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:6",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3492:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3506:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3518:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:6"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:6"
									},
									"scope": 1442,
									"src": "3470:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1408,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:6",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1415,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "4024:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "4036:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:6"
									},
									"returnParameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:6"
									},
									"scope": 1442,
									"src": "4007:55:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1416,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:6",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "4415:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "4433:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1419,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:6"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:6"
									},
									"scope": 1442,
									"src": "4388:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1424,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:6",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1431,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "4628:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:6"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "4668:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:6"
									},
									"scope": 1442,
									"src": "4607:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1432,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:6",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4861:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4876:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:6"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4917:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1438,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:6"
									},
									"scope": 1442,
									"src": "4835:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1443,
							"src": "266:4659:6",
							"usedErrors": [],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "108:4818:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1460
						]
					},
					"id": 1461,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1444,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1445,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:7",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1460,
							"linearizedBaseContracts": [
								1460
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:7",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "867:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "893:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "915:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "940:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:7"
									},
									"returnParameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "984:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1456,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:7"
									},
									"scope": 1460,
									"src": "832:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1461,
							"src": "295:699:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
					"exportedSymbols": {
						"ERC721": [
							1325
						],
						"ERC721URIStorage": [
							1586
						],
						"IERC165": [
							1935
						],
						"IERC4906": [
							175
						],
						"Strings": [
							1899
						]
					},
					"id": 1587,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1462,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1464,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1587,
							"sourceUnit": 1326,
							"src": "154:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1463,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1325,
										"src": "162:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../../utils/Strings.sol",
							"id": 1466,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1587,
							"sourceUnit": 1900,
							"src": "192:51:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1465,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1899,
										"src": "200:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
							"file": "../../../interfaces/IERC4906.sol",
							"id": 1468,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1587,
							"sourceUnit": 176,
							"src": "244:58:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1467,
										"name": "IERC4906",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 175,
										"src": "252:8:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "../../../interfaces/IERC165.sol",
							"id": 1470,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1587,
							"sourceUnit": 152,
							"src": "303:56:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1469,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1935,
										"src": "311:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1472,
										"name": "IERC4906",
										"nameLocations": [
											"469:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 175,
										"src": "469:8:8"
									},
									"id": 1473,
									"nodeType": "InheritanceSpecifier",
									"src": "469:8:8"
								},
								{
									"baseName": {
										"id": 1474,
										"name": "ERC721",
										"nameLocations": [
											"479:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1325,
										"src": "479:6:8"
									},
									"id": 1475,
									"nodeType": "InheritanceSpecifier",
									"src": "479:6:8"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1471,
								"nodeType": "StructuredDocumentation",
								"src": "361:69:8",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": true,
							"id": 1586,
							"linearizedBaseContracts": [
								1586,
								1325,
								269,
								1614,
								175,
								1442,
								1923,
								1935,
								1644
							],
							"name": "ERC721URIStorage",
							"nameLocation": "449:16:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1478,
									"libraryName": {
										"id": 1476,
										"name": "Strings",
										"nameLocations": [
											"498:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1899,
										"src": "498:7:8"
									},
									"nodeType": "UsingForDirective",
									"src": "492:26:8",
									"typeName": {
										"id": 1477,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "510:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1484,
									"mutability": "constant",
									"name": "ERC4906_INTERFACE_ID",
									"nameLocation": "730:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 1586,
									"src": "706:65:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1479,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "706:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30783439303634393036",
												"id": 1482,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "760:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												},
												"value": "0x49064906"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												}
											],
											"id": 1481,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "753:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 1480,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "753:6:8",
												"typeDescriptions": {}
											}
										},
										"id": 1483,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "753:18:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1488,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "860:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1586,
									"src": "817:53:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1487,
										"keyName": "tokenId",
										"keyNameLocation": "833:7:8",
										"keyType": {
											"id": 1485,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "825:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "817:34:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1486,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "844:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										417,
										1934
									],
									"body": {
										"id": 1508,
										"nodeType": "Block",
										"src": "1045:99:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1501,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1499,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "1062:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1500,
															"name": "ERC4906_INTERFACE_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1484,
															"src": "1077:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1062:35:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1504,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1491,
																"src": "1125:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1502,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1101:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1586_$",
																	"typeString": "type(contract super ERC721URIStorage)"
																}
															},
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1107:17:8",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 417,
															"src": "1101:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1505,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1101:36:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1062:75:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1498,
												"id": 1507,
												"nodeType": "Return",
												"src": "1055:82:8"
											}
										]
									},
									"documentation": {
										"id": 1489,
										"nodeType": "StructuredDocumentation",
										"src": "877:55:8",
										"text": " @dev See {IERC165-supportsInterface}"
									},
									"functionSelector": "01ffc9a7",
									"id": 1509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "946:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1495,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1493,
												"name": "ERC721",
												"nameLocations": [
													"1013:6:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1325,
												"src": "1013:6:8"
											},
											{
												"id": 1494,
												"name": "IERC165",
												"nameLocations": [
													"1021:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1935,
												"src": "1021:7:8"
											}
										],
										"src": "1004:25:8"
									},
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "971:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "964:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1490,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "964:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:20:8"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "1039:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1496,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:6:8"
									},
									"scope": 1586,
									"src": "937:207:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										512
									],
									"body": {
										"id": 1565,
										"nodeType": "Block",
										"src": "1298:505:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1519,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "1322:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1518,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "1308:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1308:22:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1521,
												"nodeType": "ExpressionStatement",
												"src": "1308:22:8"
											},
											{
												"assignments": [
													1523
												],
												"declarations": [
													{
														"constant": false,
														"id": 1523,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "1355:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1565,
														"src": "1341:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1522,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1341:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1527,
												"initialValue": {
													"baseExpression": {
														"id": 1524,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1488,
														"src": "1367:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1526,
													"indexExpression": {
														"id": 1525,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1512,
														"src": "1378:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1367:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1341:45:8"
											},
											{
												"assignments": [
													1529
												],
												"declarations": [
													{
														"constant": false,
														"id": 1529,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "1410:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1565,
														"src": "1396:18:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1528,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1396:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1532,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1530,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "1417:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1417:10:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1396:31:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1535,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1529,
																	"src": "1506:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1534,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1500:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1533,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1500:5:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1500:11:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1512:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1500:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1522:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1500:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1543,
												"nodeType": "IfStatement",
												"src": "1496:70:8",
												"trueBody": {
													"id": 1542,
													"nodeType": "Block",
													"src": "1525:41:8",
													"statements": [
														{
															"expression": {
																"id": 1540,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1523,
																"src": "1546:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1517,
															"id": 1541,
															"nodeType": "Return",
															"src": "1539:16:8"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1546,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1523,
																	"src": "1671:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1665:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1544,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1665:5:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1665:16:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1682:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1665:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1549,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1691:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1665:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1559,
												"nodeType": "IfStatement",
												"src": "1661:95:8",
												"trueBody": {
													"id": 1558,
													"nodeType": "Block",
													"src": "1694:62:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1554,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1529,
																		"src": "1729:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1555,
																		"name": "_tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1523,
																		"src": "1735:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1715:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 1551,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "1715:6:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1722:6:8",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "1715:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 1556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1715:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1517,
															"id": 1557,
															"nodeType": "Return",
															"src": "1708:37:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1562,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "1788:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1560,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1773:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1586_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1779:8:8",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 512,
														"src": "1773:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1773:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1517,
												"id": 1564,
												"nodeType": "Return",
												"src": "1766:30:8"
											}
										]
									},
									"documentation": {
										"id": 1510,
										"nodeType": "StructuredDocumentation",
										"src": "1150:55:8",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1219:8:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1514,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1265:8:8"
									},
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1236:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "1228:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:17:8"
									},
									"returnParameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "1283:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1515,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1283:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:15:8"
									},
									"scope": 1586,
									"src": "1210:593:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1584,
										"nodeType": "Block",
										"src": "2003:86:8",
										"statements": [
											{
												"expression": {
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1574,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1488,
															"src": "2013:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1576,
														"indexExpression": {
															"id": 1575,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "2024:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2013:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1577,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1571,
														"src": "2035:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2013:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1579,
												"nodeType": "ExpressionStatement",
												"src": "2013:31:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1581,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "2074:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1580,
														"name": "MetadataUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "2059:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2059:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1583,
												"nodeType": "EmitStatement",
												"src": "2054:28:8"
											}
										]
									},
									"documentation": {
										"id": 1567,
										"nodeType": "StructuredDocumentation",
										"src": "1809:108:8",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."
									},
									"id": 1585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "1931:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1952:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "1944:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1944:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1975:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "1961:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1570,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1961:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1943:42:8"
									},
									"returnParameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2003:0:8"
									},
									"scope": 1586,
									"src": "1922:167:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1587,
							"src": "431:1660:8",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								167,
								174,
								1341,
								1350,
								1359
							]
						}
					],
					"src": "128:1964:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1442
						],
						"IERC721Metadata": [
							1614
						]
					},
					"id": 1615,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1588,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1590,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1615,
							"sourceUnit": 1443,
							"src": "153:39:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1589,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "161:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1592,
										"name": "IERC721",
										"nameLocations": [
											"357:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1442,
										"src": "357:7:9"
									},
									"id": 1593,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:9"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1591,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:9",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1614,
							"linearizedBaseContracts": [
								1614,
								1442,
								1935
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1594,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:9",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1599,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:9"
									},
									"returnParameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "473:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1596,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:9"
									},
									"scope": 1614,
									"src": "434:54:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1600,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:9",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1605,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:9"
									},
									"returnParameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "600:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1602,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:9"
									},
									"scope": 1614,
									"src": "559:56:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1606,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:9",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1613,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "734:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:9"
									},
									"returnParameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "774:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1610,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:9"
									},
									"scope": 1614,
									"src": "716:73:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1615,
							"src": "328:463:9",
							"usedErrors": [],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "127:665:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1644
						]
					},
					"id": 1645,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1616,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:10"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1617,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:10",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1644,
							"linearizedBaseContracts": [
								1644
							],
							"name": "Context",
							"nameLocation": "642:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1625,
										"nodeType": "Block",
										"src": "718:34:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1622,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1621,
												"id": 1624,
												"nodeType": "Return",
												"src": "728:17:10"
											}
										]
									},
									"id": 1626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:10"
									},
									"returnParameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "709:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:10"
									},
									"scope": 1644,
									"src": "656:96:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1634,
										"nodeType": "Block",
										"src": "825:32:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1631,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:10",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1630,
												"id": 1633,
												"nodeType": "Return",
												"src": "835:15:10"
											}
										]
									},
									"id": 1635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:10"
									},
									"returnParameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "809:14:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1628,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:10"
									},
									"scope": 1644,
									"src": "758:99:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1642,
										"nodeType": "Block",
										"src": "935:25:10",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1639,
												"id": 1641,
												"nodeType": "Return",
												"src": "945:8:10"
											}
										]
									},
									"id": 1643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:10"
									},
									"returnParameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "926:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:10"
									},
									"scope": 1644,
									"src": "863:97:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1645,
							"src": "624:338:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2989
						],
						"SignedMath": [
							3094
						],
						"Strings": [
							1899
						]
					},
					"id": 1900,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1646,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1648,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1900,
							"sourceUnit": 2990,
							"src": "127:37:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1647,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2989,
										"src": "135:4:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1650,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1900,
							"sourceUnit": 3095,
							"src": "165:49:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1649,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3094,
										"src": "173:10:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1651,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:11",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1899,
							"linearizedBaseContracts": [
								1899
							],
							"name": "Strings",
							"nameLocation": "259:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1654,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:11",
									"nodeType": "VariableDeclaration",
									"scope": 1899,
									"src": "273:56:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1652,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1653,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:11",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1657,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 1899,
									"src": "335:42:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1655,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1656,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1658,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:11",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1664,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "505:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "520:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:11"
									},
									"src": "470:66:11"
								},
								{
									"body": {
										"id": 1711,
										"nodeType": "Block",
										"src": "708:627:11",
										"statements": [
											{
												"id": 1710,
												"nodeType": "UncheckedBlock",
												"src": "718:611:11",
												"statements": [
													{
														"assignments": [
															1673
														],
														"declarations": [
															{
																"constant": false,
																"id": 1673,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 1710,
																"src": "742:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1672,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1680,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1676,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1667,
																		"src": "770:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1674,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2989,
																		"src": "759:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2989_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:11",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2809,
																	"src": "759:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:11"
													},
													{
														"assignments": [
															1682
														],
														"declarations": [
															{
																"constant": false,
																"id": 1682,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 1710,
																"src": "794:20:11",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1681,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1687,
														"initialValue": {
															"arguments": [
																{
																	"id": 1685,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1673,
																	"src": "828:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1683,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:11"
													},
													{
														"assignments": [
															1689
														],
														"declarations": [
															{
																"constant": false,
																"id": 1689,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:11",
																"nodeType": "VariableDeclaration",
																"scope": 1710,
																"src": "849:11:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1688,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1690,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:11"
													},
													{
														"AST": {
															"nativeSrc": "930:67:11",
															"nodeType": "YulBlock",
															"src": "930:67:11",
															"statements": [
																{
																	"nativeSrc": "948:35:11",
																	"nodeType": "YulAssignment",
																	"src": "948:35:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:11",
																						"nodeType": "YulLiteral",
																						"src": "971:2:11",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:11"
																				},
																				"nativeSrc": "967:15:11",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:11"
																		},
																		"nativeSrc": "955:28:11",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:11"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:11"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1682,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:11",
																"valueSize": 1
															},
															{
																"declaration": 1673,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:11",
																"valueSize": 1
															},
															{
																"declaration": 1689,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:11",
																"valueSize": 1
															}
														],
														"id": 1691,
														"nodeType": "InlineAssembly",
														"src": "921:76:11"
													},
													{
														"body": {
															"id": 1706,
															"nodeType": "Block",
															"src": "1023:269:11",
															"statements": [
																{
																	"expression": {
																		"id": 1694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:11",
																		"subExpression": {
																			"id": 1693,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1689,
																			"src": "1041:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1695,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:11"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:11",
																		"nodeType": "YulBlock",
																		"src": "1124:86:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:11",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:11"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:11",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:11",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:11"
																									},
																									"nativeSrc": "1164:14:11",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:11"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:11",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:11"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:11",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:11"
																							},
																							"nativeSrc": "1159:32:11",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:11"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:11",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:11"
																					},
																					"nativeSrc": "1146:46:11",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:11"
																				},
																				"nativeSrc": "1146:46:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:11"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1654,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:11",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1689,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:11",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1667,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:11",
																			"valueSize": 1
																		}
																	],
																	"id": 1696,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:11"
																},
																{
																	"expression": {
																		"id": 1699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1697,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1667,
																			"src": "1227:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1700,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:11"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1701,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1667,
																			"src": "1260:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1705,
																	"nodeType": "IfStatement",
																	"src": "1256:21:11",
																	"trueBody": {
																		"id": 1704,
																		"nodeType": "Break",
																		"src": "1272:5:11"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1707,
														"nodeType": "WhileStatement",
														"src": "1010:282:11"
													},
													{
														"expression": {
															"id": 1708,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1682,
															"src": "1312:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1671,
														"id": 1709,
														"nodeType": "Return",
														"src": "1305:13:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1665,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:11",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "655:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:11"
									},
									"returnParameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "693:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1669,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:11"
									},
									"scope": 1899,
									"src": "637:698:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1737,
										"nodeType": "Block",
										"src": "1511:92:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1723,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1715,
																	"src": "1542:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1727,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:11",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1732,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1715,
																			"src": "1588:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1730,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3094,
																			"src": "1573:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3094_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:11",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3093,
																		"src": "1573:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1729,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1712,
																"src": "1564:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1720,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 1722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:11",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1719,
												"id": 1736,
												"nodeType": "Return",
												"src": "1521:75:11"
											}
										]
									},
									"documentation": {
										"id": 1713,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:11",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "1459:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1714,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:11"
									},
									"returnParameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "1496:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1717,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:11"
									},
									"scope": 1899,
									"src": "1435:168:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1757,
										"nodeType": "Block",
										"src": "1782:100:11",
										"statements": [
											{
												"id": 1756,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:11",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1747,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1741,
																	"src": "1835:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1750,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1741,
																				"src": "1854:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1748,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2989,
																				"src": "1842:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2989_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:11",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2931,
																			"src": "1842:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1746,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1758,
																	1841,
																	1861
																],
																"referencedDeclaration": 1841,
																"src": "1823:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1745,
														"id": 1755,
														"nodeType": "Return",
														"src": "1816:49:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1739,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:11",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "1729:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:11"
									},
									"returnParameters": {
										"id": 1745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "1767:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1743,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:11"
									},
									"scope": 1899,
									"src": "1708:174:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1840,
										"nodeType": "Block",
										"src": "2095:435:11",
										"statements": [
											{
												"assignments": [
													1769
												],
												"declarations": [
													{
														"constant": false,
														"id": 1769,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1840,
														"src": "2105:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1768,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1771,
												"initialValue": {
													"id": 1770,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1761,
													"src": "2126:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:11"
											},
											{
												"assignments": [
													1773
												],
												"declarations": [
													{
														"constant": false,
														"id": 1773,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1840,
														"src": "2141:19:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1772,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1782,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1777,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1763,
																	"src": "2177:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1779,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1775,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1774,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:11"
											},
											{
												"expression": {
													"id": 1787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1783,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1773,
															"src": "2198:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1785,
														"indexExpression": {
															"hexValue": "30",
															"id": 1784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1786,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1788,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:11"
											},
											{
												"expression": {
													"id": 1793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1789,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1773,
															"src": "2223:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1791,
														"indexExpression": {
															"hexValue": "31",
															"id": 1790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1792,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1794,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:11"
											},
											{
												"body": {
													"id": 1823,
													"nodeType": "Block",
													"src": "2293:95:11",
													"statements": [
														{
															"expression": {
																"id": 1817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1809,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1773,
																		"src": "2307:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1811,
																	"indexExpression": {
																		"id": 1810,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1796,
																		"src": "2314:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1812,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1654,
																		"src": "2319:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1816,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1813,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1769,
																			"src": "2330:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1814,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1818,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:11"
														},
														{
															"expression": {
																"id": 1821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1819,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1769,
																	"src": "2361:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1822,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:11"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1803,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1796,
														"src": "2281:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1804,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1824,
												"initializationExpression": {
													"assignments": [
														1796
													],
													"declarations": [
														{
															"constant": false,
															"id": 1796,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 1824,
															"src": "2253:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1795,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1802,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1801,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1797,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1798,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1763,
																"src": "2269:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:11"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1807,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:11",
														"subExpression": {
															"id": 1806,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1796,
															"src": "2290:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1808,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:11"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1825,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1769,
														"src": "2401:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1826,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1834,
												"nodeType": "IfStatement",
												"src": "2397:96:11",
												"trueBody": {
													"id": 1833,
													"nodeType": "Block",
													"src": "2418:75:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1829,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1761,
																		"src": "2468:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1830,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1763,
																		"src": "2475:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1828,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1664,
																	"src": "2439:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1832,
															"nodeType": "RevertStatement",
															"src": "2432:50:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1837,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1773,
															"src": "2516:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1836,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1835,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 1838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1767,
												"id": 1839,
												"nodeType": "Return",
												"src": "2502:21:11"
											}
										]
									},
									"documentation": {
										"id": 1759,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:11",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "2026:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "2041:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:11"
									},
									"returnParameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "2080:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1765,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:11"
									},
									"scope": 1899,
									"src": "2005:525:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1860,
										"nodeType": "Block",
										"src": "2762:75:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1854,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1844,
																			"src": "2807:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1853,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1852,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1851,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1850,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1857,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1657,
															"src": "2815:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1849,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1758,
															1841,
															1861
														],
														"referencedDeclaration": 1841,
														"src": "2779:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1848,
												"id": 1859,
												"nodeType": "Return",
												"src": "2772:58:11"
											}
										]
									},
									"documentation": {
										"id": 1842,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:11",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "2710:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:11"
									},
									"returnParameters": {
										"id": 1848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "2747:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1846,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:11"
									},
									"scope": 1899,
									"src": "2689:148:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1897,
										"nodeType": "Block",
										"src": "2992:104:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1881,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1873,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1864,
																		"src": "3015:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1871,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:11",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1878,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1866,
																		"src": "3034:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1876,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:11",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1894,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1885,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1864,
																			"src": "3063:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1883,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1882,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1891,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1866,
																			"src": "3086:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1889,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1888,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1870,
												"id": 1896,
												"nodeType": "Return",
												"src": "3002:87:11"
											}
										]
									},
									"documentation": {
										"id": 1862,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:11",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "2929:15:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1863,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "2946:15:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1865,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:11"
									},
									"returnParameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "2986:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1868,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:11"
									},
									"scope": 1899,
									"src": "2914:182:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1900,
							"src": "251:2847:11",
							"usedErrors": [
								1664
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1923
						],
						"IERC165": [
							1935
						]
					},
					"id": 1924,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1901,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1903,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1924,
							"sourceUnit": 1936,
							"src": "140:38:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1902,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1935,
										"src": "148:7:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1905,
										"name": "IERC165",
										"nameLocations": [
											"687:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1935,
										"src": "687:7:12"
									},
									"id": 1906,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:12"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1904,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:12",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1923,
							"linearizedBaseContracts": [
								1923,
								1935
							],
							"name": "ERC165",
							"nameLocation": "677:6:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1934
									],
									"body": {
										"id": 1921,
										"nodeType": "Block",
										"src": "844:64:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1914,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1909,
														"src": "861:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1916,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1935,
																	"src": "881:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1935_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1935_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1915,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1935",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1918,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:12",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1913,
												"id": 1920,
												"nodeType": "Return",
												"src": "854:47:12"
											}
										]
									},
									"documentation": {
										"id": 1907,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:12",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "789:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1908,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:12"
									},
									"returnParameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1912,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "838:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1911,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:12"
									},
									"scope": 1923,
									"src": "762:146:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1924,
							"src": "659:251:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1935
						]
					},
					"id": 1936,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1925,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1926,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:13",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1935,
							"linearizedBaseContracts": [
								1935
							],
							"name": "IERC165",
							"nameLocation": "431:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1927,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:13",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1934,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "817:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1928,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:13"
									},
									"returnParameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "860:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1931,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:13"
									},
									"scope": 1935,
									"src": "790:76:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1936,
							"src": "421:447:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2989
						]
					},
					"id": 2990,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1937,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1938,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:14",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2989,
							"linearizedBaseContracts": [
								2989
							],
							"name": "Math",
							"nameLocation": "211:4:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1939,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:14",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1941,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:14"
									},
									"src": "277:29:14"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1946,
									"members": [
										{
											"id": 1942,
											"name": "Floor",
											"nameLocation": "336:5:14",
											"nodeType": "EnumValue",
											"src": "336:5:14"
										},
										{
											"id": 1943,
											"name": "Ceil",
											"nameLocation": "379:4:14",
											"nodeType": "EnumValue",
											"src": "379:4:14"
										},
										{
											"id": 1944,
											"name": "Trunc",
											"nameLocation": "421:5:14",
											"nodeType": "EnumValue",
											"src": "421:5:14"
										},
										{
											"id": 1945,
											"name": "Expand",
											"nameLocation": "451:6:14",
											"nodeType": "EnumValue",
											"src": "451:6:14"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:14",
									"nodeType": "EnumDefinition",
									"src": "312:169:14"
								},
								{
									"body": {
										"id": 1977,
										"nodeType": "Block",
										"src": "661:140:14",
										"statements": [
											{
												"id": 1976,
												"nodeType": "UncheckedBlock",
												"src": "671:124:14",
												"statements": [
													{
														"assignments": [
															1959
														],
														"declarations": [
															{
																"constant": false,
																"id": 1959,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:14",
																"nodeType": "VariableDeclaration",
																"scope": 1976,
																"src": "695:9:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1958,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1963,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1960,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1949,
																"src": "707:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1961,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "711:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:14"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1964,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1959,
																"src": "730:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1965,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1949,
																"src": "734:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1971,
														"nodeType": "IfStatement",
														"src": "726:28:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1968,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1969,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1957,
															"id": 1970,
															"nodeType": "Return",
															"src": "737:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1973,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1959,
																	"src": "782:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1974,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1957,
														"id": 1975,
														"nodeType": "Return",
														"src": "768:16:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1947,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:14",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "601:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "612:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:14"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "646:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1953,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "652:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:14"
									},
									"scope": 2989,
									"src": "585:216:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2005,
										"nodeType": "Block",
										"src": "984:113:14",
										"statements": [
											{
												"id": 2004,
												"nodeType": "UncheckedBlock",
												"src": "994:97:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1990,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1983,
																"src": "1022:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1991,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1981,
																"src": "1026:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1997,
														"nodeType": "IfStatement",
														"src": "1018:28:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1995,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1989,
															"id": 1996,
															"nodeType": "Return",
															"src": "1029:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1999,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1981,
																		"src": "1074:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2000,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1983,
																		"src": "1078:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2002,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1989,
														"id": 2003,
														"nodeType": "Return",
														"src": "1060:20:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1979,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:14",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1981,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "924:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "935:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:14"
									},
									"returnParameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1986,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "969:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1985,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "975:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:14"
									},
									"scope": 2989,
									"src": "908:189:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2047,
										"nodeType": "Block",
										"src": "1283:417:14",
										"statements": [
											{
												"id": 2046,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2018,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2009,
																"src": "1551:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2019,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2025,
														"nodeType": "IfStatement",
														"src": "1547:28:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2021,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2023,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2017,
															"id": 2024,
															"nodeType": "Return",
															"src": "1559:16:14"
														}
													},
													{
														"assignments": [
															2027
														],
														"declarations": [
															{
																"constant": false,
																"id": 2027,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:14",
																"nodeType": "VariableDeclaration",
																"scope": 2046,
																"src": "1589:9:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2026,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2031,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2028,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2009,
																"src": "1601:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2029,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2011,
																"src": "1605:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:14"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2032,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2027,
																	"src": "1624:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2033,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2009,
																	"src": "1628:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2035,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2011,
																"src": "1633:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2041,
														"nodeType": "IfStatement",
														"src": "1620:33:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2039,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2017,
															"id": 2040,
															"nodeType": "Return",
															"src": "1636:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2043,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2027,
																	"src": "1681:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2044,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2017,
														"id": 2045,
														"nodeType": "Return",
														"src": "1667:16:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2007,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:14",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2048,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "1223:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "1234:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:14"
									},
									"returnParameters": {
										"id": 2017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2014,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "1268:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2013,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "1274:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:14"
									},
									"scope": 2989,
									"src": "1207:493:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2075,
										"nodeType": "Block",
										"src": "1887:114:14",
										"statements": [
											{
												"id": 2074,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2060,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2053,
																"src": "1925:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2061,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2067,
														"nodeType": "IfStatement",
														"src": "1921:29:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2063,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2065,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2059,
															"id": 2066,
															"nodeType": "Return",
															"src": "1933:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2068,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2069,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2051,
																		"src": "1978:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2070,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2053,
																		"src": "1982:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2072,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2059,
														"id": 2073,
														"nodeType": "Return",
														"src": "1964:20:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2049,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:14",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2051,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "1827:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2053,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "1838:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:14"
									},
									"returnParameters": {
										"id": 2059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "1872:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2055,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "1878:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:14"
									},
									"scope": 2989,
									"src": "1811:190:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2103,
										"nodeType": "Block",
										"src": "2198:114:14",
										"statements": [
											{
												"id": 2102,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2088,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2081,
																"src": "2236:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2089,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2095,
														"nodeType": "IfStatement",
														"src": "2232:29:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2093,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2087,
															"id": 2094,
															"nodeType": "Return",
															"src": "2244:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2097,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2079,
																		"src": "2289:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2098,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2081,
																		"src": "2293:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2087,
														"id": 2101,
														"nodeType": "Return",
														"src": "2275:20:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2077,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:14",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2104,
												"src": "2138:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2104,
												"src": "2149:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:14"
									},
									"returnParameters": {
										"id": 2087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2084,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2104,
												"src": "2183:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2083,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2104,
												"src": "2189:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:14"
									},
									"scope": 2989,
									"src": "2122:190:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2121,
										"nodeType": "Block",
										"src": "2449:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2114,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2107,
															"src": "2466:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2115,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2109,
															"src": "2470:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2118,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2109,
														"src": "2478:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:14",
													"trueExpression": {
														"id": 2117,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2107,
														"src": "2474:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2113,
												"id": 2120,
												"nodeType": "Return",
												"src": "2459:20:14"
											}
										]
									},
									"documentation": {
										"id": 2105,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:14",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "2395:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "2406:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:14"
									},
									"returnParameters": {
										"id": 2113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "2440:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:14"
									},
									"scope": 2989,
									"src": "2382:104:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2139,
										"nodeType": "Block",
										"src": "2624:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2132,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2125,
															"src": "2641:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2133,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2127,
															"src": "2645:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2136,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2127,
														"src": "2653:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:14",
													"trueExpression": {
														"id": 2135,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2125,
														"src": "2649:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2131,
												"id": 2138,
												"nodeType": "Return",
												"src": "2634:20:14"
											}
										]
									},
									"documentation": {
										"id": 2123,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:14",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2140,
												"src": "2570:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2140,
												"src": "2581:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:14"
									},
									"returnParameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2140,
												"src": "2615:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:14"
									},
									"scope": 2989,
									"src": "2557:104:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2162,
										"nodeType": "Block",
										"src": "2845:82:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2150,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2143,
																	"src": "2900:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2151,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2145,
																	"src": "2904:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2153,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2154,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2143,
																		"src": "2910:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2155,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2145,
																		"src": "2914:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2157,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2149,
												"id": 2161,
												"nodeType": "Return",
												"src": "2892:28:14"
											}
										]
									},
									"documentation": {
										"id": 2141,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:14",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2143,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "2791:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "2802:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:14"
									},
									"returnParameters": {
										"id": 2149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "2836:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:14"
									},
									"scope": 2989,
									"src": "2774:153:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2196,
										"nodeType": "Block",
										"src": "3219:260:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2173,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2168,
														"src": "3233:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2174,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2181,
												"nodeType": "IfStatement",
												"src": "3229:127:14",
												"trueBody": {
													"id": 2180,
													"nodeType": "Block",
													"src": "3241:115:14",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2176,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2166,
																	"src": "3340:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2177,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2168,
																	"src": "3344:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2172,
															"id": 2179,
															"nodeType": "Return",
															"src": "3333:12:14"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2182,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2166,
															"src": "3444:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2186,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2166,
																			"src": "3458:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2187,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2189,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2190,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2168,
																"src": "3467:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:14",
													"trueExpression": {
														"hexValue": "30",
														"id": 2185,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2172,
												"id": 2195,
												"nodeType": "Return",
												"src": "3437:35:14"
											}
										]
									},
									"documentation": {
										"id": 2164,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:14",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "3165:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "3176:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:14"
									},
									"returnParameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "3210:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:14"
									},
									"scope": 2989,
									"src": "3148:331:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2322,
										"nodeType": "Block",
										"src": "3901:4018:14",
										"statements": [
											{
												"id": 2321,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:14",
												"statements": [
													{
														"assignments": [
															2210
														],
														"declarations": [
															{
																"constant": false,
																"id": 2210,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:14",
																"nodeType": "VariableDeclaration",
																"scope": 2321,
																"src": "4232:13:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2209,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2214,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2211,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2200,
																"src": "4248:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2212,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2202,
																"src": "4252:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:14"
													},
													{
														"assignments": [
															2216
														],
														"declarations": [
															{
																"constant": false,
																"id": 2216,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:14",
																"nodeType": "VariableDeclaration",
																"scope": 2321,
																"src": "4312:13:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2215,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2217,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:14"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:14",
															"nodeType": "YulBlock",
															"src": "4392:122:14",
															"statements": [
																{
																	"nativeSrc": "4410:30:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:14"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:14",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:14"
																				},
																				"nativeSrc": "4433:6:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:14"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:14"
																		},
																		"nativeSrc": "4420:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:14"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:14",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:14",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:14"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:14"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:14"
																				},
																				"nativeSrc": "4470:14:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:14"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:14"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:14"
																				},
																				"nativeSrc": "4486:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:14"
																		},
																		"nativeSrc": "4466:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:14"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2210,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2210,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2216,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2200,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:14",
																"valueSize": 1
															},
															{
																"declaration": 2202,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:14",
																"valueSize": 1
															}
														],
														"id": 2218,
														"nodeType": "InlineAssembly",
														"src": "4383:131:14"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2219,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2216,
																"src": "4595:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2220,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2227,
														"nodeType": "IfStatement",
														"src": "4591:368:14",
														"trueBody": {
															"id": 2226,
															"nodeType": "Block",
															"src": "4607:352:14",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2222,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2210,
																			"src": "4925:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2223,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2204,
																			"src": "4933:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2208,
																	"id": 2225,
																	"nodeType": "Return",
																	"src": "4918:26:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2228,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2204,
																"src": "5065:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2229,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2216,
																"src": "5080:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2235,
														"nodeType": "IfStatement",
														"src": "5061:88:14",
														"trueBody": {
															"id": 2234,
															"nodeType": "Block",
															"src": "5087:62:14",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2231,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1941,
																			"src": "5112:20:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2233,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:14"
																}
															]
														}
													},
													{
														"assignments": [
															2237
														],
														"declarations": [
															{
																"constant": false,
																"id": 2237,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:14",
																"nodeType": "VariableDeclaration",
																"scope": 2321,
																"src": "5404:17:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2236,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2238,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:14"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:14",
															"nodeType": "YulBlock",
															"src": "5444:291:14",
															"statements": [
																{
																	"nativeSrc": "5513:38:14",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:14"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:14"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:14",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:14"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:14"
																		},
																		"nativeSrc": "5526:25:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:14"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:14",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:14"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:14",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:14"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:14"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:14"
																				},
																				"nativeSrc": "5653:20:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:14"
																		},
																		"nativeSrc": "5642:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:14"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:14",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:14"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:14"
																		},
																		"nativeSrc": "5700:21:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:14"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2204,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:14",
																"valueSize": 1
															},
															{
																"declaration": 2210,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2210,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2210,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2216,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2216,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2237,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:14",
																"valueSize": 1
															},
															{
																"declaration": 2237,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:14",
																"valueSize": 1
															},
															{
																"declaration": 2237,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:14",
																"valueSize": 1
															},
															{
																"declaration": 2200,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:14",
																"valueSize": 1
															},
															{
																"declaration": 2202,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:14",
																"valueSize": 1
															}
														],
														"id": 2239,
														"nodeType": "InlineAssembly",
														"src": "5435:300:14"
													},
													{
														"assignments": [
															2241
														],
														"declarations": [
															{
																"constant": false,
																"id": 2241,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:14",
																"nodeType": "VariableDeclaration",
																"scope": 2321,
																"src": "5939:12:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2240,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2248,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2242,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2204,
																"src": "5954:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2243,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2244,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2204,
																			"src": "5973:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2246,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:14"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:14",
															"nodeType": "YulBlock",
															"src": "6008:362:14",
															"statements": [
																{
																	"nativeSrc": "6073:37:14",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:14",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:14"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:14"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:14"
																		},
																		"nativeSrc": "6088:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:14"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:14",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:14"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:14",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:14"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:14"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:14"
																		},
																		"nativeSrc": "6186:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:14"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:14",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:14",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:14",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:14",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:14"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:14"
																						},
																						"nativeSrc": "6333:12:14",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:14"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:14"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:14"
																				},
																				"nativeSrc": "6329:23:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:14",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:14"
																		},
																		"nativeSrc": "6325:31:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:14"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:14",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:14"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2204,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:14",
																"valueSize": 1
															},
															{
																"declaration": 2204,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:14",
																"valueSize": 1
															},
															{
																"declaration": 2210,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2210,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2241,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:14",
																"valueSize": 1
															},
															{
																"declaration": 2241,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:14",
																"valueSize": 1
															},
															{
																"declaration": 2241,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:14",
																"valueSize": 1
															},
															{
																"declaration": 2241,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:14",
																"valueSize": 1
															},
															{
																"declaration": 2241,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:14",
																"valueSize": 1
															}
														],
														"id": 2249,
														"nodeType": "InlineAssembly",
														"src": "5999:371:14"
													},
													{
														"expression": {
															"id": 2254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2250,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2210,
																"src": "6436:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2251,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2216,
																	"src": "6445:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2252,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2241,
																	"src": "6453:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2255,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:14"
													},
													{
														"assignments": [
															2257
														],
														"declarations": [
															{
																"constant": false,
																"id": 2257,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:14",
																"nodeType": "VariableDeclaration",
																"scope": 2321,
																"src": "6775:15:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2256,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2264,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2259,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2204,
																			"src": "6798:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2261,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2262,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:14"
													},
													{
														"expression": {
															"id": 2271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2265,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2257,
																"src": "7031:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2267,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2204,
																		"src": "7046:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2268,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2257,
																		"src": "7060:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2272,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:14"
													},
													{
														"expression": {
															"id": 2279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2273,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2257,
																"src": "7100:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2275,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2204,
																		"src": "7115:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2276,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2257,
																		"src": "7129:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2280,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:14"
													},
													{
														"expression": {
															"id": 2287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2281,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2257,
																"src": "7170:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2283,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2204,
																		"src": "7185:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2284,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2257,
																		"src": "7199:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2288,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:14"
													},
													{
														"expression": {
															"id": 2295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2289,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2257,
																"src": "7240:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2291,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2204,
																		"src": "7255:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2292,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2257,
																		"src": "7269:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2296,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:14"
													},
													{
														"expression": {
															"id": 2303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2297,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2257,
																"src": "7310:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2299,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2204,
																		"src": "7325:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2300,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2257,
																		"src": "7339:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2304,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:14"
													},
													{
														"expression": {
															"id": 2311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2305,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2257,
																"src": "7381:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2307,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2204,
																		"src": "7396:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2308,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2257,
																		"src": "7410:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2312,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:14"
													},
													{
														"expression": {
															"id": 2317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2313,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2207,
																"src": "7851:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2314,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "7860:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2315,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2257,
																	"src": "7868:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2318,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:14"
													},
													{
														"expression": {
															"id": 2319,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2207,
															"src": "7896:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2208,
														"id": 2320,
														"nodeType": "Return",
														"src": "7889:13:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2198,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:14",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "3819:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "3830:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "3841:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:14"
									},
									"returnParameters": {
										"id": 2208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2207,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "3885:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:14"
									},
									"scope": 2989,
									"src": "3803:4116:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2365,
										"nodeType": "Block",
										"src": "8161:192:14",
										"statements": [
											{
												"assignments": [
													2339
												],
												"declarations": [
													{
														"constant": false,
														"id": 2339,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2365,
														"src": "8171:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2338,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2345,
												"initialValue": {
													"arguments": [
														{
															"id": 2341,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2326,
															"src": "8195:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2342,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2328,
															"src": "8198:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2343,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2330,
															"src": "8201:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2340,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2323,
															2366
														],
														"referencedDeclaration": 2323,
														"src": "8188:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2347,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2333,
																"src": "8244:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1946",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1946",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2346,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2988,
															"src": "8227:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1946_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2355,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2350,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "8264:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2351,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2328,
																	"src": "8267:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2352,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2330,
																	"src": "8270:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2349,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2362,
												"nodeType": "IfStatement",
												"src": "8223:101:14",
												"trueBody": {
													"id": 2361,
													"nodeType": "Block",
													"src": "8288:36:14",
													"statements": [
														{
															"expression": {
																"id": 2359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2357,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2339,
																	"src": "8302:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2360,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:14"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2363,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2339,
													"src": "8340:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2337,
												"id": 2364,
												"nodeType": "Return",
												"src": "8333:13:14"
											}
										]
									},
									"documentation": {
										"id": 2324,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:14",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2326,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2366,
												"src": "8067:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2328,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2366,
												"src": "8078:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2330,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2366,
												"src": "8089:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2333,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2366,
												"src": "8110:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1946",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2332,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2331,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1946,
														"src": "8110:8:14"
													},
													"referencedDeclaration": 1946,
													"src": "8110:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1946",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:14"
									},
									"returnParameters": {
										"id": 2337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2366,
												"src": "8152:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:14"
									},
									"scope": 2989,
									"src": "8051:302:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2477,
										"nodeType": "Block",
										"src": "8644:1585:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2374,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2369,
														"src": "8658:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2375,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2380,
												"nodeType": "IfStatement",
												"src": "8654:45:14",
												"trueBody": {
													"id": 2379,
													"nodeType": "Block",
													"src": "8666:33:14",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2377,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2373,
															"id": 2378,
															"nodeType": "Return",
															"src": "8680:8:14"
														}
													]
												}
											},
											{
												"assignments": [
													2382
												],
												"declarations": [
													{
														"constant": false,
														"id": 2382,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2477,
														"src": "9378:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2381,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2391,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2383,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2385,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2369,
																			"src": "9406:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2384,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2645,
																			2680
																		],
																		"referencedDeclaration": 2645,
																		"src": "9401:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2389,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:14"
											},
											{
												"id": 2476,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:14",
												"statements": [
													{
														"expression": {
															"id": 2401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2392,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2382,
																"src": "9839:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2393,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2382,
																				"src": "9849:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2396,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2394,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2369,
																					"src": "9858:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2395,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2382,
																					"src": "9862:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2398,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2402,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:14"
													},
													{
														"expression": {
															"id": 2412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2403,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2382,
																"src": "9888:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2408,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2404,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2382,
																				"src": "9898:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2407,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2405,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2369,
																					"src": "9907:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2406,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2382,
																					"src": "9911:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2409,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2413,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:14"
													},
													{
														"expression": {
															"id": 2423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2414,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2382,
																"src": "9937:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2415,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2382,
																				"src": "9947:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2418,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2416,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2369,
																					"src": "9956:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2417,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2382,
																					"src": "9960:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2420,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2424,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:14"
													},
													{
														"expression": {
															"id": 2434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2425,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2382,
																"src": "9986:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2430,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2426,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2382,
																				"src": "9996:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2429,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2427,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2369,
																					"src": "10005:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2428,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2382,
																					"src": "10009:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2431,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2435,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:14"
													},
													{
														"expression": {
															"id": 2445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2436,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2382,
																"src": "10035:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2441,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2437,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2382,
																				"src": "10045:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2440,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2438,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2369,
																					"src": "10054:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2439,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2382,
																					"src": "10058:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2442,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2446,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:14"
													},
													{
														"expression": {
															"id": 2456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2447,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2382,
																"src": "10084:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2448,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2382,
																				"src": "10094:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2451,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2449,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2369,
																					"src": "10103:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2450,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2382,
																					"src": "10107:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2453,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2457,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:14"
													},
													{
														"expression": {
															"id": 2467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2458,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2382,
																"src": "10133:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2459,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2382,
																				"src": "10143:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2462,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2460,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2369,
																					"src": "10152:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2461,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2382,
																					"src": "10156:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2464,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2468,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:14"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2470,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2382,
																	"src": "10193:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2471,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2369,
																		"src": "10201:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2472,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2382,
																		"src": "10205:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2469,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2140,
																"src": "10189:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2373,
														"id": 2475,
														"nodeType": "Return",
														"src": "10182:30:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2367,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:14",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2369,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "8601:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:14"
									},
									"returnParameters": {
										"id": 2373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "8635:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:14"
									},
									"scope": 2989,
									"src": "8587:1642:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2512,
										"nodeType": "Block",
										"src": "10405:164:14",
										"statements": [
											{
												"id": 2511,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:14",
												"statements": [
													{
														"assignments": [
															2490
														],
														"declarations": [
															{
																"constant": false,
																"id": 2490,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2511,
																"src": "10439:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2489,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2494,
														"initialValue": {
															"arguments": [
																{
																	"id": 2492,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2481,
																	"src": "10461:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2491,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2478,
																	2513
																],
																"referencedDeclaration": 2478,
																"src": "10456:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2495,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2490,
																"src": "10484:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2504,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2497,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2484,
																						"src": "10511:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1946",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1946",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2496,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2988,
																					"src": "10494:16:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1946_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2498,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2503,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2501,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2499,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2490,
																						"src": "10524:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2500,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2490,
																						"src": "10533:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2502,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2481,
																					"src": "10542:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:14",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2505,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2508,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2488,
														"id": 2510,
														"nodeType": "Return",
														"src": "10477:75:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2479,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:14",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2481,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2513,
												"src": "10343:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2484,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2513,
												"src": "10354:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1946",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2483,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2482,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1946,
														"src": "10354:8:14"
													},
													"referencedDeclaration": 1946,
													"src": "10354:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1946",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:14"
									},
									"returnParameters": {
										"id": 2488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2513,
												"src": "10396:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:14"
									},
									"scope": 2989,
									"src": "10329:240:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2644,
										"nodeType": "Block",
										"src": "10760:922:14",
										"statements": [
											{
												"assignments": [
													2522
												],
												"declarations": [
													{
														"constant": false,
														"id": 2522,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2644,
														"src": "10770:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2521,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2524,
												"initialValue": {
													"hexValue": "30",
													"id": 2523,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:14"
											},
											{
												"id": 2641,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2525,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2516,
																	"src": "10826:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2539,
														"nodeType": "IfStatement",
														"src": "10822:99:14",
														"trueBody": {
															"id": 2538,
															"nodeType": "Block",
															"src": "10844:77:14",
															"statements": [
																{
																	"expression": {
																		"id": 2532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2530,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2516,
																			"src": "10862:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2533,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:14"
																},
																{
																	"expression": {
																		"id": 2536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2534,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2522,
																			"src": "10893:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2537,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2540,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2516,
																	"src": "10938:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2543,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2554,
														"nodeType": "IfStatement",
														"src": "10934:96:14",
														"trueBody": {
															"id": 2553,
															"nodeType": "Block",
															"src": "10955:75:14",
															"statements": [
																{
																	"expression": {
																		"id": 2547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2545,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2516,
																			"src": "10973:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2548,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:14"
																},
																{
																	"expression": {
																		"id": 2551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2549,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2522,
																			"src": "11003:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2550,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2552,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2555,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2516,
																	"src": "11047:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2558,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2569,
														"nodeType": "IfStatement",
														"src": "11043:96:14",
														"trueBody": {
															"id": 2568,
															"nodeType": "Block",
															"src": "11064:75:14",
															"statements": [
																{
																	"expression": {
																		"id": 2562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2560,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2516,
																			"src": "11082:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2561,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2563,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:14"
																},
																{
																	"expression": {
																		"id": 2566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2564,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2522,
																			"src": "11112:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2567,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2570,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2516,
																	"src": "11156:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2573,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2584,
														"nodeType": "IfStatement",
														"src": "11152:96:14",
														"trueBody": {
															"id": 2583,
															"nodeType": "Block",
															"src": "11173:75:14",
															"statements": [
																{
																	"expression": {
																		"id": 2577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2575,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2516,
																			"src": "11191:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2578,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:14"
																},
																{
																	"expression": {
																		"id": 2581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2579,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2522,
																			"src": "11221:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2582,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2585,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2516,
																	"src": "11265:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2599,
														"nodeType": "IfStatement",
														"src": "11261:93:14",
														"trueBody": {
															"id": 2598,
															"nodeType": "Block",
															"src": "11281:73:14",
															"statements": [
																{
																	"expression": {
																		"id": 2592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2590,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2516,
																			"src": "11299:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2593,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:14"
																},
																{
																	"expression": {
																		"id": 2596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2594,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2522,
																			"src": "11328:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2595,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2597,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2600,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2516,
																	"src": "11371:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2614,
														"nodeType": "IfStatement",
														"src": "11367:93:14",
														"trueBody": {
															"id": 2613,
															"nodeType": "Block",
															"src": "11387:73:14",
															"statements": [
																{
																	"expression": {
																		"id": 2607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2605,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2516,
																			"src": "11405:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2608,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:14"
																},
																{
																	"expression": {
																		"id": 2611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2609,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2522,
																			"src": "11434:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2612,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2615,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2516,
																	"src": "11477:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2629,
														"nodeType": "IfStatement",
														"src": "11473:93:14",
														"trueBody": {
															"id": 2628,
															"nodeType": "Block",
															"src": "11493:73:14",
															"statements": [
																{
																	"expression": {
																		"id": 2622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2620,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2516,
																			"src": "11511:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2623,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:14"
																},
																{
																	"expression": {
																		"id": 2626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2624,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2522,
																			"src": "11540:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2627,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2632,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2630,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2516,
																	"src": "11583:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2640,
														"nodeType": "IfStatement",
														"src": "11579:64:14",
														"trueBody": {
															"id": 2639,
															"nodeType": "Block",
															"src": "11599:44:14",
															"statements": [
																{
																	"expression": {
																		"id": 2637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2635,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2522,
																			"src": "11617:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2638,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:14"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2642,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2522,
													"src": "11669:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2520,
												"id": 2643,
												"nodeType": "Return",
												"src": "11662:13:14"
											}
										]
									},
									"documentation": {
										"id": 2514,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:14",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2516,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2645,
												"src": "10713:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:14"
									},
									"returnParameters": {
										"id": 2520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2645,
												"src": "10751:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:14"
									},
									"scope": 2989,
									"src": "10699:983:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2679,
										"nodeType": "Block",
										"src": "11915:168:14",
										"statements": [
											{
												"id": 2678,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:14",
												"statements": [
													{
														"assignments": [
															2657
														],
														"declarations": [
															{
																"constant": false,
																"id": 2657,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2678,
																"src": "11949:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2656,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2661,
														"initialValue": {
															"arguments": [
																{
																	"id": 2659,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2648,
																	"src": "11971:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2658,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2645,
																	2680
																],
																"referencedDeclaration": 2645,
																"src": "11966:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2662,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2657,
																"src": "11998:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2664,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2651,
																						"src": "12025:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1946",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1946",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2663,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2988,
																					"src": "12008:16:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1946_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2665,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2670,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2668,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2666,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2667,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2657,
																						"src": "12043:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2669,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2648,
																					"src": "12052:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:14",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2675,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2655,
														"id": 2677,
														"nodeType": "Return",
														"src": "11991:75:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2646,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:14",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2648,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2680,
												"src": "11849:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2651,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2680,
												"src": "11864:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1946",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2650,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2649,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1946,
														"src": "11864:8:14"
													},
													"referencedDeclaration": 1946,
													"src": "11864:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1946",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:14"
									},
									"returnParameters": {
										"id": 2655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2680,
												"src": "11906:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:14"
									},
									"scope": 2989,
									"src": "11835:248:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2808,
										"nodeType": "Block",
										"src": "12276:854:14",
										"statements": [
											{
												"assignments": [
													2689
												],
												"declarations": [
													{
														"constant": false,
														"id": 2689,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2808,
														"src": "12286:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2688,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2691,
												"initialValue": {
													"hexValue": "30",
													"id": 2690,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:14"
											},
											{
												"id": 2805,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2692,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2683,
																"src": "12342:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2695,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2708,
														"nodeType": "IfStatement",
														"src": "12338:103:14",
														"trueBody": {
															"id": 2707,
															"nodeType": "Block",
															"src": "12361:80:14",
															"statements": [
																{
																	"expression": {
																		"id": 2701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2697,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2683,
																			"src": "12379:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2699,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2702,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:14"
																},
																{
																	"expression": {
																		"id": 2705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2703,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "12414:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2704,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2706,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2709,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2683,
																"src": "12458:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2712,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2725,
														"nodeType": "IfStatement",
														"src": "12454:103:14",
														"trueBody": {
															"id": 2724,
															"nodeType": "Block",
															"src": "12477:80:14",
															"statements": [
																{
																	"expression": {
																		"id": 2718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2714,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2683,
																			"src": "12495:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2717,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2715,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2716,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2719,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:14"
																},
																{
																	"expression": {
																		"id": 2722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2720,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "12530:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2721,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2723,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2726,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2683,
																"src": "12574:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2742,
														"nodeType": "IfStatement",
														"src": "12570:103:14",
														"trueBody": {
															"id": 2741,
															"nodeType": "Block",
															"src": "12593:80:14",
															"statements": [
																{
																	"expression": {
																		"id": 2735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2731,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2683,
																			"src": "12611:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2734,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2732,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2733,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2736,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:14"
																},
																{
																	"expression": {
																		"id": 2739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2737,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "12646:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2738,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2740,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2743,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2683,
																"src": "12690:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2746,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2759,
														"nodeType": "IfStatement",
														"src": "12686:100:14",
														"trueBody": {
															"id": 2758,
															"nodeType": "Block",
															"src": "12708:78:14",
															"statements": [
																{
																	"expression": {
																		"id": 2752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2748,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2683,
																			"src": "12726:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2751,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2749,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2750,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2753,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:14"
																},
																{
																	"expression": {
																		"id": 2756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2754,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "12760:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2757,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2760,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2683,
																"src": "12803:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2776,
														"nodeType": "IfStatement",
														"src": "12799:100:14",
														"trueBody": {
															"id": 2775,
															"nodeType": "Block",
															"src": "12821:78:14",
															"statements": [
																{
																	"expression": {
																		"id": 2769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2765,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2683,
																			"src": "12839:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2768,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2766,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2767,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2770,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:14"
																},
																{
																	"expression": {
																		"id": 2773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2771,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "12873:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2772,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2774,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2777,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2683,
																"src": "12916:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2780,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2793,
														"nodeType": "IfStatement",
														"src": "12912:100:14",
														"trueBody": {
															"id": 2792,
															"nodeType": "Block",
															"src": "12934:78:14",
															"statements": [
																{
																	"expression": {
																		"id": 2786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2782,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2683,
																			"src": "12952:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2783,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2784,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2787,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:14"
																},
																{
																	"expression": {
																		"id": 2790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2788,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "12986:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2791,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2794,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2683,
																"src": "13029:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2797,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2804,
														"nodeType": "IfStatement",
														"src": "13025:66:14",
														"trueBody": {
															"id": 2803,
															"nodeType": "Block",
															"src": "13047:44:14",
															"statements": [
																{
																	"expression": {
																		"id": 2801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2799,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "13065:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2802,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:14"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2806,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2689,
													"src": "13117:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2687,
												"id": 2807,
												"nodeType": "Return",
												"src": "13110:13:14"
											}
										]
									},
									"documentation": {
										"id": 2681,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:14",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2683,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2809,
												"src": "12229:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:14"
									},
									"returnParameters": {
										"id": 2687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2686,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2809,
												"src": "12267:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:14"
									},
									"scope": 2989,
									"src": "12214:916:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2843,
										"nodeType": "Block",
										"src": "13365:170:14",
										"statements": [
											{
												"id": 2842,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:14",
												"statements": [
													{
														"assignments": [
															2821
														],
														"declarations": [
															{
																"constant": false,
																"id": 2821,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2842,
																"src": "13399:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2820,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2825,
														"initialValue": {
															"arguments": [
																{
																	"id": 2823,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2812,
																	"src": "13422:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2822,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2809,
																	2844
																],
																"referencedDeclaration": 2809,
																"src": "13416:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2826,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2821,
																"src": "13449:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2835,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2828,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2815,
																						"src": "13476:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1946",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1946",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2827,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2988,
																					"src": "13459:16:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1946_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2829,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2834,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2832,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2830,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2831,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2821,
																						"src": "13495:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2833,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2812,
																					"src": "13504:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:14",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2839,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2819,
														"id": 2841,
														"nodeType": "Return",
														"src": "13442:76:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2810,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:14",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2812,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2844,
												"src": "13299:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2815,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2844,
												"src": "13314:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1946",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2814,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2813,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1946,
														"src": "13314:8:14"
													},
													"referencedDeclaration": 1946,
													"src": "13314:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1946",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:14"
									},
									"returnParameters": {
										"id": 2819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2844,
												"src": "13356:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:14"
									},
									"scope": 2989,
									"src": "13284:251:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2930,
										"nodeType": "Block",
										"src": "13855:600:14",
										"statements": [
											{
												"assignments": [
													2853
												],
												"declarations": [
													{
														"constant": false,
														"id": 2853,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2930,
														"src": "13865:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2852,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2855,
												"initialValue": {
													"hexValue": "30",
													"id": 2854,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:14"
											},
											{
												"id": 2927,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2856,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2847,
																	"src": "13921:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2870,
														"nodeType": "IfStatement",
														"src": "13917:98:14",
														"trueBody": {
															"id": 2869,
															"nodeType": "Block",
															"src": "13939:76:14",
															"statements": [
																{
																	"expression": {
																		"id": 2863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2861,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2847,
																			"src": "13957:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2862,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2864,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:14"
																},
																{
																	"expression": {
																		"id": 2867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2865,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2853,
																			"src": "13988:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2866,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2868,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2871,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2847,
																	"src": "14032:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2874,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2885,
														"nodeType": "IfStatement",
														"src": "14028:95:14",
														"trueBody": {
															"id": 2884,
															"nodeType": "Block",
															"src": "14049:74:14",
															"statements": [
																{
																	"expression": {
																		"id": 2878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2876,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2847,
																			"src": "14067:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2877,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2879,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:14"
																},
																{
																	"expression": {
																		"id": 2882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2880,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2853,
																			"src": "14097:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2881,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2883,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2886,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2847,
																	"src": "14140:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2900,
														"nodeType": "IfStatement",
														"src": "14136:95:14",
														"trueBody": {
															"id": 2899,
															"nodeType": "Block",
															"src": "14157:74:14",
															"statements": [
																{
																	"expression": {
																		"id": 2893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2891,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2847,
																			"src": "14175:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2892,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2894,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:14"
																},
																{
																	"expression": {
																		"id": 2897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2895,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2853,
																			"src": "14205:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2896,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2898,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2903,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2901,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2847,
																	"src": "14248:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2902,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2904,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2915,
														"nodeType": "IfStatement",
														"src": "14244:95:14",
														"trueBody": {
															"id": 2914,
															"nodeType": "Block",
															"src": "14265:74:14",
															"statements": [
																{
																	"expression": {
																		"id": 2908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2906,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2847,
																			"src": "14283:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2907,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2909,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:14"
																},
																{
																	"expression": {
																		"id": 2912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2910,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2853,
																			"src": "14313:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2911,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2913,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2916,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2847,
																	"src": "14356:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2926,
														"nodeType": "IfStatement",
														"src": "14352:64:14",
														"trueBody": {
															"id": 2925,
															"nodeType": "Block",
															"src": "14372:44:14",
															"statements": [
																{
																	"expression": {
																		"id": 2923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2921,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2853,
																			"src": "14390:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2922,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2924,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:14"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2928,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2853,
													"src": "14442:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2851,
												"id": 2929,
												"nodeType": "Return",
												"src": "14435:13:14"
											}
										]
									},
									"documentation": {
										"id": 2845,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:14",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2847,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2931,
												"src": "13808:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:14"
									},
									"returnParameters": {
										"id": 2851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2931,
												"src": "13846:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:14"
									},
									"scope": 2989,
									"src": "13792:663:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2968,
										"nodeType": "Block",
										"src": "14692:177:14",
										"statements": [
											{
												"id": 2967,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:14",
												"statements": [
													{
														"assignments": [
															2943
														],
														"declarations": [
															{
																"constant": false,
																"id": 2943,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2967,
																"src": "14726:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2942,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2947,
														"initialValue": {
															"arguments": [
																{
																	"id": 2945,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2934,
																	"src": "14750:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2944,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2931,
																	2969
																],
																"referencedDeclaration": 2931,
																"src": "14743:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2948,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2943,
																"src": "14777:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2960,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2950,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2937,
																						"src": "14804:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1946",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1946",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2949,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2988,
																					"src": "14787:16:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1946_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2951,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2959,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2957,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2952,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2955,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2953,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2943,
																									"src": "14823:6:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2954,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2956,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2958,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2934,
																					"src": "14838:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2962,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:14",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2961,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2964,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2941,
														"id": 2966,
														"nodeType": "Return",
														"src": "14770:82:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2932,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:14",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2934,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2969,
												"src": "14626:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2937,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2969,
												"src": "14641:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1946",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2936,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2935,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1946,
														"src": "14641:8:14"
													},
													"referencedDeclaration": 1946,
													"src": "14641:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1946",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:14"
									},
									"returnParameters": {
										"id": 2941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2969,
												"src": "14683:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:14"
									},
									"scope": 2989,
									"src": "14610:259:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2987,
										"nodeType": "Block",
										"src": "15067:48:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2983,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2980,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2973,
																	"src": "15090:8:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1946",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1946",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2979,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2978,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2984,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2977,
												"id": 2986,
												"nodeType": "Return",
												"src": "15077:31:14"
											}
										]
									},
									"documentation": {
										"id": 2970,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:14",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2973,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2988,
												"src": "15019:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1946",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2972,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2971,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1946,
														"src": "15019:8:14"
													},
													"referencedDeclaration": 1946,
													"src": "15019:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1946",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:14"
									},
									"returnParameters": {
										"id": 2977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2988,
												"src": "15061:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2975,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:14"
									},
									"scope": 2989,
									"src": "14993:122:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2990,
							"src": "203:14914:14",
							"usedErrors": [
								1941
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3094
						]
					},
					"id": 3095,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2991,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2992,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:15",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3094,
							"linearizedBaseContracts": [
								3094
							],
							"name": "SignedMath",
							"nameLocation": "224:10:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3009,
										"nodeType": "Block",
										"src": "376:37:15",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3002,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2995,
															"src": "393:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3003,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2997,
															"src": "397:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3006,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2997,
														"src": "405:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:15",
													"trueExpression": {
														"id": 3005,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2995,
														"src": "401:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3001,
												"id": 3008,
												"nodeType": "Return",
												"src": "386:20:15"
											}
										]
									},
									"documentation": {
										"id": 2993,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:15",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2995,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3010,
												"src": "325:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2994,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2997,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3010,
												"src": "335:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2996,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:15"
									},
									"returnParameters": {
										"id": 3001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3000,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3010,
												"src": "368:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2999,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:15"
									},
									"scope": 3094,
									"src": "312:101:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3027,
										"nodeType": "Block",
										"src": "555:37:15",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3022,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3020,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3013,
															"src": "572:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3021,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3015,
															"src": "576:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3024,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3015,
														"src": "584:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:15",
													"trueExpression": {
														"id": 3023,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3013,
														"src": "580:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3019,
												"id": 3026,
												"nodeType": "Return",
												"src": "565:20:15"
											}
										]
									},
									"documentation": {
										"id": 3011,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:15",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3013,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3028,
												"src": "504:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3012,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3015,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3028,
												"src": "514:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3014,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:15"
									},
									"returnParameters": {
										"id": 3019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3018,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3028,
												"src": "547:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3017,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:15"
									},
									"scope": 3094,
									"src": "491:101:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3071,
										"nodeType": "Block",
										"src": "797:162:15",
										"statements": [
											{
												"assignments": [
													3039
												],
												"declarations": [
													{
														"constant": false,
														"id": 3039,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:15",
														"nodeType": "VariableDeclaration",
														"scope": 3071,
														"src": "859:8:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3038,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3052,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3040,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3031,
																	"src": "871:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3041,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3033,
																	"src": "875:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3043,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3046,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3044,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3031,
																				"src": "882:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3045,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3033,
																				"src": "886:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3047,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3050,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:15"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3053,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3039,
														"src": "911:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3061,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3058,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3039,
																						"src": "931:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3057,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3056,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:15",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3059,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3060,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3054,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:15",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3065,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3063,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3031,
																				"src": "945:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3064,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3033,
																				"src": "949:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3066,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3068,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3037,
												"id": 3070,
												"nodeType": "Return",
												"src": "904:48:15"
											}
										]
									},
									"documentation": {
										"id": 3029,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:15",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3031,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3072,
												"src": "746:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3030,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3033,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3072,
												"src": "756:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3032,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:15"
									},
									"returnParameters": {
										"id": 3037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3036,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3072,
												"src": "789:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3035,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:15"
									},
									"scope": 3094,
									"src": "729:230:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3092,
										"nodeType": "Block",
										"src": "1103:158:15",
										"statements": [
											{
												"id": 3091,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:15",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3084,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3082,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3075,
																			"src": "1228:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3083,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:15",
																		"subExpression": {
																			"id": 3086,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3075,
																			"src": "1242:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:15",
																	"trueExpression": {
																		"id": 3085,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3075,
																		"src": "1237:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3081,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3080,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 3089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3079,
														"id": 3090,
														"nodeType": "Return",
														"src": "1213:31:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3073,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:15",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3093,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3075,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3093,
												"src": "1061:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3074,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:15"
									},
									"returnParameters": {
										"id": 3079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3078,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3093,
												"src": "1094:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:15"
									},
									"scope": 3094,
									"src": "1048:213:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3095,
							"src": "216:1047:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:15"
				},
				"id": 15
			},
			"contracts/erc721/NftV1Collection.sol": {
				"ast": {
					"absolutePath": "contracts/erc721/NftV1Collection.sol",
					"exportedSymbols": {
						"Context": [
							1644
						],
						"ERC165": [
							1923
						],
						"ERC721": [
							1325
						],
						"ERC721URIStorage": [
							1586
						],
						"IERC165": [
							1935
						],
						"IERC4906": [
							175
						],
						"IERC721": [
							1442
						],
						"IERC721Errors": [
							269
						],
						"IERC721Metadata": [
							1614
						],
						"IERC721Receiver": [
							1460
						],
						"NftV1Collection": [
							3292
						],
						"Ownable": [
							147
						],
						"Strings": [
							1899
						]
					},
					"id": 3293,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3096,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:16"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3097,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3293,
							"sourceUnit": 148,
							"src": "58:52:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"id": 3098,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3293,
							"sourceUnit": 1587,
							"src": "111:78:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 3099,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3293,
							"sourceUnit": 1326,
							"src": "190:57:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3100,
										"name": "ERC721URIStorage",
										"nameLocations": [
											"277:16:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1586,
										"src": "277:16:16"
									},
									"id": 3101,
									"nodeType": "InheritanceSpecifier",
									"src": "277:16:16"
								},
								{
									"baseName": {
										"id": 3102,
										"name": "Ownable",
										"nameLocations": [
											"295:7:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "295:7:16"
									},
									"id": 3103,
									"nodeType": "InheritanceSpecifier",
									"src": "295:7:16"
								}
							],
							"canonicalName": "NftV1Collection",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3292,
							"linearizedBaseContracts": [
								3292,
								147,
								1586,
								1325,
								269,
								1614,
								175,
								1442,
								1923,
								1935,
								1644
							],
							"name": "NftV1Collection",
							"nameLocation": "258:15:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3106,
									"mutability": "mutable",
									"name": "_tokenId",
									"nameLocation": "326:8:16",
									"nodeType": "VariableDeclaration",
									"scope": 3292,
									"src": "310:28:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3104,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "310:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 3105,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "337:1:16",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "34c73884fbbb790762253ae313e57da96c00670344647f0cb8d41ee92b9f1971",
									"id": 3108,
									"name": "Mint",
									"nameLocation": "351:4:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "355:2:16"
									},
									"src": "345:13:16"
								},
								{
									"body": {
										"id": 3124,
										"nodeType": "Block",
										"src": "483:7:16",
										"statements": []
									},
									"id": 3125,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3117,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3112,
													"src": "447:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 3118,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3114,
													"src": "453:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 3119,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3116,
												"name": "ERC721",
												"nameLocations": [
													"440:6:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1325,
												"src": "440:6:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "440:20:16"
										},
										{
											"arguments": [
												{
													"id": 3121,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3110,
													"src": "469:12:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3122,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3120,
												"name": "Ownable",
												"nameLocations": [
													"461:7:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "461:7:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "461:21:16"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3110,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "384:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 3125,
												"src": "376:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "376:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3112,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "412:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 3125,
												"src": "398:18:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3111,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "398:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3114,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "432:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 3125,
												"src": "418:20:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3113,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "418:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "375:64:16"
									},
									"returnParameters": {
										"id": 3123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "483:0:16"
									},
									"scope": 3292,
									"src": "364:126:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3142,
										"nodeType": "Block",
										"src": "567:60:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3135,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3127,
															"src": "583:2:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3136,
															"name": "metadataUrl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3129,
															"src": "587:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3134,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3247,
															932
														],
														"referencedDeclaration": 3247,
														"src": "577:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,string memory)"
														}
													},
													"id": 3137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "577:22:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3138,
												"nodeType": "ExpressionStatement",
												"src": "577:22:16"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3139,
														"name": "Mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3108,
														"src": "614:4:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "614:6:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3141,
												"nodeType": "EmitStatement",
												"src": "609:11:16"
											}
										]
									},
									"functionSelector": "d0def521",
									"id": 3143,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3132,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3131,
												"name": "onlyOwner",
												"nameLocations": [
													"558:9:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "558:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "558:9:16"
										}
									],
									"name": "mint",
									"nameLocation": "505:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3127,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "518:2:16",
												"nodeType": "VariableDeclaration",
												"scope": 3143,
												"src": "510:10:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "510:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3129,
												"mutability": "mutable",
												"name": "metadataUrl",
												"nameLocation": "536:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3143,
												"src": "522:25:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3128,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "522:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "509:39:16"
									},
									"returnParameters": {
										"id": 3133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "567:0:16"
									},
									"scope": 3292,
									"src": "496:131:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3187,
										"nodeType": "Block",
										"src": "715:187:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3155,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3146,
																	"src": "733:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 3156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "736:6:16",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "733:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3157,
																	"name": "metadataUrl",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3149,
																	"src": "746:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																		"typeString": "string memory[] memory"
																	}
																},
																"id": 3158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "758:6:16",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "746:18:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "733:31:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3154,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "725:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "725:40:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3161,
												"nodeType": "ExpressionStatement",
												"src": "725:40:16"
											},
											{
												"body": {
													"id": 3182,
													"nodeType": "Block",
													"src": "823:52:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 3174,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3146,
																			"src": "842:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 3176,
																		"indexExpression": {
																			"id": 3175,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3163,
																			"src": "845:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "842:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 3177,
																			"name": "metadataUrl",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3149,
																			"src": "849:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																				"typeString": "string memory[] memory"
																			}
																		},
																		"id": 3179,
																		"indexExpression": {
																			"id": 3178,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3163,
																			"src": "861:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "849:14:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 3173,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		3247,
																		932
																	],
																	"referencedDeclaration": 3247,
																	"src": "836:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (address,string memory)"
																	}
																},
																"id": 3180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "836:28:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3181,
															"nodeType": "ExpressionStatement",
															"src": "836:28:16"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3166,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3163,
														"src": "803:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3167,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3146,
															"src": "807:2:16",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 3168,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "810:6:16",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "807:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "803:13:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3183,
												"initializationExpression": {
													"assignments": [
														3163
													],
													"declarations": [
														{
															"constant": false,
															"id": 3163,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "796:1:16",
															"nodeType": "VariableDeclaration",
															"scope": 3183,
															"src": "788:9:16",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3162,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "788:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3165,
													"initialValue": {
														"hexValue": "30",
														"id": 3164,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "800:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "788:13:16"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3171,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "818:3:16",
														"subExpression": {
															"id": 3170,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3163,
															"src": "818:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3172,
													"nodeType": "ExpressionStatement",
													"src": "818:3:16"
												},
												"nodeType": "ForStatement",
												"src": "784:91:16"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3184,
														"name": "Mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3108,
														"src": "889:4:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "889:6:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3186,
												"nodeType": "EmitStatement",
												"src": "884:11:16"
											}
										]
									},
									"functionSelector": "4c7bc5cf",
									"id": 3188,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3152,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3151,
												"name": "onlyOwner",
												"nameLocations": [
													"706:9:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "706:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "706:9:16"
										}
									],
									"name": "mint",
									"nameLocation": "642:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3146,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "664:2:16",
												"nodeType": "VariableDeclaration",
												"scope": 3188,
												"src": "647:19:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3144,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "647:7:16",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3145,
													"nodeType": "ArrayTypeName",
													"src": "647:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3149,
												"mutability": "mutable",
												"name": "metadataUrl",
												"nameLocation": "684:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3188,
												"src": "668:27:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 3147,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "668:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 3148,
													"nodeType": "ArrayTypeName",
													"src": "668:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "646:50:16"
									},
									"returnParameters": {
										"id": 3153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "715:0:16"
									},
									"scope": 3292,
									"src": "633:269:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3221,
										"nodeType": "Block",
										"src": "988:125:16",
										"statements": [
											{
												"body": {
													"id": 3216,
													"nodeType": "Block",
													"src": "1037:49:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 3210,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3191,
																			"src": "1056:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 3212,
																		"indexExpression": {
																			"id": 3211,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3199,
																			"src": "1059:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1056:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3213,
																		"name": "metadataUrl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3193,
																		"src": "1063:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 3209,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		3247,
																		932
																	],
																	"referencedDeclaration": 3247,
																	"src": "1050:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (address,string memory)"
																	}
																},
																"id": 3214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1050:25:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3215,
															"nodeType": "ExpressionStatement",
															"src": "1050:25:16"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3202,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3199,
														"src": "1017:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3203,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3191,
															"src": "1021:2:16",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 3204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1024:6:16",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1021:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1017:13:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3217,
												"initializationExpression": {
													"assignments": [
														3199
													],
													"declarations": [
														{
															"constant": false,
															"id": 3199,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1010:1:16",
															"nodeType": "VariableDeclaration",
															"scope": 3217,
															"src": "1002:9:16",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3198,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1002:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3201,
													"initialValue": {
														"hexValue": "30",
														"id": 3200,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1014:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1002:13:16"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1032:3:16",
														"subExpression": {
															"id": 3206,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3199,
															"src": "1032:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3208,
													"nodeType": "ExpressionStatement",
													"src": "1032:3:16"
												},
												"nodeType": "ForStatement",
												"src": "998:88:16"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3218,
														"name": "Mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3108,
														"src": "1100:4:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1100:6:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3220,
												"nodeType": "EmitStatement",
												"src": "1095:11:16"
											}
										]
									},
									"functionSelector": "b6c32074",
									"id": 3222,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3196,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3195,
												"name": "onlyOwner",
												"nameLocations": [
													"979:9:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "979:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "979:9:16"
										}
									],
									"name": "mint",
									"nameLocation": "917:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3191,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "939:2:16",
												"nodeType": "VariableDeclaration",
												"scope": 3222,
												"src": "922:19:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3189,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "922:7:16",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3190,
													"nodeType": "ArrayTypeName",
													"src": "922:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3193,
												"mutability": "mutable",
												"name": "metadataUrl",
												"nameLocation": "957:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3222,
												"src": "943:25:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3192,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "943:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "921:48:16"
									},
									"returnParameters": {
										"id": 3197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "988:0:16"
									},
									"scope": 3292,
									"src": "908:205:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3246,
										"nodeType": "Block",
										"src": "1191:117:16",
										"statements": [
											{
												"assignments": [
													3232
												],
												"declarations": [
													{
														"constant": false,
														"id": 3232,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "1209:7:16",
														"nodeType": "VariableDeclaration",
														"scope": 3246,
														"src": "1201:15:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3231,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1201:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3235,
												"initialValue": {
													"id": 3234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1219:10:16",
													"subExpression": {
														"id": 3233,
														"name": "_tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3106,
														"src": "1219:8:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1201:28:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3237,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3224,
															"src": "1245:2:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3238,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3232,
															"src": "1249:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3236,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3247,
															932
														],
														"referencedDeclaration": 932,
														"src": "1239:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:18:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3240,
												"nodeType": "ExpressionStatement",
												"src": "1239:18:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3242,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3232,
															"src": "1280:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3243,
															"name": "metadataUrl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3226,
															"src": "1289:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3241,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1585,
														"src": "1267:12:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 3244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1267:34:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3245,
												"nodeType": "ExpressionStatement",
												"src": "1267:34:16"
											}
										]
									},
									"id": 3247,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3229,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3228,
												"name": "onlyOwner",
												"nameLocations": [
													"1182:9:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1182:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "1182:9:16"
										}
									],
									"name": "_mint",
									"nameLocation": "1128:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3224,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1142:2:16",
												"nodeType": "VariableDeclaration",
												"scope": 3247,
												"src": "1134:10:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3226,
												"mutability": "mutable",
												"name": "metadataUrl",
												"nameLocation": "1160:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3247,
												"src": "1146:25:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3225,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1146:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:39:16"
									},
									"returnParameters": {
										"id": 3230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1191:0:16"
									},
									"scope": 3292,
									"src": "1119:189:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3261,
										"nodeType": "Block",
										"src": "1392:51:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3257,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3249,
															"src": "1415:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3258,
															"name": "metadataUrl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3251,
															"src": "1424:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3256,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1585,
														"src": "1402:12:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 3259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1402:34:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3260,
												"nodeType": "ExpressionStatement",
												"src": "1402:34:16"
											}
										]
									},
									"functionSelector": "aef95098",
									"id": 3262,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3254,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3253,
												"name": "onlyOwner",
												"nameLocations": [
													"1383:9:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1383:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "1383:9:16"
										}
									],
									"name": "setUrl",
									"nameLocation": "1323:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3249,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1338:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3262,
												"src": "1330:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1330:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3251,
												"mutability": "mutable",
												"name": "metadataUrl",
												"nameLocation": "1361:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3262,
												"src": "1347:25:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3250,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1347:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1329:44:16"
									},
									"returnParameters": {
										"id": 3255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1392:0:16"
									},
									"scope": 3292,
									"src": "1314:129:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3290,
										"nodeType": "Block",
										"src": "1550:104:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 3275,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3266,
																		"src": "1576:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3274,
																	"name": "ownerOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 458,
																	"src": "1568:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 3276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1568:16:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 3277,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3264,
																"src": "1588:2:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1568:22:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3273,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1560:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1560:31:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3280,
												"nodeType": "ExpressionStatement",
												"src": "1560:31:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3282,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3266,
															"src": "1607:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3281,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1006,
														"src": "1601:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1601:14:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3284,
												"nodeType": "ExpressionStatement",
												"src": "1601:14:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3286,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3264,
															"src": "1631:2:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3287,
															"name": "metadataUrl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3268,
															"src": "1635:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3285,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3247,
															932
														],
														"referencedDeclaration": 3247,
														"src": "1625:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,string memory)"
														}
													},
													"id": 3288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1625:22:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3289,
												"nodeType": "ExpressionStatement",
												"src": "1625:22:16"
											}
										]
									},
									"functionSelector": "fc12768b",
									"id": 3291,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3271,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3270,
												"name": "onlyOwner",
												"nameLocations": [
													"1540:9:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1540:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "1540:9:16"
										}
									],
									"name": "exchangeNewToken",
									"nameLocation": "1458:16:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3264,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1483:2:16",
												"nodeType": "VariableDeclaration",
												"scope": 3291,
												"src": "1475:10:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3266,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1495:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3291,
												"src": "1487:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3268,
												"mutability": "mutable",
												"name": "metadataUrl",
												"nameLocation": "1518:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3291,
												"src": "1504:25:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3267,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1504:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1474:56:16"
									},
									"returnParameters": {
										"id": 3272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1550:0:16"
									},
									"scope": 3292,
									"src": "1449:205:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3293,
							"src": "249:1407:16",
							"usedErrors": [
								13,
								18,
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								24,
								167,
								174,
								1341,
								1350,
								1359,
								3108
							]
						}
					],
					"src": "32:1624:16"
				},
				"id": 16
			}
		}
	}
}