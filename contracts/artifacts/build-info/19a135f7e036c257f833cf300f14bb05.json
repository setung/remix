{
	"id": "19a135f7e036c257f833cf300f14bb05",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NftV1Contract.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract NftV1Collection is ERC1155, Ownable {\n    \n    uint256 private _tokenId = 0;\n    string private _name;\n    string private _symbol;\n    mapping(uint256 => string) private _tokenURIs;\n\n    constructor(address initialOwner, string memory name, string memory symbol) ERC1155(\"\") Ownable(initialOwner) {\n        _name = name;\n        _symbol = symbol;\n    }\n\n    function setURI(string memory newuri) public onlyOwner {\n        _setURI(newuri);\n    }\n     \n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n    }\n    \n    function mint(address to, string memory _tokenURI, uint256 value) external onlyOwner returns (uint256) {\n        uint256 newItemId = _tokenId++;\n        _mint(to, newItemId, value, \"\");\n        _setTokenURI(newItemId, _tokenURI);\n        return newItemId;\n    }\n\n    function mintUniqueNFT(address to, string memory _tokenURI, uint256 value) external  onlyOwner returns (uint256[] memory) {\n       uint256[] memory ids = new uint256[](value);\n\n       for(uint256 i = 0; i < value; i++) {\n            uint256 newItemId = _tokenId++;\n            _mint(to, newItemId, 1, \"\");\n            _setTokenURI(newItemId, _tokenURI);\n            ids[i] = newItemId;\n       }\n       \n        return ids;\n    }\n\n    // to 사이즈와 value는 같아야 한다.\n    function mintUniqueNFT(address[] memory to, string memory _tokenURI, uint256 value) external onlyOwner returns (uint256[] memory) {\n       uint256[] memory ids = new uint256[](value);\n\n       for(uint256 i = 0; i < value; i++) {\n            uint256 newItemId = _tokenId++;\n            _mint(to[i], newItemId, 1, \"\");\n            _setTokenURI(newItemId, _tokenURI);\n            ids[i] = newItemId;\n       }\n       \n        return ids;\n    }\n\n    function name() public view returns(string memory) {\n        return _name;\n    }\n\n    function symbol() public view returns(string memory) {\n        return _symbol;\n    }\n\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        return _tokenURIs[tokenId];\n    }\n\n    function tokenId() public view virtual returns (uint256) {\n        return _tokenId;\n    }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155Receiver} from \"./IERC1155Receiver.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data);\n            } else {\n                _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Arrays.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * `array` is expected to be sorted in ascending order, and to contain no\n     * repeated elements.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 326,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 332,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 334,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"Arrays": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to array types.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Arrays.sol\":276:4802  library Arrays {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":276:4802  library Arrays {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201120e86fc0cb85fbfe2821bf78188382c7d4ece4835f2883e005ffc8d415a13464736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201120e86fc0cb85fbfe2821bf78188382c7d4ece4835f2883e005ffc8d415a13464736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT KECCAK256 0xE8 PUSH16 0xC0CB85FBFE2821BF78188382C7D4ECE4 DUP4 PUSH0 0x28 DUP4 0xE0 SDIV SELFDESTRUCT 0xC8 0xD4 ISZERO LOG1 CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "276:4526:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;276:4526:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201120e86fc0cb85fbfe2821bf78188382c7d4ece4835f2883e005ffc8d415a13464736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT KECCAK256 0xE8 PUSH16 0xC0CB85FBFE2821BF78188382C7D4ECE4 DUP4 PUSH0 0x28 DUP4 0xE0 SDIV SELFDESTRUCT 0xC8 0xD4 ISZERO LOG1 CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "276:4526:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"findUpperBound(uint256[] storage pointer,uint256)": "infinite",
								"unsafeAccess(address[] storage pointer,uint256)": "infinite",
								"unsafeAccess(bytes32[] storage pointer,uint256)": "infinite",
								"unsafeAccess(uint256[] storage pointer,uint256)": "infinite",
								"unsafeMemoryAccess(address[] memory,uint256)": "infinite",
								"unsafeMemoryAccess(uint256[] memory,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201120e86fc0cb85fbfe2821bf78188382c7d4ece4835f2883e005ffc8d415a13464736f6c63430008190033",
									".code": [
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/NftV1Contract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202375fd1075794df275e0f20fe9579dcbe9574a711fb1e7a7f57a93462bbc6e2264736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202375fd1075794df275e0f20fe9579dcbe9574a711fb1e7a7f57a93462bbc6e2264736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 PUSH22 0xFD1075794DF275E0F20FE9579DCBE9574A711FB1E7A7 CREATE2 PUSH27 0x93462BBC6E2264736F6C6343000819003300000000000000000000 ",
							"sourceMap": "1245:2685:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1245:2685:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202375fd1075794df275e0f20fe9579dcbe9574a711fb1e7a7f57a93462bbc6e2264736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 PUSH22 0xFD1075794DF275E0F20FE9579DCBE9574A711FB1E7A7 CREATE2 PUSH27 0x93462BBC6E2264736F6C6343000819003300000000000000000000 ",
							"sourceMap": "1245:2685:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202375fd1075794df275e0f20fe9579dcbe9574a711fb1e7a7f57a93462bbc6e2264736f6c63430008190033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/NftV1Contract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c768e9f07139cdaaf0930d7ee5c703cc97d70fbe12c1df9d88b0799807262ffb64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c768e9f07139cdaaf0930d7ee5c703cc97d70fbe12c1df9d88b0799807262ffb64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 PUSH9 0xE9F07139CDAAF0930D PUSH31 0xE5C703CC97D70FBE12C1DF9D88B0799807262FFB64736F6C63430008190033 ",
							"sourceMap": "203:14914:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:14914:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c768e9f07139cdaaf0930d7ee5c703cc97d70fbe12c1df9d88b0799807262ffb64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 PUSH9 0xE9F07139CDAAF0930D PUSH31 0xE5C703CC97D70FBE12C1DF9D88B0799807262FFB64736F6C63430008190033 ",
							"sourceMap": "203:14914:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c768e9f07139cdaaf0930d7ee5c703cc97d70fbe12c1df9d88b0799807262ffb64736f6c63430008190033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/NftV1Contract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NftV1Contract.sol": {
				"NftV1Collection": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_tokenURI",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_tokenURI",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "mintUniqueNFT",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "to",
									"type": "address[]"
								},
								{
									"internalType": "string",
									"name": "_tokenURI",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "mintUniqueNFT",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "newuri",
									"type": "string"
								}
							],
							"name": "setURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NftV1Contract.sol\":172:2367  contract NftV1Collection is ERC1155, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/NftV1Contract.sol\":255:256  0 */\n  0x00\n    /* \"contracts/NftV1Contract.sol\":228:256  uint256 private _tokenId = 0 */\n  0x04\n  sstore\n    /* \"contracts/NftV1Contract.sol\":368:533  constructor(address initialOwner, string memory name, string memory symbol) ERC1155(\"\") Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1251:1313  constructor(string memory uri_) {... */\n  0x40\n  dup1\n  mload\n  0x20\n  dup2\n  add\n  swap1\n  swap2\n  mstore\n  0x00\n  dup2\n  mstore\n    /* \"contracts/NftV1Contract.sol\":464:476  initialOwner */\n  dup4\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1306  _setURI(uri_) */\n  tag_8\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1251:1313  constructor(string memory uri_) {... */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1300  _setURI */\n  tag_9\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1306  _setURI(uri_) */\n  jump\t// in\ntag_8:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1747:1798   */\n  mstore\n    /* \"#utility.yul\":1720:1738   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_14\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_14:\n  pop\n    /* \"contracts/NftV1Contract.sol\":488:493  _name */\n  0x05\n    /* \"contracts/NftV1Contract.sol\":488:500  _name = name */\n  tag_17\n    /* \"contracts/NftV1Contract.sol\":496:500  name */\n  dup4\n    /* \"contracts/NftV1Contract.sol\":488:493  _name */\n  dup3\n    /* \"contracts/NftV1Contract.sol\":488:500  _name = name */\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n    /* \"contracts/NftV1Contract.sol\":510:517  _symbol */\n  0x06\n    /* \"contracts/NftV1Contract.sol\":510:526  _symbol = symbol */\n  tag_19\n    /* \"contracts/NftV1Contract.sol\":520:526  symbol */\n  dup3\n    /* \"contracts/NftV1Contract.sol\":510:517  _symbol */\n  dup3\n    /* \"contracts/NftV1Contract.sol\":510:526  _symbol = symbol */\n  tag_18\n  jump\t// in\ntag_19:\n  pop\n    /* \"contracts/NftV1Contract.sol\":368:533  constructor(address initialOwner, string memory name, string memory symbol) ERC1155(\"\") Ownable(initialOwner) {... */\n  pop\n  pop\n  pop\n    /* \"contracts/NftV1Contract.sol\":172:2367  contract NftV1Collection is ERC1155, Ownable {... */\n  jump(tag_30)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10352  _uri */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10361  _uri = newuri */\n  tag_22\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10355:10361  newuri */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10352  _uri */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10361  _uri = newuri */\n  tag_18\n  jump\t// in\ntag_22:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x03\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_24:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:862   */\ntag_25:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_33:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_35\n  tag_24\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_37\n  tag_24\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":709:712   */\n  dup7\n    /* \"#utility.yul\":702:706   */\n  0x20\n    /* \"#utility.yul\":697:699   */\n  dup6\n    /* \"#utility.yul\":689:695   */\n  dup9\n    /* \"#utility.yul\":685:700   */\n  add\n    /* \"#utility.yul\":681:707   */\n  add\n    /* \"#utility.yul\":678:713   */\n  gt\n    /* \"#utility.yul\":675:730   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":726:727   */\n  0x00\n    /* \"#utility.yul\":723:724   */\n  dup1\n    /* \"#utility.yul\":716:728   */\n  revert\n    /* \"#utility.yul\":675:730   */\ntag_38:\n    /* \"#utility.yul\":783:785   */\n  dup4\n    /* \"#utility.yul\":776:780   */\n  0x20\n    /* \"#utility.yul\":768:774   */\n  dup8\n    /* \"#utility.yul\":764:781   */\n  add\n    /* \"#utility.yul\":757:761   */\n  0x20\n    /* \"#utility.yul\":749:755   */\n  dup4\n    /* \"#utility.yul\":745:762   */\n  add\n    /* \"#utility.yul\":739:786   */\n  mcopy\n    /* \"#utility.yul\":830:831   */\n  0x00\n    /* \"#utility.yul\":823:827   */\n  0x20\n    /* \"#utility.yul\":818:820   */\n  dup6\n    /* \"#utility.yul\":810:816   */\n  dup4\n    /* \"#utility.yul\":806:821   */\n  add\n    /* \"#utility.yul\":802:828   */\n  add\n    /* \"#utility.yul\":795:832   */\n  mstore\n    /* \"#utility.yul\":850:856   */\n  dup1\n    /* \"#utility.yul\":841:856   */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":146:862   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":867:1596   */\ntag_3:\n    /* \"#utility.yul\":975:981   */\n  0x00\n    /* \"#utility.yul\":983:989   */\n  dup1\n    /* \"#utility.yul\":991:997   */\n  0x00\n    /* \"#utility.yul\":1044:1046   */\n  0x60\n    /* \"#utility.yul\":1032:1041   */\n  dup5\n    /* \"#utility.yul\":1023:1030   */\n  dup7\n    /* \"#utility.yul\":1019:1042   */\n  sub\n    /* \"#utility.yul\":1015:1047   */\n  slt\n    /* \"#utility.yul\":1012:1064   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1060:1061   */\n  0x00\n    /* \"#utility.yul\":1057:1058   */\n  dup1\n    /* \"#utility.yul\":1050:1062   */\n  revert\n    /* \"#utility.yul\":1012:1064   */\ntag_40:\n    /* \"#utility.yul\":1086:1102   */\n  dup4\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1131:1162   */\n  dup2\n  and\n    /* \"#utility.yul\":1121:1163   */\n  dup2\n  eq\n    /* \"#utility.yul\":1111:1181   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1177:1178   */\n  0x00\n    /* \"#utility.yul\":1174:1175   */\n  dup1\n    /* \"#utility.yul\":1167:1179   */\n  revert\n    /* \"#utility.yul\":1111:1181   */\ntag_41:\n    /* \"#utility.yul\":1249:1251   */\n  0x20\n    /* \"#utility.yul\":1234:1252   */\n  dup6\n  add\n    /* \"#utility.yul\":1228:1253   */\n  mload\n    /* \"#utility.yul\":1200:1205   */\n  swap1\n  swap4\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1302:1316   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1299:1333   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1329:1330   */\n  0x00\n    /* \"#utility.yul\":1326:1327   */\n  dup1\n    /* \"#utility.yul\":1319:1331   */\n  revert\n    /* \"#utility.yul\":1299:1333   */\ntag_42:\n    /* \"#utility.yul\":1352:1413   */\n  tag_43\n    /* \"#utility.yul\":1405:1412   */\n  dup8\n    /* \"#utility.yul\":1396:1402   */\n  dup4\n    /* \"#utility.yul\":1385:1394   */\n  dup9\n    /* \"#utility.yul\":1381:1403   */\n  add\n    /* \"#utility.yul\":1352:1413   */\n  tag_25\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1342:1413   */\n  swap4\n  pop\n    /* \"#utility.yul\":1459:1461   */\n  0x40\n    /* \"#utility.yul\":1448:1457   */\n  dup7\n    /* \"#utility.yul\":1444:1462   */\n  add\n    /* \"#utility.yul\":1438:1463   */\n  mload\n    /* \"#utility.yul\":1422:1463   */\n  swap2\n  pop\n    /* \"#utility.yul\":1488:1490   */\n  dup1\n    /* \"#utility.yul\":1478:1486   */\n  dup3\n    /* \"#utility.yul\":1475:1491   */\n  gt\n    /* \"#utility.yul\":1472:1508   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1504:1505   */\n  0x00\n    /* \"#utility.yul\":1501:1502   */\n  dup1\n    /* \"#utility.yul\":1494:1506   */\n  revert\n    /* \"#utility.yul\":1472:1508   */\ntag_44:\n  pop\n    /* \"#utility.yul\":1527:1590   */\n  tag_45\n    /* \"#utility.yul\":1582:1589   */\n  dup7\n    /* \"#utility.yul\":1571:1579   */\n  dup3\n    /* \"#utility.yul\":1560:1569   */\n  dup8\n    /* \"#utility.yul\":1556:1580   */\n  add\n    /* \"#utility.yul\":1527:1590   */\n  tag_25\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1517:1590   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":867:1596   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1809:2189   */\ntag_26:\n    /* \"#utility.yul\":1888:1889   */\n  0x01\n    /* \"#utility.yul\":1884:1896   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1931:1943   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1952:2013   */\n  tag_48\n  jumpi\n    /* \"#utility.yul\":2006:2010   */\n  0x7f\n    /* \"#utility.yul\":1998:2004   */\n  dup3\n    /* \"#utility.yul\":1994:2011   */\n  and\n    /* \"#utility.yul\":1984:2011   */\n  swap2\n  pop\n    /* \"#utility.yul\":1952:2013   */\ntag_48:\n    /* \"#utility.yul\":2059:2061   */\n  0x20\n    /* \"#utility.yul\":2051:2057   */\n  dup3\n    /* \"#utility.yul\":2048:2062   */\n  lt\n    /* \"#utility.yul\":2028:2046   */\n  dup2\n    /* \"#utility.yul\":2025:2063   */\n  sub\n    /* \"#utility.yul\":2022:2183   */\n  tag_49\n  jumpi\n    /* \"#utility.yul\":2105:2115   */\n  0x4e487b71\n    /* \"#utility.yul\":2100:2103   */\n  0xe0\n    /* \"#utility.yul\":2096:2116   */\n  shl\n    /* \"#utility.yul\":2093:2094   */\n  0x00\n    /* \"#utility.yul\":2086:2117   */\n  mstore\n    /* \"#utility.yul\":2140:2144   */\n  0x22\n    /* \"#utility.yul\":2137:2138   */\n  0x04\n    /* \"#utility.yul\":2130:2145   */\n  mstore\n    /* \"#utility.yul\":2168:2172   */\n  0x24\n    /* \"#utility.yul\":2165:2166   */\n  0x00\n    /* \"#utility.yul\":2158:2173   */\n  revert\n    /* \"#utility.yul\":2022:2183   */\ntag_49:\n  pop\n    /* \"#utility.yul\":1809:2189   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2320:2838   */\ntag_28:\n    /* \"#utility.yul\":2422:2424   */\n  0x1f\n    /* \"#utility.yul\":2417:2420   */\n  dup3\n    /* \"#utility.yul\":2414:2425   */\n  gt\n    /* \"#utility.yul\":2411:2832   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":2458:2463   */\n  dup1\n    /* \"#utility.yul\":2455:2456   */\n  0x00\n    /* \"#utility.yul\":2448:2464   */\n  mstore\n    /* \"#utility.yul\":2502:2506   */\n  0x20\n    /* \"#utility.yul\":2499:2500   */\n  0x00\n    /* \"#utility.yul\":2489:2507   */\n  keccak256\n    /* \"#utility.yul\":2572:2574   */\n  0x1f\n    /* \"#utility.yul\":2560:2570   */\n  dup5\n    /* \"#utility.yul\":2556:2575   */\n  add\n    /* \"#utility.yul\":2553:2554   */\n  0x05\n    /* \"#utility.yul\":2549:2576   */\n  shr\n    /* \"#utility.yul\":2543:2547   */\n  dup2\n    /* \"#utility.yul\":2539:2577   */\n  add\n    /* \"#utility.yul\":2608:2612   */\n  0x20\n    /* \"#utility.yul\":2596:2606   */\n  dup6\n    /* \"#utility.yul\":2593:2613   */\n  lt\n    /* \"#utility.yul\":2590:2637   */\n  iszero\n  tag_53\n  jumpi\n  pop\n    /* \"#utility.yul\":2631:2635   */\n  dup1\n    /* \"#utility.yul\":2590:2637   */\ntag_53:\n    /* \"#utility.yul\":2686:2688   */\n  0x1f\n    /* \"#utility.yul\":2681:2684   */\n  dup5\n    /* \"#utility.yul\":2677:2689   */\n  add\n    /* \"#utility.yul\":2674:2675   */\n  0x05\n    /* \"#utility.yul\":2670:2690   */\n  shr\n    /* \"#utility.yul\":2664:2668   */\n  dup3\n    /* \"#utility.yul\":2660:2691   */\n  add\n    /* \"#utility.yul\":2650:2691   */\n  swap2\n  pop\n    /* \"#utility.yul\":2741:2822   */\ntag_54:\n    /* \"#utility.yul\":2759:2761   */\n  dup2\n    /* \"#utility.yul\":2752:2757   */\n  dup2\n    /* \"#utility.yul\":2749:2762   */\n  lt\n    /* \"#utility.yul\":2741:2822   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":2818:2819   */\n  0x00\n    /* \"#utility.yul\":2804:2820   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2785:2786   */\n  0x01\n    /* \"#utility.yul\":2774:2787   */\n  add\n    /* \"#utility.yul\":2741:2822   */\n  jump(tag_54)\ntag_56:\n    /* \"#utility.yul\":2745:2748   */\n  pop\n  pop\n    /* \"#utility.yul\":2411:2832   */\ntag_52:\n    /* \"#utility.yul\":2320:2838   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3014:4359   */\ntag_18:\n    /* \"#utility.yul\":3134:3144   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":3156:3186   */\n  dup2\n  gt\n    /* \"#utility.yul\":3153:3209   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":3189:3207   */\n  tag_60\n  tag_24\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":3218:3315   */\n  tag_61\n    /* \"#utility.yul\":3308:3314   */\n  dup2\n    /* \"#utility.yul\":3268:3306   */\n  tag_62\n    /* \"#utility.yul\":3300:3304   */\n  dup5\n    /* \"#utility.yul\":3294:3305   */\n  sload\n    /* \"#utility.yul\":3268:3306   */\n  tag_26\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":3262:3266   */\n  dup5\n    /* \"#utility.yul\":3218:3315   */\n  tag_28\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":3370:3374   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3427:3429   */\n  0x1f\n    /* \"#utility.yul\":3416:3430   */\n  dup4\n  gt\n    /* \"#utility.yul\":3444:3445   */\n  0x01\n    /* \"#utility.yul\":3439:4102   */\n  dup2\n  eq\n  tag_64\n  jumpi\n    /* \"#utility.yul\":4146:4147   */\n  0x00\n    /* \"#utility.yul\":4163:4169   */\n  dup5\n    /* \"#utility.yul\":4160:4249   */\n  iszero\n  tag_65\n  jumpi\n  pop\n    /* \"#utility.yul\":4215:4234   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":4209:4235   */\n  mload\n    /* \"#utility.yul\":4160:4249   */\ntag_65:\n  not(0x00)\n    /* \"#utility.yul\":2971:2972   */\n  0x03\n    /* \"#utility.yul\":2967:2978   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2963:2987   */\n  shr\n    /* \"#utility.yul\":2959:2988   */\n  not\n    /* \"#utility.yul\":2949:2989   */\n  and\n    /* \"#utility.yul\":2995:2996   */\n  0x01\n    /* \"#utility.yul\":2991:3002   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2946:3003   */\n  or\n    /* \"#utility.yul\":4262:4343   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3409:4353   */\n  jump(tag_63)\n    /* \"#utility.yul\":3439:4102   */\ntag_64:\n    /* \"#utility.yul\":2267:2268   */\n  0x00\n    /* \"#utility.yul\":2260:2274   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2304:2308   */\n  0x20\n    /* \"#utility.yul\":2291:2309   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3475:3495   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3593:3829   */\ntag_68:\n    /* \"#utility.yul\":3607:3614   */\n  dup3\n    /* \"#utility.yul\":3604:3605   */\n  dup2\n    /* \"#utility.yul\":3601:3615   */\n  lt\n    /* \"#utility.yul\":3593:3829   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":3696:3715   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3690:3716   */\n  mload\n    /* \"#utility.yul\":3675:3717   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3788:3815   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3756:3757   */\n  0x01\n    /* \"#utility.yul\":3744:3758   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3623:3642   */\n  dup5\n  add\n    /* \"#utility.yul\":3593:3829   */\n  jump(tag_68)\ntag_70:\n    /* \"#utility.yul\":3597:3600   */\n  pop\n    /* \"#utility.yul\":3857:3863   */\n  dup6\n    /* \"#utility.yul\":3848:3855   */\n  dup3\n    /* \"#utility.yul\":3845:3864   */\n  lt\n    /* \"#utility.yul\":3842:4043   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":3918:3937   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3912:3938   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":4001:4002   */\n  0x03\n    /* \"#utility.yul\":3997:4011   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":4013:4016   */\n  0xf8\n    /* \"#utility.yul\":3993:4017   */\n  and\n    /* \"#utility.yul\":3989:4026   */\n  shr\n    /* \"#utility.yul\":3985:4027   */\n  not\n    /* \"#utility.yul\":3970:4028   */\n  and\n    /* \"#utility.yul\":3955:4029   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3842:4043   */\ntag_71:\n  pop\n  pop\n    /* \"#utility.yul\":4089:4090   */\n  0x01\n    /* \"#utility.yul\":4080:4086   */\n  dup5\n    /* \"#utility.yul\":4077:4078   */\n  0x01\n    /* \"#utility.yul\":4073:4087   */\n  shl\n    /* \"#utility.yul\":4069:4091   */\n  add\n    /* \"#utility.yul\":4063:4067   */\n  dup6\n    /* \"#utility.yul\":4056:4092   */\n  sstore\n    /* \"#utility.yul\":3409:4353   */\ntag_63:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3014:4359   */\n  pop\n  pop\n  jump\t// out\ntag_30:\n    /* \"contracts/NftV1Contract.sol\":172:2367  contract NftV1Collection is ERC1155, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NftV1Contract.sol\":172:2367  contract NftV1Collection is ERC1155, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x02fe5305\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x0a1e88d1\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x17d70f7c\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa7fd4a02\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xba7aef43\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_3:\n      tag_22\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n        /* \"#utility.yul\":597:622   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":585:587   */\n      0x20\n        /* \"#utility.yul\":570:588   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n        /* \"#utility.yul\":1184:1198   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1177:1199   */\n      iszero\n        /* \"#utility.yul\":1159:1200   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1147:1149   */\n      0x20\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      tag_26\n        /* \"#utility.yul\":1019:1206   */\n      jump\n        /* \"contracts/NftV1Contract.sol\":539:626  function setURI(string memory newuri) public onlyOwner {... */\n    tag_5:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"contracts/NftV1Contract.sol\":1972:2052  function name() public view returns(string memory) {... */\n    tag_6:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n        /* \"contracts/NftV1Contract.sol\":1043:1471  function mintUniqueNFT(address to, string memory _tokenURI, uint256 value) external  onlyOwner returns (uint256[] memory) {... */\n    tag_7:\n      tag_42\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_8:\n      tag_38\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n        /* \"contracts/NftV1Contract.sol\":2276:2365  function tokenId() public view virtual returns (uint256) {... */\n    tag_9:\n        /* \"contracts/NftV1Contract.sol\":2350:2358  _tokenId */\n      sload(0x04)\n        /* \"contracts/NftV1Contract.sol\":2276:2365  function tokenId() public view virtual returns (uint256) {... */\n      jump(tag_22)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n    tag_10:\n      tag_34\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n    tag_11:\n      tag_42\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_34\n      tag_66\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_13:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n        /* \"contracts/NftV1Contract.sol\":2058:2142  function symbol() public view returns(string memory) {... */\n    tag_14:\n      tag_38\n      tag_72\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_15:\n      tag_34\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n        /* \"contracts/NftV1Contract.sol\":1527:1966  function mintUniqueNFT(address[] memory to, string memory _tokenURI, uint256 value) external onlyOwner returns (uint256[] memory) {... */\n    tag_16:\n      tag_42\n      tag_79\n      calldatasize\n      0x04\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n        /* \"contracts/NftV1Contract.sol\":776:1037  function mint(address to, string memory _tokenURI, uint256 value) external onlyOwner returns (uint256) {... */\n    tag_17:\n      tag_22\n      tag_84\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n        /* \"contracts/NftV1Contract.sol\":2148:2270  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_18:\n      tag_38\n      tag_88\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_19:\n      tag_28\n      tag_92\n      calldatasize\n      0x04\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_20:\n      tag_34\n      tag_97\n      calldatasize\n      0x04\n      tag_98\n      jump\t// in\n    tag_97:\n      tag_99\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n      tag_34\n      tag_101\n      calldatasize\n      0x04\n      tag_102\n      jump\t// in\n    tag_101:\n      tag_103\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2324:2331  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2363  _balances[id] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2372  _balances[id][account] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_104:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1482:1486  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1558  interfaceId == type(IERC1155).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x6cdb3d13)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1626  interfaceId == type(IERC1155).interfaceId ||... */\n      tag_106\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1574:1626  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      dup3\n      and\n      shl(0xe2, 0x03a24d07)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1626  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1678  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_104\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1642:1678  super.supportsInterface(interfaceId) */\n      tag_104\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      jump\n        /* \"contracts/NftV1Contract.sol\":539:626  function setURI(string memory newuri) public onlyOwner {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_111:\n        /* \"contracts/NftV1Contract.sol\":604:619  _setURI(newuri) */\n      tag_114\n        /* \"contracts/NftV1Contract.sol\":612:618  newuri */\n      dup2\n        /* \"contracts/NftV1Contract.sol\":604:611  _setURI */\n      tag_115\n        /* \"contracts/NftV1Contract.sol\":604:619  _setURI(newuri) */\n      jump\t// in\n    tag_114:\n        /* \"contracts/NftV1Contract.sol\":539:626  function setURI(string memory newuri) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NftV1Contract.sol\":1972:2052  function name() public view returns(string memory) {... */\n    tag_39:\n        /* \"contracts/NftV1Contract.sol\":2008:2021  string memory */\n      0x60\n        /* \"contracts/NftV1Contract.sol\":2040:2045  _name */\n      0x05\n        /* \"contracts/NftV1Contract.sol\":2033:2045  return _name */\n      dup1\n      sload\n      tag_117\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_119\n      swap1\n      tag_118\n      jump\t// in\n    tag_119:\n      dup1\n      iszero\n      tag_120\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_121\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_120)\n    tag_121:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_122:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_122\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_120:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/NftV1Contract.sol\":1972:2052  function name() public view returns(string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NftV1Contract.sol\":1043:1471  function mintUniqueNFT(address to, string memory _tokenURI, uint256 value) external  onlyOwner returns (uint256[] memory) {... */\n    tag_45:\n        /* \"contracts/NftV1Contract.sol\":1147:1163  uint256[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_124:\n        /* \"contracts/NftV1Contract.sol\":1174:1194  uint256[] memory ids */\n      0x00\n        /* \"contracts/NftV1Contract.sol\":1211:1216  value */\n      dup3\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/NftV1Contract.sol\":1197:1217  new uint256[](value) */\n      dup2\n      gt\n      iszero\n      tag_127\n      jumpi\n      tag_127\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_129\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_129:\n      pop\n        /* \"contracts/NftV1Contract.sol\":1174:1217  uint256[] memory ids = new uint256[](value) */\n      swap1\n      pop\n        /* \"contracts/NftV1Contract.sol\":1231:1240  uint256 i */\n      0x00\n        /* \"contracts/NftV1Contract.sol\":1227:1437  for(uint256 i = 0; i < value; i++) {... */\n    tag_130:\n        /* \"contracts/NftV1Contract.sol\":1250:1255  value */\n      dup4\n        /* \"contracts/NftV1Contract.sol\":1246:1247  i */\n      dup2\n        /* \"contracts/NftV1Contract.sol\":1246:1255  i < value */\n      lt\n        /* \"contracts/NftV1Contract.sol\":1227:1437  for(uint256 i = 0; i < value; i++) {... */\n      iszero\n      tag_131\n      jumpi\n        /* \"contracts/NftV1Contract.sol\":1296:1304  _tokenId */\n      0x04\n        /* \"contracts/NftV1Contract.sol\":1296:1306  _tokenId++ */\n      dup1\n      sload\n        /* \"contracts/NftV1Contract.sol\":1276:1293  uint256 newItemId */\n      0x00\n      swap2\n      dup3\n        /* \"contracts/NftV1Contract.sol\":1296:1306  _tokenId++ */\n      tag_133\n      dup4\n      tag_134\n      jump\t// in\n    tag_133:\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"contracts/NftV1Contract.sol\":1276:1306  uint256 newItemId = _tokenId++ */\n      swap1\n      pop\n        /* \"contracts/NftV1Contract.sol\":1320:1347  _mint(to, newItemId, 1, \"\") */\n      tag_135\n        /* \"contracts/NftV1Contract.sol\":1326:1328  to */\n      dup8\n        /* \"contracts/NftV1Contract.sol\":1330:1339  newItemId */\n      dup3\n        /* \"contracts/NftV1Contract.sol\":1341:1342  1 */\n      0x01\n        /* \"contracts/NftV1Contract.sol\":1320:1347  _mint(to, newItemId, 1, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/NftV1Contract.sol\":1320:1325  _mint */\n      tag_136\n        /* \"contracts/NftV1Contract.sol\":1320:1347  _mint(to, newItemId, 1, \"\") */\n      jump\t// in\n    tag_135:\n        /* \"contracts/NftV1Contract.sol\":1361:1395  _setTokenURI(newItemId, _tokenURI) */\n      tag_137\n        /* \"contracts/NftV1Contract.sol\":1374:1383  newItemId */\n      dup2\n        /* \"contracts/NftV1Contract.sol\":1385:1394  _tokenURI */\n      dup8\n        /* \"contracts/NftV1Contract.sol\":1361:1373  _setTokenURI */\n      tag_138\n        /* \"contracts/NftV1Contract.sol\":1361:1395  _setTokenURI(newItemId, _tokenURI) */\n      jump\t// in\n    tag_137:\n        /* \"contracts/NftV1Contract.sol\":1418:1427  newItemId */\n      dup1\n        /* \"contracts/NftV1Contract.sol\":1409:1412  ids */\n      dup4\n        /* \"contracts/NftV1Contract.sol\":1413:1414  i */\n      dup4\n        /* \"contracts/NftV1Contract.sol\":1409:1415  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_140\n      jumpi\n      tag_140\n      tag_141\n      jump\t// in\n    tag_140:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/NftV1Contract.sol\":1409:1427  ids[i] = newItemId */\n      mstore\n      pop\n        /* \"contracts/NftV1Contract.sol\":1257:1260  i++ */\n      0x01\n      add\n        /* \"contracts/NftV1Contract.sol\":1227:1437  for(uint256 i = 0; i < value; i++) {... */\n      jump(tag_130)\n    tag_131:\n      pop\n        /* \"contracts/NftV1Contract.sol\":1461:1464  ids */\n      swap5\n        /* \"contracts/NftV1Contract.sol\":1043:1471  function mintUniqueNFT(address to, string memory _tokenURI, uint256 value) external  onlyOwner returns (uint256[] memory) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2144:2157  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2176:2180  _uri */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2169:2180  return _uri */\n      dup1\n      sload\n      tag_143\n      swap1\n      tag_118\n      jump\t// in\n    tag_143:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_144\n      swap1\n      tag_118\n      jump\t// in\n    tag_144:\n      dup1\n      iszero\n      tag_145\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_146\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_145)\n    tag_146:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_147:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_147\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n    tag_59:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4265  from != sender */\n      dup7\n      and\n      dup2\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4300  from != sender && !isApprovedForAll(from, sender) */\n      tag_152\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4300  isApprovedForAll(from, sender) */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4287:4291  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4293:4299  sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4286  isApprovedForAll */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4300  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4269:4300  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4300  from != sender && !isApprovedForAll(from, sender) */\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4247:4376  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_154\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4352:4358  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4360:4364  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4323:4365  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      shl(0xe1, 0x711bec91)\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap3\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4247:4376  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4436  _safeBatchTransferFrom(from, to, ids, values, data) */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4408:4412  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4414:4416  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4418:4421  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4423:4429  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4431:4435  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4407  _safeBatchTransferFrom */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4436  _safeBatchTransferFrom(from, to, ids, values, data) */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4198:4443  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n    tag_63:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2660:2676  uint256[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2711:2714  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2711:2721  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2700  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2707  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2721  accounts.length != ids.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2688:2809  if (accounts.length != ids.length) {... */\n      tag_160\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2770:2780  ids.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2782:2797  accounts.length */\n      dup4\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2744:2798  ERC1155InvalidArrayLength(ids.length, accounts.length) */\n      mload(0x40)\n      shl(0xe0, 0x5b059991)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":11000:11025   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":11041:11059   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11034:11068   */\n      mstore\n        /* \"#utility.yul\":10973:10991   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2744:2798  ERC1155InvalidArrayLength(ids.length, accounts.length) */\n      tag_155\n        /* \"#utility.yul\":10826:11074   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2688:2809  if (accounts.length != ids.length) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2819:2849  uint256[] memory batchBalances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2866:2874  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2866:2881  accounts.length */\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2852:2882  new uint256[](accounts.length) */\n      dup2\n      gt\n      iszero\n      tag_164\n      jumpi\n      tag_164\n      tag_128\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_165\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_165:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2819:2882  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2898:2907  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2917:2925  accounts */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2917:2932  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2913:2914  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2913:2932  i < accounts.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_167\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2972:3040  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:3012  accounts.unsafeMemoryAccess(i) */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:2990  accounts */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3010:3011  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:3009  accounts.unsafeMemoryAccess */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:3012  accounts.unsafeMemoryAccess(i) */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3039  ids.unsafeMemoryAccess(i) */\n      tag_23\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3017  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3037:3038  i */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3036  ids.unsafeMemoryAccess */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3039  ids.unsafeMemoryAccess(i) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2972:3040  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:2966  batchBalances */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2967:2968  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:2969  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_175\n      jumpi\n      tag_175\n      tag_141\n      jump\t// in\n    tag_175:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:3040  batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2934:2937  ++i */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_166)\n    tag_167:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3068:3081  batchBalances */\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump\t// out\n        /* \"contracts/NftV1Contract.sol\":2058:2142  function symbol() public view returns(string memory) {... */\n    tag_72:\n        /* \"contracts/NftV1Contract.sol\":2096:2109  string memory */\n      0x60\n        /* \"contracts/NftV1Contract.sol\":2128:2135  _symbol */\n      0x06\n        /* \"contracts/NftV1Contract.sol\":2121:2135  return _symbol */\n      dup1\n      sload\n      tag_117\n      swap1\n      tag_118\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3293  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_189\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3274:3282  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3284:3292  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3259  _setApprovalForAll */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3293  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NftV1Contract.sol\":1527:1966  function mintUniqueNFT(address[] memory to, string memory _tokenURI, uint256 value) external onlyOwner returns (uint256[] memory) {... */\n    tag_81:\n        /* \"contracts/NftV1Contract.sol\":1639:1655  uint256[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_193\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_193:\n        /* \"contracts/NftV1Contract.sol\":1666:1686  uint256[] memory ids */\n      0x00\n        /* \"contracts/NftV1Contract.sol\":1703:1708  value */\n      dup3\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/NftV1Contract.sol\":1689:1709  new uint256[](value) */\n      dup2\n      gt\n      iszero\n      tag_196\n      jumpi\n      tag_196\n      tag_128\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_197\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_197:\n      pop\n        /* \"contracts/NftV1Contract.sol\":1666:1709  uint256[] memory ids = new uint256[](value) */\n      swap1\n      pop\n        /* \"contracts/NftV1Contract.sol\":1723:1732  uint256 i */\n      0x00\n        /* \"contracts/NftV1Contract.sol\":1719:1932  for(uint256 i = 0; i < value; i++) {... */\n    tag_198:\n        /* \"contracts/NftV1Contract.sol\":1742:1747  value */\n      dup4\n        /* \"contracts/NftV1Contract.sol\":1738:1739  i */\n      dup2\n        /* \"contracts/NftV1Contract.sol\":1738:1747  i < value */\n      lt\n        /* \"contracts/NftV1Contract.sol\":1719:1932  for(uint256 i = 0; i < value; i++) {... */\n      iszero\n      tag_131\n      jumpi\n        /* \"contracts/NftV1Contract.sol\":1788:1796  _tokenId */\n      0x04\n        /* \"contracts/NftV1Contract.sol\":1788:1798  _tokenId++ */\n      dup1\n      sload\n        /* \"contracts/NftV1Contract.sol\":1768:1785  uint256 newItemId */\n      0x00\n      swap2\n      dup3\n        /* \"contracts/NftV1Contract.sol\":1788:1798  _tokenId++ */\n      tag_201\n      dup4\n      tag_134\n      jump\t// in\n    tag_201:\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"contracts/NftV1Contract.sol\":1768:1798  uint256 newItemId = _tokenId++ */\n      swap1\n      pop\n        /* \"contracts/NftV1Contract.sol\":1812:1842  _mint(to[i], newItemId, 1, \"\") */\n      tag_202\n        /* \"contracts/NftV1Contract.sol\":1818:1820  to */\n      dup8\n        /* \"contracts/NftV1Contract.sol\":1821:1822  i */\n      dup4\n        /* \"contracts/NftV1Contract.sol\":1818:1823  to[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_204\n      jumpi\n      tag_204\n      tag_141\n      jump\t// in\n    tag_204:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/NftV1Contract.sol\":1825:1834  newItemId */\n      dup3\n        /* \"contracts/NftV1Contract.sol\":1836:1837  1 */\n      0x01\n        /* \"contracts/NftV1Contract.sol\":1812:1842  _mint(to[i], newItemId, 1, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/NftV1Contract.sol\":1812:1817  _mint */\n      tag_136\n        /* \"contracts/NftV1Contract.sol\":1812:1842  _mint(to[i], newItemId, 1, \"\") */\n      jump\t// in\n    tag_202:\n        /* \"contracts/NftV1Contract.sol\":1856:1890  _setTokenURI(newItemId, _tokenURI) */\n      tag_205\n        /* \"contracts/NftV1Contract.sol\":1869:1878  newItemId */\n      dup2\n        /* \"contracts/NftV1Contract.sol\":1880:1889  _tokenURI */\n      dup8\n        /* \"contracts/NftV1Contract.sol\":1856:1868  _setTokenURI */\n      tag_138\n        /* \"contracts/NftV1Contract.sol\":1856:1890  _setTokenURI(newItemId, _tokenURI) */\n      jump\t// in\n    tag_205:\n        /* \"contracts/NftV1Contract.sol\":1913:1922  newItemId */\n      dup1\n        /* \"contracts/NftV1Contract.sol\":1904:1907  ids */\n      dup4\n        /* \"contracts/NftV1Contract.sol\":1908:1909  i */\n      dup4\n        /* \"contracts/NftV1Contract.sol\":1904:1910  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_207\n      jumpi\n      tag_207\n      tag_141\n      jump\t// in\n    tag_207:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/NftV1Contract.sol\":1904:1922  ids[i] = newItemId */\n      mstore\n      pop\n        /* \"contracts/NftV1Contract.sol\":1749:1752  i++ */\n      0x01\n      add\n        /* \"contracts/NftV1Contract.sol\":1719:1932  for(uint256 i = 0; i < value; i++) {... */\n      jump(tag_198)\n        /* \"contracts/NftV1Contract.sol\":776:1037  function mint(address to, string memory _tokenURI, uint256 value) external onlyOwner returns (uint256) {... */\n    tag_85:\n        /* \"contracts/NftV1Contract.sol\":870:877  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_209:\n        /* \"contracts/NftV1Contract.sol\":909:917  _tokenId */\n      0x04\n        /* \"contracts/NftV1Contract.sol\":909:919  _tokenId++ */\n      dup1\n      sload\n        /* \"contracts/NftV1Contract.sol\":889:906  uint256 newItemId */\n      0x00\n      swap2\n      dup3\n        /* \"contracts/NftV1Contract.sol\":909:919  _tokenId++ */\n      tag_211\n      dup4\n      tag_134\n      jump\t// in\n    tag_211:\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"contracts/NftV1Contract.sol\":889:919  uint256 newItemId = _tokenId++ */\n      swap1\n      pop\n        /* \"contracts/NftV1Contract.sol\":929:960  _mint(to, newItemId, value, \"\") */\n      tag_212\n        /* \"contracts/NftV1Contract.sol\":935:937  to */\n      dup6\n        /* \"contracts/NftV1Contract.sol\":939:948  newItemId */\n      dup3\n        /* \"contracts/NftV1Contract.sol\":950:955  value */\n      dup6\n        /* \"contracts/NftV1Contract.sol\":929:960  _mint(to, newItemId, value, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/NftV1Contract.sol\":929:934  _mint */\n      tag_136\n        /* \"contracts/NftV1Contract.sol\":929:960  _mint(to, newItemId, value, \"\") */\n      jump\t// in\n    tag_212:\n        /* \"contracts/NftV1Contract.sol\":970:1004  _setTokenURI(newItemId, _tokenURI) */\n      tag_213\n        /* \"contracts/NftV1Contract.sol\":983:992  newItemId */\n      dup2\n        /* \"contracts/NftV1Contract.sol\":994:1003  _tokenURI */\n      dup6\n        /* \"contracts/NftV1Contract.sol\":970:982  _setTokenURI */\n      tag_138\n        /* \"contracts/NftV1Contract.sol\":970:1004  _setTokenURI(newItemId, _tokenURI) */\n      jump\t// in\n    tag_213:\n        /* \"contracts/NftV1Contract.sol\":1021:1030  newItemId */\n      swap5\n        /* \"contracts/NftV1Contract.sol\":776:1037  function mint(address to, string memory _tokenURI, uint256 value) external onlyOwner returns (uint256) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NftV1Contract.sol\":2148:2270  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_89:\n        /* \"contracts/NftV1Contract.sol\":2244:2263  _tokenURIs[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/NftV1Contract.sol\":2244:2254  _tokenURIs */\n      0x07\n        /* \"contracts/NftV1Contract.sol\":2244:2263  _tokenURIs[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/NftV1Contract.sol\":2237:2263  return _tokenURIs[tokenId] */\n      dup1\n      sload\n        /* \"contracts/NftV1Contract.sol\":2212:2225  string memory */\n      0x60\n      swap2\n        /* \"contracts/NftV1Contract.sol\":2244:2263  _tokenURIs[tokenId] */\n      swap1\n        /* \"contracts/NftV1Contract.sol\":2237:2263  return _tokenURIs[tokenId] */\n      tag_143\n      swap1\n      tag_118\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_94:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3507  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3457:3461  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3507  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3498  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3507  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3517  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3771  from != sender */\n      dup7\n      and\n      dup2\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3806  from != sender && !isApprovedForAll(from, sender) */\n      tag_223\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3806  isApprovedForAll(from, sender) */\n      tag_224\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3793:3797  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3799:3805  sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3792  isApprovedForAll */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3806  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3775:3806  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3806  from != sender && !isApprovedForAll(from, sender) */\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3753:3882  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_225\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3858:3864  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3866:3870  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3829:3871  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      shl(0xe1, 0x711bec91)\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap3\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3753:3882  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3935  _safeTransferFrom(from, to, id, value, data) */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3909:3913  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3915:3917  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3919:3921  id */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3923:3928  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3930:3934  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3908  _safeTransferFrom */\n      tag_228\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3935  _safeTransferFrom(from, to, id, value, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_230\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_230:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_232\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_232:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_114\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_238\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_238:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_179\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10352  _uri */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10361  _uri = newuri */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10355:10361  newuri */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10352  _uri */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10361  _uri = newuri */\n      tag_244\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10746:11092  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_136:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10842:10858  to == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10838:10926  if (to == address(0)) {... */\n      tag_246\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10912:10913  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10881:10915  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x2bfa23e7)\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10838:10926  if (to == address(0)) {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10936:10956  uint256[] memory ids */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10958:10981  uint256[] memory values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10985:11014  _asSingletonArrays(id, value) */\n      tag_248\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11004:11006  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11008:11013  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10985:11003  _asSingletonArrays */\n      tag_249\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10985:11014  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10935:11014  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11085  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11059:11060  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11063:11065  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11067:11070  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11072:11078  values */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11080:11084  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11050  _updateWithAcceptanceCheck */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11085  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      jump\t// in\n        /* \"contracts/NftV1Contract.sol\":637:766  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n    tag_138:\n        /* \"contracts/NftV1Contract.sol\":728:747  _tokenURIs[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/NftV1Contract.sol\":728:738  _tokenURIs */\n      0x07\n        /* \"contracts/NftV1Contract.sol\":728:747  _tokenURIs[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/NftV1Contract.sol\":728:759  _tokenURIs[tokenId] = _tokenURI */\n      tag_253\n        /* \"contracts/NftV1Contract.sol\":750:759  _tokenURI */\n      dup3\n        /* \"contracts/NftV1Contract.sol\":728:747  _tokenURIs[tokenId] */\n      dup3\n        /* \"contracts/NftV1Contract.sol\":728:759  _tokenURIs[tokenId] = _tokenURI */\n      tag_244\n      jump\t// in\n    tag_253:\n      pop\n        /* \"contracts/NftV1Contract.sol\":637:766  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9015:9460  function _safeBatchTransferFrom(... */\n    tag_158:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9208:9224  to == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9204:9292  if (to == address(0)) {... */\n      tag_256\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9278:9279  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9247:9281  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x2bfa23e7)\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9204:9292  if (to == address(0)) {... */\n    tag_256:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9305:9323  from == address(0) */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9301:9389  if (from == address(0)) {... */\n      tag_258\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9375:9376  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9346:9378  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe2, 0x6a0d45)\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9301:9389  if (from == address(0)) {... */\n    tag_258:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9453  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_260\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9425:9429  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9431:9433  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9435:9438  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9440:9446  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9448:9452  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9424  _updateWithAcceptanceCheck */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9453  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_260:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9015:9460  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4603:4800  function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4777:4781  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4768:4782  mul(pos, 0x20) */\n      swap1\n      dup2\n      mul\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4748:4783  add(add(arr, 0x20), mul(pos, 0x20)) */\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4742:4784  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4603:4800  function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x03\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13268:13583  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13375:13397  operator == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13371:13465  if (operator == address(0)) {... */\n      tag_265\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13451:13452  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13420:13454  ERC1155InvalidOperator(address(0)) */\n      mload(0x40)\n      shl(0xe8, 0xced3e1)\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13371:13465  if (operator == address(0)) {... */\n    tag_265:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13499  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13492  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13499  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13509  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13520  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":1159:1200   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13268:13583  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8151:8614  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_228:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8273:8289  to == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8269:8357  if (to == address(0)) {... */\n      tag_269\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8343:8344  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8312:8346  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x2bfa23e7)\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8269:8357  if (to == address(0)) {... */\n    tag_269:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8370:8388  from == address(0) */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8366:8454  if (from == address(0)) {... */\n      tag_271\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8440:8441  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8411:8443  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe2, 0x6a0d45)\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8366:8454  if (from == address(0)) {... */\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8464:8484  uint256[] memory ids */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8486:8509  uint256[] memory values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8513:8542  _asSingletonArrays(id, value) */\n      tag_273\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8532:8534  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8536:8541  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8513:8531  _asSingletonArrays */\n      tag_249\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8513:8542  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8463:8542  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8607  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_274\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8579:8583  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8585:8587  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8589:8592  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8594:8600  values */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8602:8606  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8578  _updateWithAcceptanceCheck */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8607  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8259:8614  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8151:8614  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16080:16929  function _asSingletonArrays(... */\n    tag_249:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16374:16378  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16368:16379  mload(0x40) */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16444:16445  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16429:16446  mstore(array1, 1) */\n      dup1\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16575:16579  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16563:16580  add(array1, 0x20) */\n      dup3\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16556:16591  mstore(add(array1, 0x20), element1) */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16692:16709  add(array1, 0x40) */\n      dup1\n      dup3\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16722:16739  mstore(array2, 1) */\n      swap4\n      dup5\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16188:16211  uint256[] memory array1 */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16759:16776  add(array2, 0x20) */\n      dup2\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16752:16787  mstore(add(array2, 0x20), element2) */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16895:16912  add(array2, 0x40) */\n      0x80\n      dup3\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16882:16913  mstore(0x40, add(array2, 0x40)) */\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16368:16379  mload(0x40) */\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16080:16929  function _asSingletonArrays(... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7004:7694  function _updateWithAcceptanceCheck(... */\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n      tag_277\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7213:7217  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7219:7221  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7223:7226  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7228:7234  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7212  _update */\n      tag_278\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n      jump\t// in\n    tag_277:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7265  to != address(0) */\n      dup5\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7245:7688  if (to != address(0)) {... */\n      tag_260\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7340  ids.length */\n      dup3\n      mload\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7344:7345  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7345  ids.length == 1 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n      tag_281\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7365:7375  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7403  ids.unsafeMemoryAccess(0) */\n      tag_282\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7381  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7365:7375  uint256 id */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7400  ids.unsafeMemoryAccess */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7403  ids.unsafeMemoryAccess(0) */\n      jump\t// in\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7365:7403  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7421:7434  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7465  values.unsafeMemoryAccess(0) */\n      tag_283\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7443  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7421:7434  uint256 value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7462  values.unsafeMemoryAccess */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7465  values.unsafeMemoryAccess(0) */\n      jump\t// in\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7421:7465  uint256 value = values.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      tag_284\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7514:7522  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7524:7528  from */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7530:7532  to */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7534:7536  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7538:7543  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7545:7549  data */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7513  _doSafeTransferAcceptanceCheck */\n      tag_285\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7347:7565  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n      jump(tag_157)\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7625:7633  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7635:7639  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7641:7643  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7645:7648  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7650:7656  values */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7658:7662  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7624  _doSafeBatchTransferAcceptanceCheck */\n      tag_288\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5279:5285  values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5279:5292  values.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5268  ids */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5275  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5292  ids.length != values.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\n      tag_290\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5341:5351  ids.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5353:5366  values.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5315:5367  ERC1155InvalidArrayLength(ids.length, values.length) */\n      mload(0x40)\n      shl(0xe0, 0x5b059991)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":11000:11025   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":11041:11059   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11034:11068   */\n      mstore\n        /* \"#utility.yul\":10973:10991   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5315:5367  ERC1155InvalidArrayLength(ids.length, values.length) */\n      tag_155\n        /* \"#utility.yul\":10826:11074   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\n    tag_290:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5388:5404  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_293:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5454:5457  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5454:5464  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5450:5451  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5450:5464  i < ids.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_294\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5495  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5523  ids.unsafeMemoryAccess(i) */\n      tag_296\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5501  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5521:5522  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5520  ids.unsafeMemoryAccess */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5523  ids.unsafeMemoryAccess(i) */\n      jump\t// in\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5523  uint256 id = ids.unsafeMemoryAccess(i) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5537:5550  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5581  values.unsafeMemoryAccess(i) */\n      tag_297\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5559  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5579:5580  i */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5578  values.unsafeMemoryAccess */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5581  values.unsafeMemoryAccess(i) */\n      jump\t// in\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5537:5581  uint256 value = values.unsafeMemoryAccess(i) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5618  from != address(0) */\n      dup9\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\n      tag_298\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5638:5657  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n      dup13\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5701:5720  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\n      iszero\n      tag_299\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5751:5807  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n      mload(0x40)\n      shl(0xe0, 0x03dee4c5)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13498:13530   */\n      dup11\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5751:5807  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13480:13531   */\n      mstore\n        /* \"#utility.yul\":13547:13565   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":13540:13574   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":13590:13608   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":13583:13617   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":13633:13651   */\n      0x64\n      dup2\n      add\n        /* \"#utility.yul\":13626:13660   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":13452:13471   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5751:5807  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n      tag_155\n        /* \"#utility.yul\":13249:13666   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5951  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5955  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5961  _balances[id][from] */\n      dup14\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5964:5983  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5983  _balances[id][from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\n    tag_298:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6050  to != address(0) */\n      dup8\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\n      tag_302\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6079  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6083  _balances[id] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6087  _balances[id][to] */\n      dup12\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6096  _balances[id][to] += value */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6091:6096  value */\n      dup4\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6079  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6096  _balances[id][to] += value */\n      tag_303\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6091:6096  value */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6096  _balances[id][to] += value */\n      tag_304\n      jump\t// in\n    tag_303:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\n    tag_302:\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5466:5469  ++i */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_293)\n    tag_294:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6138  ids */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6145  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6149:6150  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6150  ids.length == 1 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n      tag_305\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6166:6176  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6204  ids.unsafeMemoryAccess(0) */\n      tag_306\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6182  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6166:6176  uint256 id */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6201  ids.unsafeMemoryAccess */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6204  ids.unsafeMemoryAccess(0) */\n      jump\t// in\n    tag_306:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6166:6204  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6218:6231  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6262  values.unsafeMemoryAccess(0) */\n      tag_307\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6240  values */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6218:6231  uint256 value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6259  values.unsafeMemoryAccess */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6262  values.unsafeMemoryAccess(0) */\n      jump\t// in\n    tag_307:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6218:6262  uint256 value = values.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6312:6314  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6306:6310  from */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6296:6304  operator */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6316:6318  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6320:6325  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      mload(0x40)\n      tag_308\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":11000:11025   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":11056:11058   */\n      0x20\n        /* \"#utility.yul\":11041:11059   */\n      dup3\n      add\n        /* \"#utility.yul\":11034:11068   */\n      mstore\n        /* \"#utility.yul\":10988:10990   */\n      0x40\n        /* \"#utility.yul\":10973:10991   */\n      add\n      swap1\n        /* \"#utility.yul\":10826:11074   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n    tag_308:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6152:6337  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n      jump(tag_260)\n    tag_305:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6392:6394  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6386:6390  from */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6376:6384  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6396:6399  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6401:6407  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      mload(0x40)\n      tag_310\n      swap3\n      swap2\n      swap1\n      tag_311\n      jump\t// in\n    tag_310:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5251:6425  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13761:14735  function _doSafeTransferAcceptanceCheck(... */\n    tag_285:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13981  to.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13985  to.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13963:14729  if (to.code.length > 0) {... */\n      tag_157\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14005:14076  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14005:14043  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14005:14076  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n      tag_314\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14044:14052  operator */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14054:14058  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14060:14062  id */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14064:14069  value */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14071:14075  data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14005:14076  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n      0x04\n      add\n      tag_315\n      jump\t// in\n    tag_314:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_316\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_317\n      swap2\n      dup2\n      add\n      swap1\n      tag_318\n      jump\t// in\n    tag_317:\n      0x01\n    tag_316:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14001:14719  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n      tag_319\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_324\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_323)\n    tag_324:\n      0x60\n      swap2\n      pop\n    tag_323:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14366  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14373  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14377:14378  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14378  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14356:14705  if (reason.length == 0) {... */\n      tag_325\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14487:14489  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14464:14490  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x2bfa23e7)\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14356:14705  if (reason.length == 0) {... */\n    tag_325:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14657:14663  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14651:14664  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14642:14648  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14638:14640  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14634:14649  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14627:14665  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14001:14719  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n    tag_319:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14180  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14121:14295  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_274\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14273:14275  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14250:14276  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x2bfa23e7)\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14923:15964  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_288:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15168  to.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15172  to.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15150:15958  if (to.code.length > 0) {... */\n      tag_157\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15192:15270  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15192:15235  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15192:15270  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n      tag_333\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15236:15244  operator */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15246:15250  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15252:15255  ids */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15257:15263  values */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15265:15269  data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15192:15270  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n      0x04\n      add\n      tag_334\n      jump\t// in\n    tag_333:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_335\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_336\n      swap2\n      dup2\n      add\n      swap1\n      tag_318\n      jump\t// in\n    tag_336:\n      0x01\n    tag_335:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15188:15948  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n      tag_337\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_324\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_323)\n    tag_337:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15409  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15345:15524  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_274\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15502:15504  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15479:15505  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x2bfa23e7)\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_349:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_364\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_364:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:446   */\n    tag_24:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_366:\n        /* \"#utility.yul\":360:389   */\n      tag_367\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_349\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":350:389   */\n      swap5\n        /* \"#utility.yul\":436:438   */\n      0x20\n        /* \"#utility.yul\":421:439   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":408:440   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":192:446   */\n      jump\t// out\n        /* \"#utility.yul\":633:764   */\n    tag_350:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":707:739   */\n      dup2\n      and\n        /* \"#utility.yul\":697:740   */\n      dup2\n      eq\n        /* \"#utility.yul\":687:758   */\n      tag_114\n      jumpi\n        /* \"#utility.yul\":754:755   */\n      0x00\n        /* \"#utility.yul\":751:752   */\n      dup1\n        /* \"#utility.yul\":744:756   */\n      revert\n        /* \"#utility.yul\":769:1014   */\n    tag_30:\n        /* \"#utility.yul\":827:833   */\n      0x00\n        /* \"#utility.yul\":880:882   */\n      0x20\n        /* \"#utility.yul\":868:877   */\n      dup3\n        /* \"#utility.yul\":859:866   */\n      dup5\n        /* \"#utility.yul\":855:878   */\n      sub\n        /* \"#utility.yul\":851:883   */\n      slt\n        /* \"#utility.yul\":848:900   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":896:897   */\n      0x00\n        /* \"#utility.yul\":893:894   */\n      dup1\n        /* \"#utility.yul\":886:898   */\n      revert\n        /* \"#utility.yul\":848:900   */\n    tag_372:\n        /* \"#utility.yul\":935:944   */\n      dup2\n        /* \"#utility.yul\":922:945   */\n      calldataload\n        /* \"#utility.yul\":954:984   */\n      tag_373\n        /* \"#utility.yul\":978:983   */\n      dup2\n        /* \"#utility.yul\":954:984   */\n      tag_350\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":1003:1008   */\n      swap4\n        /* \"#utility.yul\":769:1014   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1211:1338   */\n    tag_128:\n        /* \"#utility.yul\":1272:1282   */\n      0x4e487b71\n        /* \"#utility.yul\":1267:1270   */\n      0xe0\n        /* \"#utility.yul\":1263:1283   */\n      shl\n        /* \"#utility.yul\":1260:1261   */\n      0x00\n        /* \"#utility.yul\":1253:1284   */\n      mstore\n        /* \"#utility.yul\":1303:1307   */\n      0x41\n        /* \"#utility.yul\":1300:1301   */\n      0x04\n        /* \"#utility.yul\":1293:1308   */\n      mstore\n        /* \"#utility.yul\":1327:1331   */\n      0x24\n        /* \"#utility.yul\":1324:1325   */\n      0x00\n        /* \"#utility.yul\":1317:1332   */\n      revert\n        /* \"#utility.yul\":1343:1618   */\n    tag_351:\n        /* \"#utility.yul\":1414:1416   */\n      0x40\n        /* \"#utility.yul\":1408:1417   */\n      mload\n        /* \"#utility.yul\":1479:1481   */\n      0x1f\n        /* \"#utility.yul\":1460:1473   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1456:1483   */\n      and\n        /* \"#utility.yul\":1444:1484   */\n      dup2\n      add\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1499:1533   */\n      dup2\n      gt\n        /* \"#utility.yul\":1535:1557   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":1496:1558   */\n      or\n        /* \"#utility.yul\":1493:1581   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":1561:1579   */\n      tag_378\n      tag_128\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":1597:1599   */\n      0x40\n        /* \"#utility.yul\":1590:1612   */\n      mstore\n        /* \"#utility.yul\":1343:1618   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:2154   */\n    tag_352:\n        /* \"#utility.yul\":1666:1671   */\n      0x00\n        /* \"#utility.yul\":1719:1722   */\n      dup3\n        /* \"#utility.yul\":1712:1716   */\n      0x1f\n        /* \"#utility.yul\":1704:1710   */\n      dup4\n        /* \"#utility.yul\":1700:1717   */\n      add\n        /* \"#utility.yul\":1696:1723   */\n      slt\n        /* \"#utility.yul\":1686:1741   */\n      tag_380\n      jumpi\n        /* \"#utility.yul\":1737:1738   */\n      0x00\n        /* \"#utility.yul\":1734:1735   */\n      dup1\n        /* \"#utility.yul\":1727:1739   */\n      revert\n        /* \"#utility.yul\":1686:1741   */\n    tag_380:\n        /* \"#utility.yul\":1760:1780   */\n      dup2\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1792:1818   */\n      dup2\n      gt\n        /* \"#utility.yul\":1789:1841   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":1821:1839   */\n      tag_382\n      tag_128\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":1865:1920   */\n      tag_383\n        /* \"#utility.yul\":1908:1910   */\n      0x1f\n        /* \"#utility.yul\":1889:1902   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1885:1912   */\n      and\n        /* \"#utility.yul\":1914:1918   */\n      0x20\n        /* \"#utility.yul\":1881:1919   */\n      add\n        /* \"#utility.yul\":1865:1920   */\n      tag_351\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":1945:1947   */\n      dup2\n        /* \"#utility.yul\":1936:1943   */\n      dup2\n        /* \"#utility.yul\":1929:1948   */\n      mstore\n        /* \"#utility.yul\":1991:1994   */\n      dup5\n        /* \"#utility.yul\":1984:1988   */\n      0x20\n        /* \"#utility.yul\":1979:1981   */\n      dup4\n        /* \"#utility.yul\":1971:1977   */\n      dup7\n        /* \"#utility.yul\":1967:1982   */\n      add\n        /* \"#utility.yul\":1963:1989   */\n      add\n        /* \"#utility.yul\":1960:1995   */\n      gt\n        /* \"#utility.yul\":1957:2012   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":2008:2009   */\n      0x00\n        /* \"#utility.yul\":2005:2006   */\n      dup1\n        /* \"#utility.yul\":1998:2010   */\n      revert\n        /* \"#utility.yul\":1957:2012   */\n    tag_384:\n        /* \"#utility.yul\":2073:2075   */\n      dup2\n        /* \"#utility.yul\":2066:2070   */\n      0x20\n        /* \"#utility.yul\":2058:2064   */\n      dup6\n        /* \"#utility.yul\":2054:2071   */\n      add\n        /* \"#utility.yul\":2047:2051   */\n      0x20\n        /* \"#utility.yul\":2038:2045   */\n      dup4\n        /* \"#utility.yul\":2034:2052   */\n      add\n        /* \"#utility.yul\":2021:2076   */\n      calldatacopy\n        /* \"#utility.yul\":2121:2122   */\n      0x00\n        /* \"#utility.yul\":2096:2112   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":2114:2118   */\n      0x20\n        /* \"#utility.yul\":2092:2119   */\n      add\n        /* \"#utility.yul\":2085:2123   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2100:2107   */\n      swap4\n        /* \"#utility.yul\":1623:2154   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2481   */\n    tag_36:\n        /* \"#utility.yul\":2228:2234   */\n      0x00\n        /* \"#utility.yul\":2281:2283   */\n      0x20\n        /* \"#utility.yul\":2269:2278   */\n      dup3\n        /* \"#utility.yul\":2260:2267   */\n      dup5\n        /* \"#utility.yul\":2256:2279   */\n      sub\n        /* \"#utility.yul\":2252:2284   */\n      slt\n        /* \"#utility.yul\":2249:2301   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":2297:2298   */\n      0x00\n        /* \"#utility.yul\":2294:2295   */\n      dup1\n        /* \"#utility.yul\":2287:2299   */\n      revert\n        /* \"#utility.yul\":2249:2301   */\n    tag_386:\n        /* \"#utility.yul\":2324:2347   */\n      dup2\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":2359:2389   */\n      dup2\n      gt\n        /* \"#utility.yul\":2356:2406   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":2402:2403   */\n      0x00\n        /* \"#utility.yul\":2399:2400   */\n      dup1\n        /* \"#utility.yul\":2392:2404   */\n      revert\n        /* \"#utility.yul\":2356:2406   */\n    tag_387:\n        /* \"#utility.yul\":2425:2475   */\n      tag_213\n        /* \"#utility.yul\":2467:2474   */\n      dup5\n        /* \"#utility.yul\":2458:2464   */\n      dup3\n        /* \"#utility.yul\":2447:2456   */\n      dup6\n        /* \"#utility.yul\":2443:2465   */\n      add\n        /* \"#utility.yul\":2425:2475   */\n      tag_352\n      jump\t// in\n        /* \"#utility.yul\":2486:2775   */\n    tag_353:\n        /* \"#utility.yul\":2528:2531   */\n      0x00\n        /* \"#utility.yul\":2566:2571   */\n      dup2\n        /* \"#utility.yul\":2560:2572   */\n      mload\n        /* \"#utility.yul\":2593:2599   */\n      dup1\n        /* \"#utility.yul\":2588:2591   */\n      dup5\n        /* \"#utility.yul\":2581:2600   */\n      mstore\n        /* \"#utility.yul\":2649:2655   */\n      dup1\n        /* \"#utility.yul\":2642:2646   */\n      0x20\n        /* \"#utility.yul\":2635:2640   */\n      dup5\n        /* \"#utility.yul\":2631:2647   */\n      add\n        /* \"#utility.yul\":2624:2628   */\n      0x20\n        /* \"#utility.yul\":2619:2622   */\n      dup7\n        /* \"#utility.yul\":2615:2629   */\n      add\n        /* \"#utility.yul\":2609:2656   */\n      mcopy\n        /* \"#utility.yul\":2701:2702   */\n      0x00\n        /* \"#utility.yul\":2694:2698   */\n      0x20\n        /* \"#utility.yul\":2685:2691   */\n      dup3\n        /* \"#utility.yul\":2680:2683   */\n      dup7\n        /* \"#utility.yul\":2676:2692   */\n      add\n        /* \"#utility.yul\":2672:2699   */\n      add\n        /* \"#utility.yul\":2665:2703   */\n      mstore\n        /* \"#utility.yul\":2764:2768   */\n      0x20\n        /* \"#utility.yul\":2757:2759   */\n      0x1f\n        /* \"#utility.yul\":2753:2760   */\n      not\n        /* \"#utility.yul\":2748:2750   */\n      0x1f\n        /* \"#utility.yul\":2740:2746   */\n      dup4\n        /* \"#utility.yul\":2736:2751   */\n      add\n        /* \"#utility.yul\":2732:2761   */\n      and\n        /* \"#utility.yul\":2727:2730   */\n      dup6\n        /* \"#utility.yul\":2723:2762   */\n      add\n        /* \"#utility.yul\":2719:2769   */\n      add\n        /* \"#utility.yul\":2712:2769   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2486:2775   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2780:3000   */\n    tag_41:\n        /* \"#utility.yul\":2929:2931   */\n      0x20\n        /* \"#utility.yul\":2918:2927   */\n      dup2\n        /* \"#utility.yul\":2911:2932   */\n      mstore\n        /* \"#utility.yul\":2892:2896   */\n      0x00\n        /* \"#utility.yul\":2949:2994   */\n      tag_373\n        /* \"#utility.yul\":2990:2992   */\n      0x20\n        /* \"#utility.yul\":2979:2988   */\n      dup4\n        /* \"#utility.yul\":2975:2993   */\n      add\n        /* \"#utility.yul\":2967:2973   */\n      dup5\n        /* \"#utility.yul\":2949:2994   */\n      tag_353\n      jump\t// in\n        /* \"#utility.yul\":3005:3469   */\n    tag_44:\n        /* \"#utility.yul\":3092:3098   */\n      0x00\n        /* \"#utility.yul\":3100:3106   */\n      dup1\n        /* \"#utility.yul\":3108:3114   */\n      0x00\n        /* \"#utility.yul\":3161:3163   */\n      0x60\n        /* \"#utility.yul\":3149:3158   */\n      dup5\n        /* \"#utility.yul\":3140:3147   */\n      dup7\n        /* \"#utility.yul\":3136:3159   */\n      sub\n        /* \"#utility.yul\":3132:3164   */\n      slt\n        /* \"#utility.yul\":3129:3181   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":3177:3178   */\n      0x00\n        /* \"#utility.yul\":3174:3175   */\n      dup1\n        /* \"#utility.yul\":3167:3179   */\n      revert\n        /* \"#utility.yul\":3129:3181   */\n    tag_393:\n        /* \"#utility.yul\":3200:3229   */\n      tag_394\n        /* \"#utility.yul\":3219:3228   */\n      dup5\n        /* \"#utility.yul\":3200:3229   */\n      tag_349\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":3190:3229   */\n      swap3\n      pop\n        /* \"#utility.yul\":3280:3282   */\n      0x20\n        /* \"#utility.yul\":3265:3283   */\n      dup5\n      add\n        /* \"#utility.yul\":3252:3284   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":3296:3326   */\n      dup2\n      gt\n        /* \"#utility.yul\":3293:3343   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":3339:3340   */\n      0x00\n        /* \"#utility.yul\":3336:3337   */\n      dup1\n        /* \"#utility.yul\":3329:3341   */\n      revert\n        /* \"#utility.yul\":3293:3343   */\n    tag_395:\n        /* \"#utility.yul\":3362:3412   */\n      tag_396\n        /* \"#utility.yul\":3404:3411   */\n      dup7\n        /* \"#utility.yul\":3395:3401   */\n      dup3\n        /* \"#utility.yul\":3384:3393   */\n      dup8\n        /* \"#utility.yul\":3380:3402   */\n      add\n        /* \"#utility.yul\":3362:3412   */\n      tag_352\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":3352:3412   */\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":3459:3461   */\n      0x40\n        /* \"#utility.yul\":3448:3457   */\n      dup5\n        /* \"#utility.yul\":3444:3462   */\n      add\n        /* \"#utility.yul\":3431:3463   */\n      calldataload\n        /* \"#utility.yul\":3421:3463   */\n      swap1\n      pop\n        /* \"#utility.yul\":3005:3469   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3474:3913   */\n    tag_354:\n        /* \"#utility.yul\":3527:3530   */\n      0x00\n        /* \"#utility.yul\":3565:3570   */\n      dup2\n        /* \"#utility.yul\":3559:3571   */\n      mload\n        /* \"#utility.yul\":3592:3598   */\n      dup1\n        /* \"#utility.yul\":3587:3590   */\n      dup5\n        /* \"#utility.yul\":3580:3599   */\n      mstore\n        /* \"#utility.yul\":3618:3622   */\n      0x20\n        /* \"#utility.yul\":3647:3651   */\n      dup1\n        /* \"#utility.yul\":3642:3645   */\n      dup6\n        /* \"#utility.yul\":3638:3652   */\n      add\n        /* \"#utility.yul\":3631:3652   */\n      swap5\n      pop\n        /* \"#utility.yul\":3686:3690   */\n      0x20\n        /* \"#utility.yul\":3679:3684   */\n      dup5\n        /* \"#utility.yul\":3675:3691   */\n      add\n        /* \"#utility.yul\":3709:3710   */\n      0x00\n        /* \"#utility.yul\":3719:3888   */\n    tag_398:\n        /* \"#utility.yul\":3733:3739   */\n      dup4\n        /* \"#utility.yul\":3730:3731   */\n      dup2\n        /* \"#utility.yul\":3727:3740   */\n      lt\n        /* \"#utility.yul\":3719:3888   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":3794:3807   */\n      dup2\n      mload\n        /* \"#utility.yul\":3782:3808   */\n      dup8\n      mstore\n        /* \"#utility.yul\":3828:3840   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":3863:3878   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":3755:3756   */\n      0x01\n        /* \"#utility.yul\":3748:3757   */\n      add\n        /* \"#utility.yul\":3719:3888   */\n      jump(tag_398)\n    tag_400:\n      pop\n        /* \"#utility.yul\":3904:3907   */\n      swap5\n      swap6\n        /* \"#utility.yul\":3474:3913   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3918:4179   */\n    tag_47:\n        /* \"#utility.yul\":4097:4099   */\n      0x20\n        /* \"#utility.yul\":4086:4095   */\n      dup2\n        /* \"#utility.yul\":4079:4100   */\n      mstore\n        /* \"#utility.yul\":4060:4064   */\n      0x00\n        /* \"#utility.yul\":4117:4173   */\n      tag_373\n        /* \"#utility.yul\":4169:4171   */\n      0x20\n        /* \"#utility.yul\":4158:4167   */\n      dup4\n        /* \"#utility.yul\":4154:4172   */\n      add\n        /* \"#utility.yul\":4146:4152   */\n      dup5\n        /* \"#utility.yul\":4117:4173   */\n      tag_354\n      jump\t// in\n        /* \"#utility.yul\":4184:4364   */\n    tag_50:\n        /* \"#utility.yul\":4243:4249   */\n      0x00\n        /* \"#utility.yul\":4296:4298   */\n      0x20\n        /* \"#utility.yul\":4284:4293   */\n      dup3\n        /* \"#utility.yul\":4275:4282   */\n      dup5\n        /* \"#utility.yul\":4271:4294   */\n      sub\n        /* \"#utility.yul\":4267:4299   */\n      slt\n        /* \"#utility.yul\":4264:4316   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":4312:4313   */\n      0x00\n        /* \"#utility.yul\":4309:4310   */\n      dup1\n        /* \"#utility.yul\":4302:4314   */\n      revert\n        /* \"#utility.yul\":4264:4316   */\n    tag_404:\n      pop\n        /* \"#utility.yul\":4335:4358   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":4184:4364   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4369:4552   */\n    tag_355:\n        /* \"#utility.yul\":4429:4433   */\n      0x00\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":4451:4481   */\n      dup3\n      gt\n        /* \"#utility.yul\":4448:4504   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":4484:4502   */\n      tag_407\n      tag_128\n      jump\t// in\n    tag_407:\n      pop\n        /* \"#utility.yul\":4529:4530   */\n      0x05\n        /* \"#utility.yul\":4525:4539   */\n      shl\n        /* \"#utility.yul\":4541:4545   */\n      0x20\n        /* \"#utility.yul\":4521:4546   */\n      add\n      swap1\n        /* \"#utility.yul\":4369:4552   */\n      jump\t// out\n        /* \"#utility.yul\":4557:5225   */\n    tag_356:\n        /* \"#utility.yul\":4611:4616   */\n      0x00\n        /* \"#utility.yul\":4664:4667   */\n      dup3\n        /* \"#utility.yul\":4657:4661   */\n      0x1f\n        /* \"#utility.yul\":4649:4655   */\n      dup4\n        /* \"#utility.yul\":4645:4662   */\n      add\n        /* \"#utility.yul\":4641:4668   */\n      slt\n        /* \"#utility.yul\":4631:4686   */\n      tag_409\n      jumpi\n        /* \"#utility.yul\":4682:4683   */\n      0x00\n        /* \"#utility.yul\":4679:4680   */\n      dup1\n        /* \"#utility.yul\":4672:4684   */\n      revert\n        /* \"#utility.yul\":4631:4686   */\n    tag_409:\n        /* \"#utility.yul\":4718:4724   */\n      dup2\n        /* \"#utility.yul\":4705:4725   */\n      calldataload\n        /* \"#utility.yul\":4744:4748   */\n      0x20\n        /* \"#utility.yul\":4768:4828   */\n      tag_410\n        /* \"#utility.yul\":4784:4827   */\n      tag_411\n        /* \"#utility.yul\":4824:4826   */\n      dup4\n        /* \"#utility.yul\":4784:4827   */\n      tag_355\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":4768:4828   */\n      tag_351\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":4850:4853   */\n      dup1\n        /* \"#utility.yul\":4874:4876   */\n      dup4\n        /* \"#utility.yul\":4869:4872   */\n      dup3\n        /* \"#utility.yul\":4862:4877   */\n      mstore\n        /* \"#utility.yul\":4902:4906   */\n      0x20\n        /* \"#utility.yul\":4897:4900   */\n      dup3\n        /* \"#utility.yul\":4893:4907   */\n      add\n        /* \"#utility.yul\":4886:4907   */\n      swap2\n      pop\n        /* \"#utility.yul\":4959:4963   */\n      0x20\n        /* \"#utility.yul\":4953:4955   */\n      dup5\n        /* \"#utility.yul\":4950:4951   */\n      0x05\n        /* \"#utility.yul\":4946:4956   */\n      shl\n        /* \"#utility.yul\":4938:4944   */\n      dup8\n        /* \"#utility.yul\":4934:4957   */\n      add\n        /* \"#utility.yul\":4930:4964   */\n      add\n        /* \"#utility.yul\":4916:4964   */\n      swap4\n      pop\n        /* \"#utility.yul\":4987:4990   */\n      dup7\n        /* \"#utility.yul\":4979:4985   */\n      dup5\n        /* \"#utility.yul\":4976:4991   */\n      gt\n        /* \"#utility.yul\":4973:5008   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":5004:5005   */\n      0x00\n        /* \"#utility.yul\":5001:5002   */\n      dup1\n        /* \"#utility.yul\":4994:5006   */\n      revert\n        /* \"#utility.yul\":4973:5008   */\n    tag_412:\n        /* \"#utility.yul\":5040:5044   */\n      0x20\n        /* \"#utility.yul\":5032:5038   */\n      dup7\n        /* \"#utility.yul\":5028:5045   */\n      add\n        /* \"#utility.yul\":5054:5196   */\n    tag_413:\n        /* \"#utility.yul\":5070:5076   */\n      dup5\n        /* \"#utility.yul\":5065:5068   */\n      dup2\n        /* \"#utility.yul\":5062:5077   */\n      lt\n        /* \"#utility.yul\":5054:5196   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":5136:5153   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":5124:5154   */\n      dup4\n      mstore\n        /* \"#utility.yul\":5174:5186   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":5087:5099   */\n      dup4\n      add\n        /* \"#utility.yul\":5054:5196   */\n      jump(tag_413)\n    tag_415:\n      pop\n        /* \"#utility.yul\":5214:5219   */\n      swap7\n        /* \"#utility.yul\":4557:5225   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5230:6174   */\n    tag_58:\n        /* \"#utility.yul\":5384:5390   */\n      0x00\n        /* \"#utility.yul\":5392:5398   */\n      dup1\n        /* \"#utility.yul\":5400:5406   */\n      0x00\n        /* \"#utility.yul\":5408:5414   */\n      dup1\n        /* \"#utility.yul\":5416:5422   */\n      0x00\n        /* \"#utility.yul\":5469:5472   */\n      0xa0\n        /* \"#utility.yul\":5457:5466   */\n      dup7\n        /* \"#utility.yul\":5448:5455   */\n      dup9\n        /* \"#utility.yul\":5444:5467   */\n      sub\n        /* \"#utility.yul\":5440:5473   */\n      slt\n        /* \"#utility.yul\":5437:5490   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":5486:5487   */\n      0x00\n        /* \"#utility.yul\":5483:5484   */\n      dup1\n        /* \"#utility.yul\":5476:5488   */\n      revert\n        /* \"#utility.yul\":5437:5490   */\n    tag_417:\n        /* \"#utility.yul\":5509:5538   */\n      tag_418\n        /* \"#utility.yul\":5528:5537   */\n      dup7\n        /* \"#utility.yul\":5509:5538   */\n      tag_349\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":5499:5538   */\n      swap5\n      pop\n        /* \"#utility.yul\":5557:5595   */\n      tag_419\n        /* \"#utility.yul\":5591:5593   */\n      0x20\n        /* \"#utility.yul\":5580:5589   */\n      dup8\n        /* \"#utility.yul\":5576:5594   */\n      add\n        /* \"#utility.yul\":5557:5595   */\n      tag_349\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":5547:5595   */\n      swap4\n      pop\n        /* \"#utility.yul\":5646:5648   */\n      0x40\n        /* \"#utility.yul\":5631:5649   */\n      dup7\n      add\n        /* \"#utility.yul\":5618:5650   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":5699:5713   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5696:5730   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":5726:5727   */\n      0x00\n        /* \"#utility.yul\":5723:5724   */\n      dup1\n        /* \"#utility.yul\":5716:5728   */\n      revert\n        /* \"#utility.yul\":5696:5730   */\n    tag_420:\n        /* \"#utility.yul\":5749:5810   */\n      tag_421\n        /* \"#utility.yul\":5802:5809   */\n      dup10\n        /* \"#utility.yul\":5793:5799   */\n      dup4\n        /* \"#utility.yul\":5782:5791   */\n      dup11\n        /* \"#utility.yul\":5778:5800   */\n      add\n        /* \"#utility.yul\":5749:5810   */\n      tag_356\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":5739:5810   */\n      swap5\n      pop\n        /* \"#utility.yul\":5863:5865   */\n      0x60\n        /* \"#utility.yul\":5852:5861   */\n      dup9\n        /* \"#utility.yul\":5848:5866   */\n      add\n        /* \"#utility.yul\":5835:5867   */\n      calldataload\n        /* \"#utility.yul\":5819:5867   */\n      swap2\n      pop\n        /* \"#utility.yul\":5892:5894   */\n      dup1\n        /* \"#utility.yul\":5882:5890   */\n      dup3\n        /* \"#utility.yul\":5879:5895   */\n      gt\n        /* \"#utility.yul\":5876:5912   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":5908:5909   */\n      0x00\n        /* \"#utility.yul\":5905:5906   */\n      dup1\n        /* \"#utility.yul\":5898:5910   */\n      revert\n        /* \"#utility.yul\":5876:5912   */\n    tag_422:\n        /* \"#utility.yul\":5931:5994   */\n      tag_423\n        /* \"#utility.yul\":5986:5993   */\n      dup10\n        /* \"#utility.yul\":5975:5983   */\n      dup4\n        /* \"#utility.yul\":5964:5973   */\n      dup11\n        /* \"#utility.yul\":5960:5984   */\n      add\n        /* \"#utility.yul\":5931:5994   */\n      tag_356\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":5921:5994   */\n      swap4\n      pop\n        /* \"#utility.yul\":6047:6050   */\n      0x80\n        /* \"#utility.yul\":6036:6045   */\n      dup9\n        /* \"#utility.yul\":6032:6051   */\n      add\n        /* \"#utility.yul\":6019:6052   */\n      calldataload\n        /* \"#utility.yul\":6003:6052   */\n      swap2\n      pop\n        /* \"#utility.yul\":6077:6079   */\n      dup1\n        /* \"#utility.yul\":6067:6075   */\n      dup3\n        /* \"#utility.yul\":6064:6080   */\n      gt\n        /* \"#utility.yul\":6061:6097   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":6093:6094   */\n      0x00\n        /* \"#utility.yul\":6090:6091   */\n      dup1\n        /* \"#utility.yul\":6083:6095   */\n      revert\n        /* \"#utility.yul\":6061:6097   */\n    tag_424:\n      pop\n        /* \"#utility.yul\":6116:6168   */\n      tag_425\n        /* \"#utility.yul\":6160:6167   */\n      dup9\n        /* \"#utility.yul\":6149:6157   */\n      dup3\n        /* \"#utility.yul\":6138:6147   */\n      dup10\n        /* \"#utility.yul\":6134:6158   */\n      add\n        /* \"#utility.yul\":6116:6168   */\n      tag_352\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":6106:6168   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5230:6174   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6179:6853   */\n    tag_357:\n        /* \"#utility.yul\":6233:6238   */\n      0x00\n        /* \"#utility.yul\":6286:6289   */\n      dup3\n        /* \"#utility.yul\":6279:6283   */\n      0x1f\n        /* \"#utility.yul\":6271:6277   */\n      dup4\n        /* \"#utility.yul\":6267:6284   */\n      add\n        /* \"#utility.yul\":6263:6290   */\n      slt\n        /* \"#utility.yul\":6253:6308   */\n      tag_427\n      jumpi\n        /* \"#utility.yul\":6304:6305   */\n      0x00\n        /* \"#utility.yul\":6301:6302   */\n      dup1\n        /* \"#utility.yul\":6294:6306   */\n      revert\n        /* \"#utility.yul\":6253:6308   */\n    tag_427:\n        /* \"#utility.yul\":6340:6346   */\n      dup2\n        /* \"#utility.yul\":6327:6347   */\n      calldataload\n        /* \"#utility.yul\":6366:6370   */\n      0x20\n        /* \"#utility.yul\":6390:6450   */\n      tag_428\n        /* \"#utility.yul\":6406:6449   */\n      tag_411\n        /* \"#utility.yul\":6446:6448   */\n      dup4\n        /* \"#utility.yul\":6406:6449   */\n      tag_355\n      jump\t// in\n        /* \"#utility.yul\":6390:6450   */\n    tag_428:\n        /* \"#utility.yul\":6472:6475   */\n      dup1\n        /* \"#utility.yul\":6496:6498   */\n      dup4\n        /* \"#utility.yul\":6491:6494   */\n      dup3\n        /* \"#utility.yul\":6484:6499   */\n      mstore\n        /* \"#utility.yul\":6524:6528   */\n      0x20\n        /* \"#utility.yul\":6519:6522   */\n      dup3\n        /* \"#utility.yul\":6515:6529   */\n      add\n        /* \"#utility.yul\":6508:6529   */\n      swap2\n      pop\n        /* \"#utility.yul\":6581:6585   */\n      0x20\n        /* \"#utility.yul\":6575:6577   */\n      dup5\n        /* \"#utility.yul\":6572:6573   */\n      0x05\n        /* \"#utility.yul\":6568:6578   */\n      shl\n        /* \"#utility.yul\":6560:6566   */\n      dup8\n        /* \"#utility.yul\":6556:6579   */\n      add\n        /* \"#utility.yul\":6552:6586   */\n      add\n        /* \"#utility.yul\":6538:6586   */\n      swap4\n      pop\n        /* \"#utility.yul\":6609:6612   */\n      dup7\n        /* \"#utility.yul\":6601:6607   */\n      dup5\n        /* \"#utility.yul\":6598:6613   */\n      gt\n        /* \"#utility.yul\":6595:6630   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":6626:6627   */\n      0x00\n        /* \"#utility.yul\":6623:6624   */\n      dup1\n        /* \"#utility.yul\":6616:6628   */\n      revert\n        /* \"#utility.yul\":6595:6630   */\n    tag_430:\n        /* \"#utility.yul\":6662:6666   */\n      0x20\n        /* \"#utility.yul\":6654:6660   */\n      dup7\n        /* \"#utility.yul\":6650:6667   */\n      add\n        /* \"#utility.yul\":6676:6824   */\n    tag_431:\n        /* \"#utility.yul\":6692:6698   */\n      dup5\n        /* \"#utility.yul\":6687:6690   */\n      dup2\n        /* \"#utility.yul\":6684:6699   */\n      lt\n        /* \"#utility.yul\":6676:6824   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":6758:6781   */\n      tag_434\n        /* \"#utility.yul\":6777:6780   */\n      dup2\n        /* \"#utility.yul\":6758:6781   */\n      tag_349\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":6746:6782   */\n      dup4\n      mstore\n        /* \"#utility.yul\":6802:6814   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":6709:6721   */\n      dup4\n      add\n        /* \"#utility.yul\":6676:6824   */\n      jump(tag_431)\n        /* \"#utility.yul\":6858:7453   */\n    tag_62:\n        /* \"#utility.yul\":6976:6982   */\n      0x00\n        /* \"#utility.yul\":6984:6990   */\n      dup1\n        /* \"#utility.yul\":7037:7039   */\n      0x40\n        /* \"#utility.yul\":7025:7034   */\n      dup4\n        /* \"#utility.yul\":7016:7023   */\n      dup6\n        /* \"#utility.yul\":7012:7035   */\n      sub\n        /* \"#utility.yul\":7008:7040   */\n      slt\n        /* \"#utility.yul\":7005:7057   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":7053:7054   */\n      0x00\n        /* \"#utility.yul\":7050:7051   */\n      dup1\n        /* \"#utility.yul\":7043:7055   */\n      revert\n        /* \"#utility.yul\":7005:7057   */\n    tag_436:\n        /* \"#utility.yul\":7080:7103   */\n      dup3\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":7152:7166   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":7149:7183   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":7179:7180   */\n      0x00\n        /* \"#utility.yul\":7176:7177   */\n      dup1\n        /* \"#utility.yul\":7169:7181   */\n      revert\n        /* \"#utility.yul\":7149:7183   */\n    tag_437:\n        /* \"#utility.yul\":7202:7263   */\n      tag_438\n        /* \"#utility.yul\":7255:7262   */\n      dup7\n        /* \"#utility.yul\":7246:7252   */\n      dup4\n        /* \"#utility.yul\":7235:7244   */\n      dup8\n        /* \"#utility.yul\":7231:7253   */\n      add\n        /* \"#utility.yul\":7202:7263   */\n      tag_357\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":7192:7263   */\n      swap4\n      pop\n        /* \"#utility.yul\":7316:7318   */\n      0x20\n        /* \"#utility.yul\":7305:7314   */\n      dup6\n        /* \"#utility.yul\":7301:7319   */\n      add\n        /* \"#utility.yul\":7288:7320   */\n      calldataload\n        /* \"#utility.yul\":7272:7320   */\n      swap2\n      pop\n        /* \"#utility.yul\":7345:7347   */\n      dup1\n        /* \"#utility.yul\":7335:7343   */\n      dup3\n        /* \"#utility.yul\":7332:7348   */\n      gt\n        /* \"#utility.yul\":7329:7365   */\n      iszero\n      tag_439\n      jumpi\n        /* \"#utility.yul\":7361:7362   */\n      0x00\n        /* \"#utility.yul\":7358:7359   */\n      dup1\n        /* \"#utility.yul\":7351:7363   */\n      revert\n        /* \"#utility.yul\":7329:7365   */\n    tag_439:\n      pop\n        /* \"#utility.yul\":7384:7447   */\n      tag_440\n        /* \"#utility.yul\":7439:7446   */\n      dup6\n        /* \"#utility.yul\":7428:7436   */\n      dup3\n        /* \"#utility.yul\":7417:7426   */\n      dup7\n        /* \"#utility.yul\":7413:7437   */\n      add\n        /* \"#utility.yul\":7384:7447   */\n      tag_356\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":7374:7447   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6858:7453   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7458:7661   */\n    tag_70:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7622:7654   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":7604:7655   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7592:7594   */\n      0x20\n        /* \"#utility.yul\":7577:7595   */\n      add\n      swap1\n        /* \"#utility.yul\":7458:7661   */\n      jump\t// out\n        /* \"#utility.yul\":7666:8013   */\n    tag_76:\n        /* \"#utility.yul\":7731:7737   */\n      0x00\n        /* \"#utility.yul\":7739:7745   */\n      dup1\n        /* \"#utility.yul\":7792:7794   */\n      0x40\n        /* \"#utility.yul\":7780:7789   */\n      dup4\n        /* \"#utility.yul\":7771:7778   */\n      dup6\n        /* \"#utility.yul\":7767:7790   */\n      sub\n        /* \"#utility.yul\":7763:7795   */\n      slt\n        /* \"#utility.yul\":7760:7812   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":7808:7809   */\n      0x00\n        /* \"#utility.yul\":7805:7806   */\n      dup1\n        /* \"#utility.yul\":7798:7810   */\n      revert\n        /* \"#utility.yul\":7760:7812   */\n    tag_443:\n        /* \"#utility.yul\":7831:7860   */\n      tag_444\n        /* \"#utility.yul\":7850:7859   */\n      dup4\n        /* \"#utility.yul\":7831:7860   */\n      tag_349\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":7821:7860   */\n      swap2\n      pop\n        /* \"#utility.yul\":7910:7912   */\n      0x20\n        /* \"#utility.yul\":7899:7908   */\n      dup4\n        /* \"#utility.yul\":7895:7913   */\n      add\n        /* \"#utility.yul\":7882:7914   */\n      calldataload\n        /* \"#utility.yul\":7957:7962   */\n      dup1\n        /* \"#utility.yul\":7950:7963   */\n      iszero\n        /* \"#utility.yul\":7943:7964   */\n      iszero\n        /* \"#utility.yul\":7936:7941   */\n      dup2\n        /* \"#utility.yul\":7933:7965   */\n      eq\n        /* \"#utility.yul\":7923:7983   */\n      tag_445\n      jumpi\n        /* \"#utility.yul\":7979:7980   */\n      0x00\n        /* \"#utility.yul\":7976:7977   */\n      dup1\n        /* \"#utility.yul\":7969:7981   */\n      revert\n        /* \"#utility.yul\":7923:7983   */\n    tag_445:\n        /* \"#utility.yul\":8002:8007   */\n      dup1\n        /* \"#utility.yul\":7992:8007   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":7666:8013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8018:8655   */\n    tag_80:\n        /* \"#utility.yul\":8130:8136   */\n      0x00\n        /* \"#utility.yul\":8138:8144   */\n      dup1\n        /* \"#utility.yul\":8146:8152   */\n      0x00\n        /* \"#utility.yul\":8199:8201   */\n      0x60\n        /* \"#utility.yul\":8187:8196   */\n      dup5\n        /* \"#utility.yul\":8178:8185   */\n      dup7\n        /* \"#utility.yul\":8174:8197   */\n      sub\n        /* \"#utility.yul\":8170:8202   */\n      slt\n        /* \"#utility.yul\":8167:8219   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":8215:8216   */\n      0x00\n        /* \"#utility.yul\":8212:8213   */\n      dup1\n        /* \"#utility.yul\":8205:8217   */\n      revert\n        /* \"#utility.yul\":8167:8219   */\n    tag_447:\n        /* \"#utility.yul\":8242:8265   */\n      dup4\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":8314:8328   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":8311:8345   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":8341:8342   */\n      0x00\n        /* \"#utility.yul\":8338:8339   */\n      dup1\n        /* \"#utility.yul\":8331:8343   */\n      revert\n        /* \"#utility.yul\":8311:8345   */\n    tag_448:\n        /* \"#utility.yul\":8364:8425   */\n      tag_449\n        /* \"#utility.yul\":8417:8424   */\n      dup8\n        /* \"#utility.yul\":8408:8414   */\n      dup4\n        /* \"#utility.yul\":8397:8406   */\n      dup9\n        /* \"#utility.yul\":8393:8415   */\n      add\n        /* \"#utility.yul\":8364:8425   */\n      tag_357\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":8354:8425   */\n      swap5\n      pop\n        /* \"#utility.yul\":8478:8480   */\n      0x20\n        /* \"#utility.yul\":8467:8476   */\n      dup7\n        /* \"#utility.yul\":8463:8481   */\n      add\n        /* \"#utility.yul\":8450:8482   */\n      calldataload\n        /* \"#utility.yul\":8434:8482   */\n      swap2\n      pop\n        /* \"#utility.yul\":8507:8509   */\n      dup1\n        /* \"#utility.yul\":8497:8505   */\n      dup3\n        /* \"#utility.yul\":8494:8510   */\n      gt\n        /* \"#utility.yul\":8491:8527   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":8523:8524   */\n      0x00\n        /* \"#utility.yul\":8520:8521   */\n      dup1\n        /* \"#utility.yul\":8513:8525   */\n      revert\n        /* \"#utility.yul\":8491:8527   */\n    tag_450:\n      pop\n        /* \"#utility.yul\":8546:8598   */\n      tag_396\n        /* \"#utility.yul\":8590:8597   */\n      dup7\n        /* \"#utility.yul\":8579:8587   */\n      dup3\n        /* \"#utility.yul\":8568:8577   */\n      dup8\n        /* \"#utility.yul\":8564:8588   */\n      add\n        /* \"#utility.yul\":8546:8598   */\n      tag_352\n      jump\t// in\n        /* \"#utility.yul\":8660:8920   */\n    tag_93:\n        /* \"#utility.yul\":8728:8734   */\n      0x00\n        /* \"#utility.yul\":8736:8742   */\n      dup1\n        /* \"#utility.yul\":8789:8791   */\n      0x40\n        /* \"#utility.yul\":8777:8786   */\n      dup4\n        /* \"#utility.yul\":8768:8775   */\n      dup6\n        /* \"#utility.yul\":8764:8787   */\n      sub\n        /* \"#utility.yul\":8760:8792   */\n      slt\n        /* \"#utility.yul\":8757:8809   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":8805:8806   */\n      0x00\n        /* \"#utility.yul\":8802:8803   */\n      dup1\n        /* \"#utility.yul\":8795:8807   */\n      revert\n        /* \"#utility.yul\":8757:8809   */\n    tag_453:\n        /* \"#utility.yul\":8828:8857   */\n      tag_454\n        /* \"#utility.yul\":8847:8856   */\n      dup4\n        /* \"#utility.yul\":8828:8857   */\n      tag_349\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":8818:8857   */\n      swap2\n      pop\n        /* \"#utility.yul\":8876:8914   */\n      tag_455\n        /* \"#utility.yul\":8910:8912   */\n      0x20\n        /* \"#utility.yul\":8899:8908   */\n      dup5\n        /* \"#utility.yul\":8895:8913   */\n      add\n        /* \"#utility.yul\":8876:8914   */\n      tag_349\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":8866:8914   */\n      swap1\n      pop\n        /* \"#utility.yul\":8660:8920   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8925:9532   */\n    tag_98:\n        /* \"#utility.yul\":9029:9035   */\n      0x00\n        /* \"#utility.yul\":9037:9043   */\n      dup1\n        /* \"#utility.yul\":9045:9051   */\n      0x00\n        /* \"#utility.yul\":9053:9059   */\n      dup1\n        /* \"#utility.yul\":9061:9067   */\n      0x00\n        /* \"#utility.yul\":9114:9117   */\n      0xa0\n        /* \"#utility.yul\":9102:9111   */\n      dup7\n        /* \"#utility.yul\":9093:9100   */\n      dup9\n        /* \"#utility.yul\":9089:9112   */\n      sub\n        /* \"#utility.yul\":9085:9118   */\n      slt\n        /* \"#utility.yul\":9082:9135   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":9131:9132   */\n      0x00\n        /* \"#utility.yul\":9128:9129   */\n      dup1\n        /* \"#utility.yul\":9121:9133   */\n      revert\n        /* \"#utility.yul\":9082:9135   */\n    tag_457:\n        /* \"#utility.yul\":9154:9183   */\n      tag_458\n        /* \"#utility.yul\":9173:9182   */\n      dup7\n        /* \"#utility.yul\":9154:9183   */\n      tag_349\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":9144:9183   */\n      swap5\n      pop\n        /* \"#utility.yul\":9202:9240   */\n      tag_459\n        /* \"#utility.yul\":9236:9238   */\n      0x20\n        /* \"#utility.yul\":9225:9234   */\n      dup8\n        /* \"#utility.yul\":9221:9239   */\n      add\n        /* \"#utility.yul\":9202:9240   */\n      tag_349\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":9192:9240   */\n      swap4\n      pop\n        /* \"#utility.yul\":9287:9289   */\n      0x40\n        /* \"#utility.yul\":9272:9290   */\n      dup7\n      add\n        /* \"#utility.yul\":9259:9291   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":9338:9340   */\n      0x60\n        /* \"#utility.yul\":9323:9341   */\n      dup7\n      add\n        /* \"#utility.yul\":9310:9342   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":9393:9396   */\n      0x80\n        /* \"#utility.yul\":9378:9397   */\n      dup7\n      add\n        /* \"#utility.yul\":9365:9398   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":9410:9440   */\n      dup2\n      gt\n        /* \"#utility.yul\":9407:9457   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":9453:9454   */\n      0x00\n        /* \"#utility.yul\":9450:9451   */\n      dup1\n        /* \"#utility.yul\":9443:9455   */\n      revert\n        /* \"#utility.yul\":9407:9457   */\n    tag_460:\n        /* \"#utility.yul\":9476:9526   */\n      tag_425\n        /* \"#utility.yul\":9518:9525   */\n      dup9\n        /* \"#utility.yul\":9509:9515   */\n      dup3\n        /* \"#utility.yul\":9498:9507   */\n      dup10\n        /* \"#utility.yul\":9494:9516   */\n      add\n        /* \"#utility.yul\":9476:9526   */\n      tag_352\n      jump\t// in\n        /* \"#utility.yul\":9537:9723   */\n    tag_102:\n        /* \"#utility.yul\":9596:9602   */\n      0x00\n        /* \"#utility.yul\":9649:9651   */\n      0x20\n        /* \"#utility.yul\":9637:9646   */\n      dup3\n        /* \"#utility.yul\":9628:9635   */\n      dup5\n        /* \"#utility.yul\":9624:9647   */\n      sub\n        /* \"#utility.yul\":9620:9652   */\n      slt\n        /* \"#utility.yul\":9617:9669   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":9665:9666   */\n      0x00\n        /* \"#utility.yul\":9662:9663   */\n      dup1\n        /* \"#utility.yul\":9655:9667   */\n      revert\n        /* \"#utility.yul\":9617:9669   */\n    tag_463:\n        /* \"#utility.yul\":9688:9717   */\n      tag_373\n        /* \"#utility.yul\":9707:9716   */\n      dup3\n        /* \"#utility.yul\":9688:9717   */\n      tag_349\n      jump\t// in\n        /* \"#utility.yul\":9728:10108   */\n    tag_118:\n        /* \"#utility.yul\":9807:9808   */\n      0x01\n        /* \"#utility.yul\":9803:9815   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":9850:9862   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":9871:9932   */\n      tag_466\n      jumpi\n        /* \"#utility.yul\":9925:9929   */\n      0x7f\n        /* \"#utility.yul\":9917:9923   */\n      dup3\n        /* \"#utility.yul\":9913:9930   */\n      and\n        /* \"#utility.yul\":9903:9930   */\n      swap2\n      pop\n        /* \"#utility.yul\":9871:9932   */\n    tag_466:\n        /* \"#utility.yul\":9978:9980   */\n      0x20\n        /* \"#utility.yul\":9970:9976   */\n      dup3\n        /* \"#utility.yul\":9967:9981   */\n      lt\n        /* \"#utility.yul\":9947:9965   */\n      dup2\n        /* \"#utility.yul\":9944:9982   */\n      sub\n        /* \"#utility.yul\":9941:10102   */\n      tag_467\n      jumpi\n        /* \"#utility.yul\":10024:10034   */\n      0x4e487b71\n        /* \"#utility.yul\":10019:10022   */\n      0xe0\n        /* \"#utility.yul\":10015:10035   */\n      shl\n        /* \"#utility.yul\":10012:10013   */\n      0x00\n        /* \"#utility.yul\":10005:10036   */\n      mstore\n        /* \"#utility.yul\":10059:10063   */\n      0x22\n        /* \"#utility.yul\":10056:10057   */\n      0x04\n        /* \"#utility.yul\":10049:10064   */\n      mstore\n        /* \"#utility.yul\":10087:10091   */\n      0x24\n        /* \"#utility.yul\":10084:10085   */\n      0x00\n        /* \"#utility.yul\":10077:10092   */\n      revert\n        /* \"#utility.yul\":9941:10102   */\n    tag_467:\n      pop\n        /* \"#utility.yul\":9728:10108   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10113:10240   */\n    tag_358:\n        /* \"#utility.yul\":10174:10184   */\n      0x4e487b71\n        /* \"#utility.yul\":10169:10172   */\n      0xe0\n        /* \"#utility.yul\":10165:10185   */\n      shl\n        /* \"#utility.yul\":10162:10163   */\n      0x00\n        /* \"#utility.yul\":10155:10186   */\n      mstore\n        /* \"#utility.yul\":10205:10209   */\n      0x11\n        /* \"#utility.yul\":10202:10203   */\n      0x04\n        /* \"#utility.yul\":10195:10210   */\n      mstore\n        /* \"#utility.yul\":10229:10233   */\n      0x24\n        /* \"#utility.yul\":10226:10227   */\n      0x00\n        /* \"#utility.yul\":10219:10234   */\n      revert\n        /* \"#utility.yul\":10245:10380   */\n    tag_134:\n        /* \"#utility.yul\":10284:10287   */\n      0x00\n        /* \"#utility.yul\":10305:10322   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":10302:10345   */\n      tag_471\n      jumpi\n        /* \"#utility.yul\":10325:10343   */\n      tag_471\n      tag_358\n      jump\t// in\n    tag_471:\n      pop\n        /* \"#utility.yul\":10372:10373   */\n      0x01\n        /* \"#utility.yul\":10361:10374   */\n      add\n      swap1\n        /* \"#utility.yul\":10245:10380   */\n      jump\t// out\n        /* \"#utility.yul\":10385:10512   */\n    tag_141:\n        /* \"#utility.yul\":10446:10456   */\n      0x4e487b71\n        /* \"#utility.yul\":10441:10444   */\n      0xe0\n        /* \"#utility.yul\":10437:10457   */\n      shl\n        /* \"#utility.yul\":10434:10435   */\n      0x00\n        /* \"#utility.yul\":10427:10458   */\n      mstore\n        /* \"#utility.yul\":10477:10481   */\n      0x32\n        /* \"#utility.yul\":10474:10475   */\n      0x04\n        /* \"#utility.yul\":10467:10482   */\n      mstore\n        /* \"#utility.yul\":10501:10505   */\n      0x24\n        /* \"#utility.yul\":10498:10499   */\n      0x00\n        /* \"#utility.yul\":10491:10506   */\n      revert\n        /* \"#utility.yul\":10517:10821   */\n    tag_156:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10747:10762   */\n      swap3\n      dup4\n      and\n        /* \"#utility.yul\":10729:10763   */\n      dup2\n      mstore\n        /* \"#utility.yul\":10799:10814   */\n      swap2\n      and\n        /* \"#utility.yul\":10794:10796   */\n      0x20\n        /* \"#utility.yul\":10779:10797   */\n      dup3\n      add\n        /* \"#utility.yul\":10772:10815   */\n      mstore\n        /* \"#utility.yul\":10679:10681   */\n      0x40\n        /* \"#utility.yul\":10664:10682   */\n      add\n      swap1\n        /* \"#utility.yul\":10517:10821   */\n      jump\t// out\n        /* \"#utility.yul\":11205:11723   */\n    tag_360:\n        /* \"#utility.yul\":11307:11309   */\n      0x1f\n        /* \"#utility.yul\":11302:11305   */\n      dup3\n        /* \"#utility.yul\":11299:11310   */\n      gt\n        /* \"#utility.yul\":11296:11717   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":11343:11348   */\n      dup1\n        /* \"#utility.yul\":11340:11341   */\n      0x00\n        /* \"#utility.yul\":11333:11349   */\n      mstore\n        /* \"#utility.yul\":11387:11391   */\n      0x20\n        /* \"#utility.yul\":11384:11385   */\n      0x00\n        /* \"#utility.yul\":11374:11392   */\n      keccak256\n        /* \"#utility.yul\":11457:11459   */\n      0x1f\n        /* \"#utility.yul\":11445:11455   */\n      dup5\n        /* \"#utility.yul\":11441:11460   */\n      add\n        /* \"#utility.yul\":11438:11439   */\n      0x05\n        /* \"#utility.yul\":11434:11461   */\n      shr\n        /* \"#utility.yul\":11428:11432   */\n      dup2\n        /* \"#utility.yul\":11424:11462   */\n      add\n        /* \"#utility.yul\":11493:11497   */\n      0x20\n        /* \"#utility.yul\":11481:11491   */\n      dup6\n        /* \"#utility.yul\":11478:11498   */\n      lt\n        /* \"#utility.yul\":11475:11522   */\n      iszero\n      tag_478\n      jumpi\n      pop\n        /* \"#utility.yul\":11516:11520   */\n      dup1\n        /* \"#utility.yul\":11475:11522   */\n    tag_478:\n        /* \"#utility.yul\":11571:11573   */\n      0x1f\n        /* \"#utility.yul\":11566:11569   */\n      dup5\n        /* \"#utility.yul\":11562:11574   */\n      add\n        /* \"#utility.yul\":11559:11560   */\n      0x05\n        /* \"#utility.yul\":11555:11575   */\n      shr\n        /* \"#utility.yul\":11549:11553   */\n      dup3\n        /* \"#utility.yul\":11545:11576   */\n      add\n        /* \"#utility.yul\":11535:11576   */\n      swap2\n      pop\n        /* \"#utility.yul\":11626:11707   */\n    tag_479:\n        /* \"#utility.yul\":11644:11646   */\n      dup2\n        /* \"#utility.yul\":11637:11642   */\n      dup2\n        /* \"#utility.yul\":11634:11647   */\n      lt\n        /* \"#utility.yul\":11626:11707   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":11703:11704   */\n      0x00\n        /* \"#utility.yul\":11689:11705   */\n      dup2\n      sstore\n        /* \"#utility.yul\":11670:11671   */\n      0x01\n        /* \"#utility.yul\":11659:11672   */\n      add\n        /* \"#utility.yul\":11626:11707   */\n      jump(tag_479)\n        /* \"#utility.yul\":11899:13244   */\n    tag_244:\n        /* \"#utility.yul\":12019:12029   */\n      dup2\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":12041:12071   */\n      dup2\n      gt\n        /* \"#utility.yul\":12038:12094   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":12074:12092   */\n      tag_485\n      tag_128\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":12103:12200   */\n      tag_486\n        /* \"#utility.yul\":12193:12199   */\n      dup2\n        /* \"#utility.yul\":12153:12191   */\n      tag_487\n        /* \"#utility.yul\":12185:12189   */\n      dup5\n        /* \"#utility.yul\":12179:12190   */\n      sload\n        /* \"#utility.yul\":12153:12191   */\n      tag_118\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":12147:12151   */\n      dup5\n        /* \"#utility.yul\":12103:12200   */\n      tag_360\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":12255:12259   */\n      0x20\n      dup1\n        /* \"#utility.yul\":12312:12314   */\n      0x1f\n        /* \"#utility.yul\":12301:12315   */\n      dup4\n      gt\n        /* \"#utility.yul\":12329:12330   */\n      0x01\n        /* \"#utility.yul\":12324:12987   */\n      dup2\n      eq\n      tag_489\n      jumpi\n        /* \"#utility.yul\":13031:13032   */\n      0x00\n        /* \"#utility.yul\":13048:13054   */\n      dup5\n        /* \"#utility.yul\":13045:13134   */\n      iszero\n      tag_490\n      jumpi\n      pop\n        /* \"#utility.yul\":13100:13119   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":13094:13120   */\n      mload\n        /* \"#utility.yul\":13045:13134   */\n    tag_490:\n      not(0x00)\n        /* \"#utility.yul\":11856:11857   */\n      0x03\n        /* \"#utility.yul\":11852:11863   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":11848:11872   */\n      shr\n        /* \"#utility.yul\":11844:11873   */\n      not\n        /* \"#utility.yul\":11834:11874   */\n      and\n        /* \"#utility.yul\":11880:11881   */\n      0x01\n        /* \"#utility.yul\":11876:11887   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":11831:11888   */\n      or\n        /* \"#utility.yul\":13147:13228   */\n      dup6\n      sstore\n        /* \"#utility.yul\":12294:13238   */\n      jump(tag_157)\n        /* \"#utility.yul\":12324:12987   */\n    tag_489:\n        /* \"#utility.yul\":11152:11153   */\n      0x00\n        /* \"#utility.yul\":11145:11159   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":11189:11193   */\n      0x20\n        /* \"#utility.yul\":11176:11194   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":12360:12380   */\n      dup7\n      and\n      swap2\n        /* \"#utility.yul\":12478:12714   */\n    tag_493:\n        /* \"#utility.yul\":12492:12499   */\n      dup3\n        /* \"#utility.yul\":12489:12490   */\n      dup2\n        /* \"#utility.yul\":12486:12500   */\n      lt\n        /* \"#utility.yul\":12478:12714   */\n      iszero\n      tag_495\n      jumpi\n        /* \"#utility.yul\":12581:12600   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":12575:12601   */\n      mload\n        /* \"#utility.yul\":12560:12602   */\n      dup3\n      sstore\n        /* \"#utility.yul\":12673:12700   */\n      swap5\n      dup5\n      add\n      swap5\n        /* \"#utility.yul\":12641:12642   */\n      0x01\n        /* \"#utility.yul\":12629:12643   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":12508:12527   */\n      dup5\n      add\n        /* \"#utility.yul\":12478:12714   */\n      jump(tag_493)\n    tag_495:\n        /* \"#utility.yul\":12482:12485   */\n      pop\n        /* \"#utility.yul\":12742:12748   */\n      dup6\n        /* \"#utility.yul\":12733:12740   */\n      dup3\n        /* \"#utility.yul\":12730:12749   */\n      lt\n        /* \"#utility.yul\":12727:12928   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":12803:12822   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":12797:12823   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":12886:12887   */\n      0x03\n        /* \"#utility.yul\":12882:12896   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":12898:12901   */\n      0xf8\n        /* \"#utility.yul\":12878:12902   */\n      and\n        /* \"#utility.yul\":12874:12911   */\n      shr\n        /* \"#utility.yul\":12870:12912   */\n      not\n        /* \"#utility.yul\":12855:12913   */\n      and\n        /* \"#utility.yul\":12840:12914   */\n      dup2\n      sstore\n        /* \"#utility.yul\":12727:12928   */\n    tag_496:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":12974:12975   */\n      0x01\n        /* \"#utility.yul\":12958:12972   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":12954:12976   */\n      add\n        /* \"#utility.yul\":12941:12977   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":11899:13244   */\n      jump\t// out\n        /* \"#utility.yul\":13671:13796   */\n    tag_304:\n        /* \"#utility.yul\":13736:13745   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":13757:13767   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":13754:13790   */\n      iszero\n      tag_104\n      jumpi\n        /* \"#utility.yul\":13770:13788   */\n      tag_104\n      tag_358\n      jump\t// in\n        /* \"#utility.yul\":13801:14266   */\n    tag_311:\n        /* \"#utility.yul\":14058:14060   */\n      0x40\n        /* \"#utility.yul\":14047:14056   */\n      dup2\n        /* \"#utility.yul\":14040:14061   */\n      mstore\n        /* \"#utility.yul\":14021:14025   */\n      0x00\n        /* \"#utility.yul\":14084:14140   */\n      tag_502\n        /* \"#utility.yul\":14136:14138   */\n      0x40\n        /* \"#utility.yul\":14125:14134   */\n      dup4\n        /* \"#utility.yul\":14121:14139   */\n      add\n        /* \"#utility.yul\":14113:14119   */\n      dup6\n        /* \"#utility.yul\":14084:14140   */\n      tag_354\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":14188:14197   */\n      dup3\n        /* \"#utility.yul\":14180:14186   */\n      dup2\n        /* \"#utility.yul\":14176:14198   */\n      sub\n        /* \"#utility.yul\":14171:14173   */\n      0x20\n        /* \"#utility.yul\":14160:14169   */\n      dup5\n        /* \"#utility.yul\":14156:14174   */\n      add\n        /* \"#utility.yul\":14149:14199   */\n      mstore\n        /* \"#utility.yul\":14216:14260   */\n      tag_503\n        /* \"#utility.yul\":14253:14259   */\n      dup2\n        /* \"#utility.yul\":14245:14251   */\n      dup6\n        /* \"#utility.yul\":14216:14260   */\n      tag_354\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":14208:14260   */\n      swap6\n        /* \"#utility.yul\":13801:14266   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14271:14832   */\n    tag_315:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14568:14583   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":14550:14584   */\n      dup3\n      mstore\n        /* \"#utility.yul\":14620:14635   */\n      dup6\n      and\n        /* \"#utility.yul\":14615:14617   */\n      0x20\n        /* \"#utility.yul\":14600:14618   */\n      dup3\n      add\n        /* \"#utility.yul\":14593:14636   */\n      mstore\n        /* \"#utility.yul\":14667:14669   */\n      0x40\n        /* \"#utility.yul\":14652:14670   */\n      dup2\n      add\n        /* \"#utility.yul\":14645:14679   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":14710:14712   */\n      0x60\n        /* \"#utility.yul\":14695:14713   */\n      dup2\n      add\n        /* \"#utility.yul\":14688:14722   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":14530:14533   */\n      0xa0\n        /* \"#utility.yul\":14753:14756   */\n      0x80\n        /* \"#utility.yul\":14738:14757   */\n      dup3\n      add\n        /* \"#utility.yul\":14731:14763   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":14493:14497   */\n      0x00\n      swap1\n        /* \"#utility.yul\":14780:14826   */\n      tag_505\n      swap1\n        /* \"#utility.yul\":14806:14825   */\n      dup4\n      add\n        /* \"#utility.yul\":14798:14804   */\n      dup5\n        /* \"#utility.yul\":14780:14826   */\n      tag_353\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":14772:14826   */\n      swap8\n        /* \"#utility.yul\":14271:14832   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14837:15086   */\n    tag_318:\n        /* \"#utility.yul\":14906:14912   */\n      0x00\n        /* \"#utility.yul\":14959:14961   */\n      0x20\n        /* \"#utility.yul\":14947:14956   */\n      dup3\n        /* \"#utility.yul\":14938:14945   */\n      dup5\n        /* \"#utility.yul\":14934:14957   */\n      sub\n        /* \"#utility.yul\":14930:14962   */\n      slt\n        /* \"#utility.yul\":14927:14979   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":14975:14976   */\n      0x00\n        /* \"#utility.yul\":14972:14973   */\n      dup1\n        /* \"#utility.yul\":14965:14977   */\n      revert\n        /* \"#utility.yul\":14927:14979   */\n    tag_507:\n        /* \"#utility.yul\":15007:15016   */\n      dup2\n        /* \"#utility.yul\":15001:15017   */\n      mload\n        /* \"#utility.yul\":15026:15056   */\n      tag_373\n        /* \"#utility.yul\":15050:15055   */\n      dup2\n        /* \"#utility.yul\":15026:15056   */\n      tag_350\n      jump\t// in\n        /* \"#utility.yul\":15091:15918   */\n    tag_334:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":15488:15503   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":15470:15504   */\n      dup3\n      mstore\n        /* \"#utility.yul\":15540:15555   */\n      dup6\n      and\n        /* \"#utility.yul\":15535:15537   */\n      0x20\n        /* \"#utility.yul\":15520:15538   */\n      dup3\n      add\n        /* \"#utility.yul\":15513:15556   */\n      mstore\n        /* \"#utility.yul\":15450:15453   */\n      0xa0\n        /* \"#utility.yul\":15587:15589   */\n      0x40\n        /* \"#utility.yul\":15572:15590   */\n      dup3\n      add\n        /* \"#utility.yul\":15565:15596   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":15413:15417   */\n      0x00\n      swap1\n        /* \"#utility.yul\":15619:15676   */\n      tag_510\n      swap1\n        /* \"#utility.yul\":15656:15675   */\n      dup4\n      add\n        /* \"#utility.yul\":15648:15654   */\n      dup7\n        /* \"#utility.yul\":15619:15676   */\n      tag_354\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":15724:15733   */\n      dup3\n        /* \"#utility.yul\":15716:15722   */\n      dup2\n        /* \"#utility.yul\":15712:15734   */\n      sub\n        /* \"#utility.yul\":15707:15709   */\n      0x60\n        /* \"#utility.yul\":15696:15705   */\n      dup5\n        /* \"#utility.yul\":15692:15710   */\n      add\n        /* \"#utility.yul\":15685:15735   */\n      mstore\n        /* \"#utility.yul\":15758:15802   */\n      tag_511\n        /* \"#utility.yul\":15795:15801   */\n      dup2\n        /* \"#utility.yul\":15787:15793   */\n      dup7\n        /* \"#utility.yul\":15758:15802   */\n      tag_354\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":15744:15802   */\n      swap1\n      pop\n        /* \"#utility.yul\":15851:15860   */\n      dup3\n        /* \"#utility.yul\":15843:15849   */\n      dup2\n        /* \"#utility.yul\":15839:15861   */\n      sub\n        /* \"#utility.yul\":15833:15836   */\n      0x80\n        /* \"#utility.yul\":15822:15831   */\n      dup5\n        /* \"#utility.yul\":15818:15837   */\n      add\n        /* \"#utility.yul\":15811:15862   */\n      mstore\n        /* \"#utility.yul\":15879:15912   */\n      tag_512\n        /* \"#utility.yul\":15905:15911   */\n      dup2\n        /* \"#utility.yul\":15897:15903   */\n      dup6\n        /* \"#utility.yul\":15879:15912   */\n      tag_353\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":15871:15912   */\n      swap9\n        /* \"#utility.yul\":15091:15918   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c16ce25c1fc7aa4bc1065d5ba2a04c0d27e9a3767e90f4645f81764f28ded85964736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2972": {
									"entryPoint": null,
									"id": 2972,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_345": {
									"entryPoint": null,
									"id": 345,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_958": {
									"entryPoint": 165,
									"id": 958,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 181,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 598,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 262,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4361:13",
										"nodeType": "YulBlock",
										"src": "0:4361:13",
										"statements": [
											{
												"nativeSrc": "6:3:13",
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:13",
													"nodeType": "YulBlock",
													"src": "46:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:13",
																		"nodeType": "YulLiteral",
																		"src": "63:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:13",
																				"nodeType": "YulLiteral",
																				"src": "70:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:13",
																				"nodeType": "YulLiteral",
																				"src": "75:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:13"
																		},
																		"nativeSrc": "66:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:13"
																},
																"nativeSrc": "56:31:13",
																"nodeType": "YulFunctionCall",
																"src": "56:31:13"
															},
															"nativeSrc": "56:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:13",
																		"nodeType": "YulLiteral",
																		"src": "103:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:13",
																		"nodeType": "YulLiteral",
																		"src": "106:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:13"
																},
																"nativeSrc": "96:15:13",
																"nodeType": "YulFunctionCall",
																"src": "96:15:13"
															},
															"nativeSrc": "96:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:13",
																		"nodeType": "YulLiteral",
																		"src": "127:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:13",
																		"nodeType": "YulLiteral",
																		"src": "130:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:13"
																},
																"nativeSrc": "120:15:13",
																"nodeType": "YulFunctionCall",
																"src": "120:15:13"
															},
															"nativeSrc": "120:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:13",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:13"
											},
											{
												"body": {
													"nativeSrc": "210:652:13",
													"nodeType": "YulBlock",
													"src": "210:652:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:13",
																"nodeType": "YulBlock",
																"src": "259:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:13",
																					"nodeType": "YulLiteral",
																					"src": "268:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:13",
																					"nodeType": "YulLiteral",
																					"src": "271:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:13"
																			},
																			"nativeSrc": "261:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:13"
																		},
																		"nativeSrc": "261:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:13",
																						"nodeType": "YulLiteral",
																						"src": "246:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:13"
																				},
																				"nativeSrc": "234:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:13"
																		},
																		"nativeSrc": "230:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:13"
																},
																"nativeSrc": "223:35:13",
																"nodeType": "YulFunctionCall",
																"src": "223:35:13"
															},
															"nativeSrc": "220:55:13",
															"nodeType": "YulIf",
															"src": "220:55:13"
														},
														{
															"nativeSrc": "284:23:13",
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "300:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "294:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:13"
																},
																"nativeSrc": "294:13:13",
																"nodeType": "YulFunctionCall",
																"src": "294:13:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "288:2:13",
																	"nodeType": "YulTypedName",
																	"src": "288:2:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "316:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "334:2:13",
																				"nodeType": "YulLiteral",
																				"src": "334:2:13",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "338:1:13",
																				"nodeType": "YulLiteral",
																				"src": "338:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "330:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:13"
																		},
																		"nativeSrc": "330:10:13",
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "342:1:13",
																		"nodeType": "YulLiteral",
																		"src": "342:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "326:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:13"
																},
																"nativeSrc": "326:18:13",
																"nodeType": "YulFunctionCall",
																"src": "326:18:13"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "320:2:13",
																	"nodeType": "YulTypedName",
																	"src": "320:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "367:22:13",
																"nodeType": "YulBlock",
																"src": "367:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "369:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:13"
																			},
																			"nativeSrc": "369:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:13"
																		},
																		"nativeSrc": "369:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "359:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:13"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "363:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "356:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:13"
																},
																"nativeSrc": "356:10:13",
																"nodeType": "YulFunctionCall",
																"src": "356:10:13"
															},
															"nativeSrc": "353:36:13",
															"nodeType": "YulIf",
															"src": "353:36:13"
														},
														{
															"nativeSrc": "398:17:13",
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "412:2:13",
																		"nodeType": "YulLiteral",
																		"src": "412:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "408:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:13"
																},
																"nativeSrc": "408:7:13",
																"nodeType": "YulFunctionCall",
																"src": "408:7:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "402:2:13",
																	"nodeType": "YulTypedName",
																	"src": "402:2:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "424:23:13",
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "444:2:13",
																		"nodeType": "YulLiteral",
																		"src": "444:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "438:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:13"
																},
																"nativeSrc": "438:9:13",
																"nodeType": "YulFunctionCall",
																"src": "438:9:13"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "428:6:13",
																	"nodeType": "YulTypedName",
																	"src": "428:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "456:71:13",
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "478:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nativeSrc": "502:2:13",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "506:4:13",
																										"nodeType": "YulLiteral",
																										"src": "506:4:13",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "498:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:13"
																								},
																								"nativeSrc": "498:13:13",
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:13"
																							},
																							{
																								"name": "_3",
																								"nativeSrc": "513:2:13",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:13"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "494:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:13"
																						},
																						"nativeSrc": "494:22:13",
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "518:2:13",
																						"nodeType": "YulLiteral",
																						"src": "518:2:13",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "490:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:13"
																				},
																				"nativeSrc": "490:31:13",
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:13"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "523:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "486:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:13"
																		},
																		"nativeSrc": "486:40:13",
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "474:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:13"
																},
																"nativeSrc": "474:53:13",
																"nodeType": "YulFunctionCall",
																"src": "474:53:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "460:10:13",
																	"nodeType": "YulTypedName",
																	"src": "460:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "586:22:13",
																"nodeType": "YulBlock",
																"src": "586:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "588:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:13"
																			},
																			"nativeSrc": "588:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:13"
																		},
																		"nativeSrc": "588:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "545:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:13"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "557:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "542:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:13"
																		},
																		"nativeSrc": "542:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "565:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "577:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "562:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:13"
																		},
																		"nativeSrc": "562:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "539:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:13"
																},
																"nativeSrc": "539:46:13",
																"nodeType": "YulFunctionCall",
																"src": "539:46:13"
															},
															"nativeSrc": "536:72:13",
															"nodeType": "YulIf",
															"src": "536:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "624:2:13",
																		"nodeType": "YulLiteral",
																		"src": "624:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "628:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "617:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:13"
																},
																"nativeSrc": "617:22:13",
																"nodeType": "YulFunctionCall",
																"src": "617:22:13"
															},
															"nativeSrc": "617:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "617:22:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "655:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "663:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "648:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:13"
																},
																"nativeSrc": "648:18:13",
																"nodeType": "YulFunctionCall",
																"src": "648:18:13"
															},
															"nativeSrc": "648:18:13",
															"nodeType": "YulExpressionStatement",
															"src": "648:18:13"
														},
														{
															"body": {
																"nativeSrc": "714:16:13",
																"nodeType": "YulBlock",
																"src": "714:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "723:1:13",
																					"nodeType": "YulLiteral",
																					"src": "723:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "726:1:13",
																					"nodeType": "YulLiteral",
																					"src": "726:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "716:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "716:6:13"
																			},
																			"nativeSrc": "716:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "716:12:13"
																		},
																		"nativeSrc": "716:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "716:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "689:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "689:6:13"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "697:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "697:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "685:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "685:3:13"
																				},
																				"nativeSrc": "685:15:13",
																				"nodeType": "YulFunctionCall",
																				"src": "685:15:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "702:4:13",
																				"nodeType": "YulLiteral",
																				"src": "702:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "681:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "681:3:13"
																		},
																		"nativeSrc": "681:26:13",
																		"nodeType": "YulFunctionCall",
																		"src": "681:26:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "709:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "709:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "678:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "678:2:13"
																},
																"nativeSrc": "678:35:13",
																"nodeType": "YulFunctionCall",
																"src": "678:35:13"
															},
															"nativeSrc": "675:55:13",
															"nodeType": "YulIf",
															"src": "675:55:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "749:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "749:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "757:4:13",
																				"nodeType": "YulLiteral",
																				"src": "757:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "745:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "745:3:13"
																		},
																		"nativeSrc": "745:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "745:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "768:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "768:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "776:4:13",
																				"nodeType": "YulLiteral",
																				"src": "776:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "764:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "764:3:13"
																		},
																		"nativeSrc": "764:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "764:17:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "783:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "783:2:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "739:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "739:5:13"
																},
																"nativeSrc": "739:47:13",
																"nodeType": "YulFunctionCall",
																"src": "739:47:13"
															},
															"nativeSrc": "739:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "739:47:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "810:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "810:6:13"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "818:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "818:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "806:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "806:3:13"
																				},
																				"nativeSrc": "806:15:13",
																				"nodeType": "YulFunctionCall",
																				"src": "806:15:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "823:4:13",
																				"nodeType": "YulLiteral",
																				"src": "823:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "802:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "802:3:13"
																		},
																		"nativeSrc": "802:26:13",
																		"nodeType": "YulFunctionCall",
																		"src": "802:26:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:13",
																		"nodeType": "YulLiteral",
																		"src": "830:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "795:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "795:6:13"
																},
																"nativeSrc": "795:37:13",
																"nodeType": "YulFunctionCall",
																"src": "795:37:13"
															},
															"nativeSrc": "795:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "795:37:13"
														},
														{
															"nativeSrc": "841:15:13",
															"nodeType": "YulAssignment",
															"src": "841:15:13",
															"value": {
																"name": "memPtr",
																"nativeSrc": "850:6:13",
																"nodeType": "YulIdentifier",
																"src": "850:6:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "841:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "841:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:716:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:13",
														"nodeType": "YulTypedName",
														"src": "184:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:13",
														"nodeType": "YulTypedName",
														"src": "192:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:13",
														"nodeType": "YulTypedName",
														"src": "200:5:13",
														"type": ""
													}
												],
												"src": "146:716:13"
											},
											{
												"body": {
													"nativeSrc": "1002:594:13",
													"nodeType": "YulBlock",
													"src": "1002:594:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1048:16:13",
																"nodeType": "YulBlock",
																"src": "1048:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1057:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1057:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1060:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1060:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1050:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1050:6:13"
																			},
																			"nativeSrc": "1050:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1050:12:13"
																		},
																		"nativeSrc": "1050:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1050:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1023:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1023:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1032:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1032:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1019:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1019:3:13"
																		},
																		"nativeSrc": "1019:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1019:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1044:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1044:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1015:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1015:3:13"
																},
																"nativeSrc": "1015:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1015:32:13"
															},
															"nativeSrc": "1012:52:13",
															"nodeType": "YulIf",
															"src": "1012:52:13"
														},
														{
															"nativeSrc": "1073:29:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1073:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1092:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1092:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1086:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1086:5:13"
																},
																"nativeSrc": "1086:16:13",
																"nodeType": "YulFunctionCall",
																"src": "1086:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1077:5:13",
																	"nodeType": "YulTypedName",
																	"src": "1077:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1165:16:13",
																"nodeType": "YulBlock",
																"src": "1165:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1174:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1174:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1177:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1177:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1167:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1167:6:13"
																			},
																			"nativeSrc": "1167:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1167:12:13"
																		},
																		"nativeSrc": "1167:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1167:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1124:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1124:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1135:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1135:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1150:3:13",
																										"nodeType": "YulLiteral",
																										"src": "1150:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1155:1:13",
																										"nodeType": "YulLiteral",
																										"src": "1155:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1146:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "1146:3:13"
																								},
																								"nativeSrc": "1146:11:13",
																								"nodeType": "YulFunctionCall",
																								"src": "1146:11:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1159:1:13",
																								"nodeType": "YulLiteral",
																								"src": "1159:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1142:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1142:3:13"
																						},
																						"nativeSrc": "1142:19:13",
																						"nodeType": "YulFunctionCall",
																						"src": "1142:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1131:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1131:3:13"
																				},
																				"nativeSrc": "1131:31:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1131:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1121:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1121:2:13"
																		},
																		"nativeSrc": "1121:42:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1121:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1114:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1114:6:13"
																},
																"nativeSrc": "1114:50:13",
																"nodeType": "YulFunctionCall",
																"src": "1114:50:13"
															},
															"nativeSrc": "1111:70:13",
															"nodeType": "YulIf",
															"src": "1111:70:13"
														},
														{
															"nativeSrc": "1190:15:13",
															"nodeType": "YulAssignment",
															"src": "1190:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "1200:5:13",
																"nodeType": "YulIdentifier",
																"src": "1200:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1190:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1190:6:13"
																}
															]
														},
														{
															"nativeSrc": "1214:39:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1214:39:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1238:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1238:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1249:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1249:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1234:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1234:3:13"
																		},
																		"nativeSrc": "1234:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1234:18:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1228:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1228:5:13"
																},
																"nativeSrc": "1228:25:13",
																"nodeType": "YulFunctionCall",
																"src": "1228:25:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1218:6:13",
																	"nodeType": "YulTypedName",
																	"src": "1218:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1262:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1262:28:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1280:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1280:2:13",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1284:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1284:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1276:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1276:3:13"
																		},
																		"nativeSrc": "1276:10:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1276:10:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1272:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:13"
																},
																"nativeSrc": "1272:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1266:2:13",
																	"nodeType": "YulTypedName",
																	"src": "1266:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1317:16:13",
																"nodeType": "YulBlock",
																"src": "1317:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1326:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1326:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1329:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1329:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1319:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1319:6:13"
																			},
																			"nativeSrc": "1319:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1319:12:13"
																		},
																		"nativeSrc": "1319:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1319:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1305:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1305:6:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1313:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "1313:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1302:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1302:2:13"
																},
																"nativeSrc": "1302:14:13",
																"nodeType": "YulFunctionCall",
																"src": "1302:14:13"
															},
															"nativeSrc": "1299:34:13",
															"nodeType": "YulIf",
															"src": "1299:34:13"
														},
														{
															"nativeSrc": "1342:71:13",
															"nodeType": "YulAssignment",
															"src": "1342:71:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1385:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1385:9:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1396:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1396:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1381:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1381:3:13"
																		},
																		"nativeSrc": "1381:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1381:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1405:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "1405:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1352:28:13",
																	"nodeType": "YulIdentifier",
																	"src": "1352:28:13"
																},
																"nativeSrc": "1352:61:13",
																"nodeType": "YulFunctionCall",
																"src": "1352:61:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1342:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:13"
																}
															]
														},
														{
															"nativeSrc": "1422:41:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1422:41:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1448:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1448:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1459:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1459:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1444:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1444:3:13"
																		},
																		"nativeSrc": "1444:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1444:18:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1438:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1438:5:13"
																},
																"nativeSrc": "1438:25:13",
																"nodeType": "YulFunctionCall",
																"src": "1438:25:13"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1426:8:13",
																	"nodeType": "YulTypedName",
																	"src": "1426:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1492:16:13",
																"nodeType": "YulBlock",
																"src": "1492:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1501:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1501:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1504:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1504:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1494:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1494:6:13"
																			},
																			"nativeSrc": "1494:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1494:12:13"
																		},
																		"nativeSrc": "1494:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1494:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1478:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "1478:8:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1488:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "1488:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1475:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1475:2:13"
																},
																"nativeSrc": "1475:16:13",
																"nodeType": "YulFunctionCall",
																"src": "1475:16:13"
															},
															"nativeSrc": "1472:36:13",
															"nodeType": "YulIf",
															"src": "1472:36:13"
														},
														{
															"nativeSrc": "1517:73:13",
															"nodeType": "YulAssignment",
															"src": "1517:73:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1560:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1560:9:13"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1571:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "1571:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1556:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1556:3:13"
																		},
																		"nativeSrc": "1556:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1556:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1582:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "1582:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1527:28:13",
																	"nodeType": "YulIdentifier",
																	"src": "1527:28:13"
																},
																"nativeSrc": "1527:63:13",
																"nodeType": "YulFunctionCall",
																"src": "1527:63:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1517:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1517:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "867:729:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "952:9:13",
														"nodeType": "YulTypedName",
														"src": "952:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "963:7:13",
														"nodeType": "YulTypedName",
														"src": "963:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "975:6:13",
														"nodeType": "YulTypedName",
														"src": "975:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "983:6:13",
														"nodeType": "YulTypedName",
														"src": "983:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "991:6:13",
														"nodeType": "YulTypedName",
														"src": "991:6:13",
														"type": ""
													}
												],
												"src": "867:729:13"
											},
											{
												"body": {
													"nativeSrc": "1702:102:13",
													"nodeType": "YulBlock",
													"src": "1702:102:13",
													"statements": [
														{
															"nativeSrc": "1712:26:13",
															"nodeType": "YulAssignment",
															"src": "1712:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1724:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1724:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1735:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1735:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1720:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1720:3:13"
																},
																"nativeSrc": "1720:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1720:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1712:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1712:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1754:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1754:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1769:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1769:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1785:3:13",
																								"nodeType": "YulLiteral",
																								"src": "1785:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1790:1:13",
																								"nodeType": "YulLiteral",
																								"src": "1790:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1781:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1781:3:13"
																						},
																						"nativeSrc": "1781:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "1781:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1794:1:13",
																						"nodeType": "YulLiteral",
																						"src": "1794:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1777:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1777:3:13"
																				},
																				"nativeSrc": "1777:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1777:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1765:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1765:3:13"
																		},
																		"nativeSrc": "1765:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1765:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1747:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1747:6:13"
																},
																"nativeSrc": "1747:51:13",
																"nodeType": "YulFunctionCall",
																"src": "1747:51:13"
															},
															"nativeSrc": "1747:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "1747:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1601:203:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1671:9:13",
														"nodeType": "YulTypedName",
														"src": "1671:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1682:6:13",
														"nodeType": "YulTypedName",
														"src": "1682:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1693:4:13",
														"nodeType": "YulTypedName",
														"src": "1693:4:13",
														"type": ""
													}
												],
												"src": "1601:203:13"
											},
											{
												"body": {
													"nativeSrc": "1864:325:13",
													"nodeType": "YulBlock",
													"src": "1864:325:13",
													"statements": [
														{
															"nativeSrc": "1874:22:13",
															"nodeType": "YulAssignment",
															"src": "1874:22:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1888:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1888:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1891:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "1891:4:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1884:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1884:3:13"
																},
																"nativeSrc": "1884:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1884:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1874:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1874:6:13"
																}
															]
														},
														{
															"nativeSrc": "1905:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1905:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1935:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "1935:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1941:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1941:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1931:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1931:3:13"
																},
																"nativeSrc": "1931:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1931:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1909:18:13",
																	"nodeType": "YulTypedName",
																	"src": "1909:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1982:31:13",
																"nodeType": "YulBlock",
																"src": "1982:31:13",
																"statements": [
																	{
																		"nativeSrc": "1984:27:13",
																		"nodeType": "YulAssignment",
																		"src": "1984:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1998:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "1998:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2006:4:13",
																					"nodeType": "YulLiteral",
																					"src": "2006:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1994:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1994:3:13"
																			},
																			"nativeSrc": "1994:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1994:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1984:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1984:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1962:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "1962:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1955:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1955:6:13"
																},
																"nativeSrc": "1955:26:13",
																"nodeType": "YulFunctionCall",
																"src": "1955:26:13"
															},
															"nativeSrc": "1952:61:13",
															"nodeType": "YulIf",
															"src": "1952:61:13"
														},
														{
															"body": {
																"nativeSrc": "2072:111:13",
																"nodeType": "YulBlock",
																"src": "2072:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2093:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2093:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2100:3:13",
																							"nodeType": "YulLiteral",
																							"src": "2100:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2105:10:13",
																							"nodeType": "YulLiteral",
																							"src": "2105:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2096:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "2096:3:13"
																					},
																					"nativeSrc": "2096:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "2096:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2086:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2086:6:13"
																			},
																			"nativeSrc": "2086:31:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2086:31:13"
																		},
																		"nativeSrc": "2086:31:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2086:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2137:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2137:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2140:4:13",
																					"nodeType": "YulLiteral",
																					"src": "2140:4:13",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2130:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2130:6:13"
																			},
																			"nativeSrc": "2130:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2130:15:13"
																		},
																		"nativeSrc": "2130:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2130:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2165:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2165:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2168:4:13",
																					"nodeType": "YulLiteral",
																					"src": "2168:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2158:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:13"
																			},
																			"nativeSrc": "2158:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2158:15:13"
																		},
																		"nativeSrc": "2158:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2158:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2028:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "2028:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2051:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2051:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2059:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2059:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2048:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2048:2:13"
																		},
																		"nativeSrc": "2048:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2048:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2025:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2025:2:13"
																},
																"nativeSrc": "2025:38:13",
																"nodeType": "YulFunctionCall",
																"src": "2025:38:13"
															},
															"nativeSrc": "2022:161:13",
															"nodeType": "YulIf",
															"src": "2022:161:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1809:380:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1844:4:13",
														"nodeType": "YulTypedName",
														"src": "1844:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1853:6:13",
														"nodeType": "YulTypedName",
														"src": "1853:6:13",
														"type": ""
													}
												],
												"src": "1809:380:13"
											},
											{
												"body": {
													"nativeSrc": "2250:65:13",
													"nodeType": "YulBlock",
													"src": "2250:65:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2267:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2267:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2270:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2270:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2260:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2260:6:13"
																},
																"nativeSrc": "2260:14:13",
																"nodeType": "YulFunctionCall",
																"src": "2260:14:13"
															},
															"nativeSrc": "2260:14:13",
															"nodeType": "YulExpressionStatement",
															"src": "2260:14:13"
														},
														{
															"nativeSrc": "2283:26:13",
															"nodeType": "YulAssignment",
															"src": "2283:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2301:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2301:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2304:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2304:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2291:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "2291:9:13"
																},
																"nativeSrc": "2291:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2291:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2283:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2283:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "2194:121:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2233:3:13",
														"nodeType": "YulTypedName",
														"src": "2233:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2241:4:13",
														"nodeType": "YulTypedName",
														"src": "2241:4:13",
														"type": ""
													}
												],
												"src": "2194:121:13"
											},
											{
												"body": {
													"nativeSrc": "2401:437:13",
													"nodeType": "YulBlock",
													"src": "2401:437:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2434:398:13",
																"nodeType": "YulBlock",
																"src": "2434:398:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2455:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2455:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2458:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "2458:5:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2448:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2448:6:13"
																			},
																			"nativeSrc": "2448:16:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2448:16:13"
																		},
																		"nativeSrc": "2448:16:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2448:16:13"
																	},
																	{
																		"nativeSrc": "2477:30:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2477:30:13",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2499:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2499:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2502:4:13",
																					"nodeType": "YulLiteral",
																					"src": "2502:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2489:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2489:9:13"
																			},
																			"nativeSrc": "2489:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2489:18:13"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2481:4:13",
																				"nodeType": "YulTypedName",
																				"src": "2481:4:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2520:57:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2520:57:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2543:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "2543:4:13"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2553:1:13",
																							"nodeType": "YulLiteral",
																							"src": "2553:1:13",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2560:10:13",
																									"nodeType": "YulIdentifier",
																									"src": "2560:10:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2572:2:13",
																									"nodeType": "YulLiteral",
																									"src": "2572:2:13",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2556:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "2556:3:13"
																							},
																							"nativeSrc": "2556:19:13",
																							"nodeType": "YulFunctionCall",
																							"src": "2556:19:13"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2549:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "2549:3:13"
																					},
																					"nativeSrc": "2549:27:13",
																					"nodeType": "YulFunctionCall",
																					"src": "2549:27:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2539:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2539:3:13"
																			},
																			"nativeSrc": "2539:38:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2539:38:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2524:11:13",
																				"nodeType": "YulTypedName",
																				"src": "2524:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2614:23:13",
																			"nodeType": "YulBlock",
																			"src": "2614:23:13",
																			"statements": [
																				{
																					"nativeSrc": "2616:19:13",
																					"nodeType": "YulAssignment",
																					"src": "2616:19:13",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2631:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "2631:4:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2616:11:13",
																							"nodeType": "YulIdentifier",
																							"src": "2616:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2596:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "2596:10:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2608:4:13",
																					"nodeType": "YulLiteral",
																					"src": "2608:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2593:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "2593:2:13"
																			},
																			"nativeSrc": "2593:20:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2593:20:13"
																		},
																		"nativeSrc": "2590:47:13",
																		"nodeType": "YulIf",
																		"src": "2590:47:13"
																	},
																	{
																		"nativeSrc": "2650:41:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2650:41:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2664:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "2664:4:13"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2674:1:13",
																							"nodeType": "YulLiteral",
																							"src": "2674:1:13",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2681:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "2681:3:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2686:2:13",
																									"nodeType": "YulLiteral",
																									"src": "2686:2:13",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2677:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "2677:3:13"
																							},
																							"nativeSrc": "2677:12:13",
																							"nodeType": "YulFunctionCall",
																							"src": "2677:12:13"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2670:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "2670:3:13"
																					},
																					"nativeSrc": "2670:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "2670:20:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2660:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2660:3:13"
																			},
																			"nativeSrc": "2660:31:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2660:31:13"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2654:2:13",
																				"nodeType": "YulTypedName",
																				"src": "2654:2:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2704:24:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2704:24:13",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2717:11:13",
																			"nodeType": "YulIdentifier",
																			"src": "2717:11:13"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2708:5:13",
																				"nodeType": "YulTypedName",
																				"src": "2708:5:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2802:20:13",
																			"nodeType": "YulBlock",
																			"src": "2802:20:13",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2811:5:13",
																								"nodeType": "YulIdentifier",
																								"src": "2811:5:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2818:1:13",
																								"nodeType": "YulLiteral",
																								"src": "2818:1:13",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2804:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "2804:6:13"
																						},
																						"nativeSrc": "2804:16:13",
																						"nodeType": "YulFunctionCall",
																						"src": "2804:16:13"
																					},
																					"nativeSrc": "2804:16:13",
																					"nodeType": "YulExpressionStatement",
																					"src": "2804:16:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2752:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "2752:5:13"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2759:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "2759:2:13"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2749:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "2749:2:13"
																			},
																			"nativeSrc": "2749:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2749:13:13"
																		},
																		"nativeSrc": "2741:81:13",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2763:26:13",
																			"nodeType": "YulBlock",
																			"src": "2763:26:13",
																			"statements": [
																				{
																					"nativeSrc": "2765:22:13",
																					"nodeType": "YulAssignment",
																					"src": "2765:22:13",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2778:5:13",
																								"nodeType": "YulIdentifier",
																								"src": "2778:5:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2785:1:13",
																								"nodeType": "YulLiteral",
																								"src": "2785:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2774:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "2774:3:13"
																						},
																						"nativeSrc": "2774:13:13",
																						"nodeType": "YulFunctionCall",
																						"src": "2774:13:13"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2765:5:13",
																							"nodeType": "YulIdentifier",
																							"src": "2765:5:13"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2745:3:13",
																			"nodeType": "YulBlock",
																			"src": "2745:3:13",
																			"statements": []
																		},
																		"src": "2741:81:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2417:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2417:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2422:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2422:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2414:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2414:2:13"
																},
																"nativeSrc": "2414:11:13",
																"nodeType": "YulFunctionCall",
																"src": "2414:11:13"
															},
															"nativeSrc": "2411:421:13",
															"nodeType": "YulIf",
															"src": "2411:421:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2320:518:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2373:5:13",
														"nodeType": "YulTypedName",
														"src": "2373:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2380:3:13",
														"nodeType": "YulTypedName",
														"src": "2380:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2385:10:13",
														"nodeType": "YulTypedName",
														"src": "2385:10:13",
														"type": ""
													}
												],
												"src": "2320:518:13"
											},
											{
												"body": {
													"nativeSrc": "2928:81:13",
													"nodeType": "YulBlock",
													"src": "2928:81:13",
													"statements": [
														{
															"nativeSrc": "2938:65:13",
															"nodeType": "YulAssignment",
															"src": "2938:65:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2953:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2953:4:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2971:1:13",
																										"nodeType": "YulLiteral",
																										"src": "2971:1:13",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2974:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "2974:3:13"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2967:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "2967:3:13"
																								},
																								"nativeSrc": "2967:11:13",
																								"nodeType": "YulFunctionCall",
																								"src": "2967:11:13"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2984:1:13",
																										"nodeType": "YulLiteral",
																										"src": "2984:1:13",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2980:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "2980:3:13"
																								},
																								"nativeSrc": "2980:6:13",
																								"nodeType": "YulFunctionCall",
																								"src": "2980:6:13"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2963:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "2963:3:13"
																						},
																						"nativeSrc": "2963:24:13",
																						"nodeType": "YulFunctionCall",
																						"src": "2963:24:13"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2959:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2959:3:13"
																				},
																				"nativeSrc": "2959:29:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2959:29:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2949:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2949:3:13"
																		},
																		"nativeSrc": "2949:40:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2949:40:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2995:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2995:1:13",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2998:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2998:3:13"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2991:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2991:3:13"
																		},
																		"nativeSrc": "2991:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2991:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2946:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2946:2:13"
																},
																"nativeSrc": "2946:57:13",
																"nodeType": "YulFunctionCall",
																"src": "2946:57:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2938:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2938:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2843:166:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2905:4:13",
														"nodeType": "YulTypedName",
														"src": "2905:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2911:3:13",
														"nodeType": "YulTypedName",
														"src": "2911:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2919:4:13",
														"nodeType": "YulTypedName",
														"src": "2919:4:13",
														"type": ""
													}
												],
												"src": "2843:166:13"
											},
											{
												"body": {
													"nativeSrc": "3110:1249:13",
													"nodeType": "YulBlock",
													"src": "3110:1249:13",
													"statements": [
														{
															"nativeSrc": "3120:24:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3120:24:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3140:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3140:3:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3134:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3134:5:13"
																},
																"nativeSrc": "3134:10:13",
																"nodeType": "YulFunctionCall",
																"src": "3134:10:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3124:6:13",
																	"nodeType": "YulTypedName",
																	"src": "3124:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3187:22:13",
																"nodeType": "YulBlock",
																"src": "3187:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3189:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "3189:16:13"
																			},
																			"nativeSrc": "3189:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3189:18:13"
																		},
																		"nativeSrc": "3189:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3189:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3159:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3159:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3175:2:13",
																						"nodeType": "YulLiteral",
																						"src": "3175:2:13",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3179:1:13",
																						"nodeType": "YulLiteral",
																						"src": "3179:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3171:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3171:3:13"
																				},
																				"nativeSrc": "3171:10:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3171:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3183:1:13",
																				"nodeType": "YulLiteral",
																				"src": "3183:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3167:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3167:3:13"
																		},
																		"nativeSrc": "3167:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3167:18:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3156:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3156:2:13"
																},
																"nativeSrc": "3156:30:13",
																"nodeType": "YulFunctionCall",
																"src": "3156:30:13"
															},
															"nativeSrc": "3153:56:13",
															"nodeType": "YulIf",
															"src": "3153:56:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3262:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3262:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3300:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "3300:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3294:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "3294:5:13"
																				},
																				"nativeSrc": "3294:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3294:11:13"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3268:25:13",
																			"nodeType": "YulIdentifier",
																			"src": "3268:25:13"
																		},
																		"nativeSrc": "3268:38:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3268:38:13"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3308:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3308:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "3218:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "3218:43:13"
																},
																"nativeSrc": "3218:97:13",
																"nodeType": "YulFunctionCall",
																"src": "3218:97:13"
															},
															"nativeSrc": "3218:97:13",
															"nodeType": "YulExpressionStatement",
															"src": "3218:97:13"
														},
														{
															"nativeSrc": "3324:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3324:18:13",
															"value": {
																"kind": "number",
																"nativeSrc": "3341:1:13",
																"nodeType": "YulLiteral",
																"src": "3341:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3328:9:13",
																	"nodeType": "YulTypedName",
																	"src": "3328:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3351:23:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3351:23:13",
															"value": {
																"kind": "number",
																"nativeSrc": "3370:4:13",
																"nodeType": "YulLiteral",
																"src": "3370:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "3355:11:13",
																	"nodeType": "YulTypedName",
																	"src": "3355:11:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3383:17:13",
															"nodeType": "YulAssignment",
															"src": "3383:17:13",
															"value": {
																"kind": "number",
																"nativeSrc": "3396:4:13",
																"nodeType": "YulLiteral",
																"src": "3396:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3383:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "3383:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3446:656:13",
																		"nodeType": "YulBlock",
																		"src": "3446:656:13",
																		"statements": [
																			{
																				"nativeSrc": "3460:35:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3460:35:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3479:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "3479:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3491:2:13",
																									"nodeType": "YulLiteral",
																									"src": "3491:2:13",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3487:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "3487:3:13"
																							},
																							"nativeSrc": "3487:7:13",
																							"nodeType": "YulFunctionCall",
																							"src": "3487:7:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3475:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "3475:3:13"
																					},
																					"nativeSrc": "3475:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "3475:20:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3464:7:13",
																						"nodeType": "YulTypedName",
																						"src": "3464:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3508:49:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3508:49:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3552:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "3552:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3522:29:13",
																						"nodeType": "YulIdentifier",
																						"src": "3522:29:13"
																					},
																					"nativeSrc": "3522:35:13",
																					"nodeType": "YulFunctionCall",
																					"src": "3522:35:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3512:6:13",
																						"nodeType": "YulTypedName",
																						"src": "3512:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3570:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3570:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3579:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3579:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3574:1:13",
																						"nodeType": "YulTypedName",
																						"src": "3574:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3657:172:13",
																					"nodeType": "YulBlock",
																					"src": "3657:172:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3682:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "3682:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3700:3:13",
																														"nodeType": "YulIdentifier",
																														"src": "3700:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3705:9:13",
																														"nodeType": "YulIdentifier",
																														"src": "3705:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3696:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "3696:3:13"
																												},
																												"nativeSrc": "3696:19:13",
																												"nodeType": "YulFunctionCall",
																												"src": "3696:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3690:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "3690:5:13"
																										},
																										"nativeSrc": "3690:26:13",
																										"nodeType": "YulFunctionCall",
																										"src": "3690:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3675:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "3675:6:13"
																								},
																								"nativeSrc": "3675:42:13",
																								"nodeType": "YulFunctionCall",
																								"src": "3675:42:13"
																							},
																							"nativeSrc": "3675:42:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "3675:42:13"
																						},
																						{
																							"nativeSrc": "3734:24:13",
																							"nodeType": "YulAssignment",
																							"src": "3734:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3748:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "3748:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3756:1:13",
																										"nodeType": "YulLiteral",
																										"src": "3756:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3744:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "3744:3:13"
																								},
																								"nativeSrc": "3744:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "3744:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3734:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "3734:6:13"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3775:40:13",
																							"nodeType": "YulAssignment",
																							"src": "3775:40:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3792:9:13",
																										"nodeType": "YulIdentifier",
																										"src": "3792:9:13"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3803:11:13",
																										"nodeType": "YulIdentifier",
																										"src": "3803:11:13"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3788:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "3788:3:13"
																								},
																								"nativeSrc": "3788:27:13",
																								"nodeType": "YulFunctionCall",
																								"src": "3788:27:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3775:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "3775:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3604:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "3604:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3607:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "3607:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3601:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "3601:2:13"
																					},
																					"nativeSrc": "3601:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "3601:14:13"
																				},
																				"nativeSrc": "3593:236:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3616:28:13",
																					"nodeType": "YulBlock",
																					"src": "3616:28:13",
																					"statements": [
																						{
																							"nativeSrc": "3618:24:13",
																							"nodeType": "YulAssignment",
																							"src": "3618:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3627:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "3627:1:13"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3630:11:13",
																										"nodeType": "YulIdentifier",
																										"src": "3630:11:13"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3623:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "3623:3:13"
																								},
																								"nativeSrc": "3623:19:13",
																								"nodeType": "YulFunctionCall",
																								"src": "3623:19:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3618:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "3618:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3597:3:13",
																					"nodeType": "YulBlock",
																					"src": "3597:3:13",
																					"statements": []
																				},
																				"src": "3593:236:13"
																			},
																			{
																				"body": {
																					"nativeSrc": "3877:166:13",
																					"nodeType": "YulBlock",
																					"src": "3877:166:13",
																					"statements": [
																						{
																							"nativeSrc": "3895:43:13",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3895:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3922:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "3922:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3927:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "3927:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3918:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "3918:3:13"
																										},
																										"nativeSrc": "3918:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "3918:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3912:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "3912:5:13"
																								},
																								"nativeSrc": "3912:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "3912:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3899:9:13",
																									"nodeType": "YulTypedName",
																									"src": "3899:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3962:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "3962:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3974:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "3974:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "4001:1:13",
																																				"nodeType": "YulLiteral",
																																				"src": "4001:1:13",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "4004:6:13",
																																				"nodeType": "YulIdentifier",
																																				"src": "4004:6:13"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3997:3:13",
																																			"nodeType": "YulIdentifier",
																																			"src": "3997:3:13"
																																		},
																																		"nativeSrc": "3997:14:13",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3997:14:13"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "4013:3:13",
																																		"nodeType": "YulLiteral",
																																		"src": "4013:3:13",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3993:3:13",
																																	"nodeType": "YulIdentifier",
																																	"src": "3993:3:13"
																																},
																																"nativeSrc": "3993:24:13",
																																"nodeType": "YulFunctionCall",
																																"src": "3993:24:13"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "4023:1:13",
																																		"nodeType": "YulLiteral",
																																		"src": "4023:1:13",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "4019:3:13",
																																	"nodeType": "YulIdentifier",
																																	"src": "4019:3:13"
																																},
																																"nativeSrc": "4019:6:13",
																																"nodeType": "YulFunctionCall",
																																"src": "4019:6:13"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3989:3:13",
																															"nodeType": "YulIdentifier",
																															"src": "3989:3:13"
																														},
																														"nativeSrc": "3989:37:13",
																														"nodeType": "YulFunctionCall",
																														"src": "3989:37:13"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3985:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "3985:3:13"
																												},
																												"nativeSrc": "3985:42:13",
																												"nodeType": "YulFunctionCall",
																												"src": "3985:42:13"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3970:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "3970:3:13"
																										},
																										"nativeSrc": "3970:58:13",
																										"nodeType": "YulFunctionCall",
																										"src": "3970:58:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3955:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "3955:6:13"
																								},
																								"nativeSrc": "3955:74:13",
																								"nodeType": "YulFunctionCall",
																								"src": "3955:74:13"
																							},
																							"nativeSrc": "3955:74:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "3955:74:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3848:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "3848:7:13"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3857:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "3857:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3845:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "3845:2:13"
																					},
																					"nativeSrc": "3845:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "3845:19:13"
																				},
																				"nativeSrc": "3842:201:13",
																				"nodeType": "YulIf",
																				"src": "3842:201:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4063:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "4063:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "4077:1:13",
																											"nodeType": "YulLiteral",
																											"src": "4077:1:13",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "4080:6:13",
																											"nodeType": "YulIdentifier",
																											"src": "4080:6:13"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "4073:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "4073:3:13"
																									},
																									"nativeSrc": "4073:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "4073:14:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4089:1:13",
																									"nodeType": "YulLiteral",
																									"src": "4089:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4069:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "4069:3:13"
																							},
																							"nativeSrc": "4069:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "4069:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4056:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4056:6:13"
																					},
																					"nativeSrc": "4056:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4056:36:13"
																				},
																				"nativeSrc": "4056:36:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "4056:36:13"
																			}
																		]
																	},
																	"nativeSrc": "3439:663:13",
																	"nodeType": "YulCase",
																	"src": "3439:663:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3444:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3444:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "4119:234:13",
																		"nodeType": "YulBlock",
																		"src": "4119:234:13",
																		"statements": [
																			{
																				"nativeSrc": "4133:14:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4133:14:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4146:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4146:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "4137:5:13",
																						"nodeType": "YulTypedName",
																						"src": "4137:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4182:67:13",
																					"nodeType": "YulBlock",
																					"src": "4182:67:13",
																					"statements": [
																						{
																							"nativeSrc": "4200:35:13",
																							"nodeType": "YulAssignment",
																							"src": "4200:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4219:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "4219:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4224:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "4224:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4215:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "4215:3:13"
																										},
																										"nativeSrc": "4215:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "4215:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4209:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "4209:5:13"
																								},
																								"nativeSrc": "4209:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "4209:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "4200:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "4200:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "4163:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "4163:6:13"
																				},
																				"nativeSrc": "4160:89:13",
																				"nodeType": "YulIf",
																				"src": "4160:89:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4269:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "4269:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4328:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "4328:5:13"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4335:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "4335:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "4275:52:13",
																								"nodeType": "YulIdentifier",
																								"src": "4275:52:13"
																							},
																							"nativeSrc": "4275:67:13",
																							"nodeType": "YulFunctionCall",
																							"src": "4275:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4262:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4262:6:13"
																					},
																					"nativeSrc": "4262:81:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4262:81:13"
																				},
																				"nativeSrc": "4262:81:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "4262:81:13"
																			}
																		]
																	},
																	"nativeSrc": "4111:242:13",
																	"nodeType": "YulCase",
																	"src": "4111:242:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3419:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3419:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3427:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3427:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3416:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3416:2:13"
																},
																"nativeSrc": "3416:14:13",
																"nodeType": "YulFunctionCall",
																"src": "3416:14:13"
															},
															"nativeSrc": "3409:944:13",
															"nodeType": "YulSwitch",
															"src": "3409:944:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3014:1345:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3095:4:13",
														"nodeType": "YulTypedName",
														"src": "3095:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3101:3:13",
														"nodeType": "YulTypedName",
														"src": "3101:3:13",
														"type": ""
													}
												],
												"src": "3014:1345:13"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        mcopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let offset := mload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1B00 CODESIZE SUB DUP1 PUSH2 0x1B00 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x32 SWAP2 PUSH2 0x1A2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE DUP4 SWAP1 PUSH2 0x4B DUP2 PUSH2 0xA5 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x79 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x82 DUP2 PUSH2 0xB5 JUMP JUMPDEST POP PUSH1 0x5 PUSH2 0x8F DUP4 DUP3 PUSH2 0x2A2 JUMP JUMPDEST POP PUSH1 0x6 PUSH2 0x9C DUP3 DUP3 PUSH2 0x2A2 JUMP JUMPDEST POP POP POP POP PUSH2 0x361 JUMP JUMPDEST PUSH1 0x2 PUSH2 0xB1 DUP3 DUP3 PUSH2 0x2A2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x129 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x143 JUMPI PUSH2 0x143 PUSH2 0x106 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x16B JUMPI PUSH2 0x16B PUSH2 0x106 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x183 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD MCOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1CA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1F2 DUP8 DUP4 DUP9 ADD PUSH2 0x11A JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x207 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 DUP7 DUP3 DUP8 ADD PUSH2 0x11A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x232 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x250 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x29D JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x27B JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x29A JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x287 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2BB JUMPI PUSH2 0x2BB PUSH2 0x106 JUMP JUMPDEST PUSH2 0x2CF DUP2 PUSH2 0x2C9 DUP5 SLOAD PUSH2 0x21E JUMP JUMPDEST DUP5 PUSH2 0x256 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x302 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2EB JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x359 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x330 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x311 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x34D JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1792 DUP1 PUSH2 0x36E PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xFDD58E EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0xA1E88D1 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x17D70F7C EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xA7FD4A02 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xBA7AEF43 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x25D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x105 PUSH2 0x100 CALLDATASIZE PUSH1 0x4 PUSH2 0xF5D JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH2 0x126 CALLDATASIZE PUSH1 0x4 PUSH2 0xF9A JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH2 0x14E PUSH2 0x149 CALLDATASIZE PUSH1 0x4 PUSH2 0x106B JUMP JUMPDEST PUSH2 0x2E6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x158 PUSH2 0x2FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x10CA JUMP JUMPDEST PUSH2 0x178 PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0x10DC JUMP JUMPDEST PUSH2 0x38A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x1168 JUMP JUMPDEST PUSH2 0x158 PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0x117A JUMP JUMPDEST PUSH2 0x44E JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x105 JUMP JUMPDEST PUSH2 0x14E PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0x121F JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1324 JUMP JUMPDEST PUSH2 0x541 JUMP JUMPDEST PUSH2 0x14E PUSH2 0x607 JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x61A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x1383 JUMP JUMPDEST PUSH2 0x158 PUSH2 0x629 JUMP JUMPDEST PUSH2 0x14E PUSH2 0x1F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1397 JUMP JUMPDEST PUSH2 0x638 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x20C CALLDATASIZE PUSH1 0x4 PUSH2 0x13D0 JUMP JUMPDEST PUSH2 0x647 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0x10DC JUMP JUMPDEST PUSH2 0x71B JUMP JUMPDEST PUSH2 0x158 PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0x117A JUMP JUMPDEST PUSH2 0x766 JUMP JUMPDEST PUSH2 0x12B PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x1426 JUMP JUMPDEST PUSH2 0x782 JUMP JUMPDEST PUSH2 0x14E PUSH2 0x258 CALLDATASIZE PUSH1 0x4 PUSH2 0x1457 JUMP JUMPDEST PUSH2 0x7AF JUMP JUMPDEST PUSH2 0x14E PUSH2 0x26B CALLDATASIZE PUSH1 0x4 PUSH2 0x14B6 JUMP JUMPDEST PUSH2 0x7FF JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x2C7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x291 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x291 JUMP JUMPDEST PUSH2 0x2EE PUSH2 0x839 JUMP JUMPDEST PUSH2 0x2F7 DUP2 PUSH2 0x86B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x309 SWAP1 PUSH2 0x14CF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x335 SWAP1 PUSH2 0x14CF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x380 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x357 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x380 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x363 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x394 PUSH2 0x839 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3AD JUMPI PUSH2 0x3AD PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3D6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x445 JUMPI PUSH1 0x4 DUP1 SLOAD PUSH0 SWAP2 DUP3 PUSH2 0x3F3 DUP4 PUSH2 0x151B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x414 DUP8 DUP3 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x877 JUMP JUMPDEST PUSH2 0x41E DUP2 DUP8 PUSH2 0x8BD JUMP JUMPDEST DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x431 JUMPI PUSH2 0x431 PUSH2 0x1533 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x3DB JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x45D SWAP1 PUSH2 0x14CF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x489 SWAP1 PUSH2 0x14CF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4D4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4AB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4D4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4B7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x501 JUMPI POP PUSH2 0x4FF DUP7 DUP3 PUSH2 0x782 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x52C JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP3 SWAP2 SWAP1 PUSH2 0x1547 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x539 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x8D9 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x572 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x523 JUMP JUMPDEST PUSH0 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x58C JUMPI PUSH2 0x58C PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5B5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5FF JUMPI PUSH2 0x5DA PUSH2 0x5D0 DUP7 DUP4 PUSH2 0x93E JUMP JUMPDEST PUSH2 0x100 DUP7 DUP5 PUSH2 0x93E JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5EC JUMPI PUSH2 0x5EC PUSH2 0x1533 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x5BA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x60F PUSH2 0x839 JUMP JUMPDEST PUSH2 0x618 PUSH0 PUSH2 0x94C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x309 SWAP1 PUSH2 0x14CF JUMP JUMPDEST PUSH2 0x643 CALLER DUP4 DUP4 PUSH2 0x99D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x651 PUSH2 0x839 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x66A JUMPI PUSH2 0x66A PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x693 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x445 JUMPI PUSH1 0x4 DUP1 SLOAD PUSH0 SWAP2 DUP3 PUSH2 0x6B0 DUP4 PUSH2 0x151B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x6EA DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6CB JUMPI PUSH2 0x6CB PUSH2 0x1533 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x877 JUMP JUMPDEST PUSH2 0x6F4 DUP2 DUP8 PUSH2 0x8BD JUMP JUMPDEST DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x707 JUMPI PUSH2 0x707 PUSH2 0x1533 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x698 JUMP JUMPDEST PUSH0 PUSH2 0x724 PUSH2 0x839 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH0 SWAP2 DUP3 PUSH2 0x734 DUP4 PUSH2 0x151B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x754 DUP6 DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x877 JUMP JUMPDEST PUSH2 0x75E DUP2 DUP6 PUSH2 0x8BD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH2 0x45D SWAP1 PUSH2 0x14CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x7D0 JUMPI POP PUSH2 0x7CE DUP7 DUP3 PUSH2 0x782 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x7F2 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP3 SWAP2 SWAP1 PUSH2 0x1547 JUMP JUMPDEST PUSH2 0x539 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xA31 JUMP JUMPDEST PUSH2 0x807 PUSH2 0x839 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x830 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP2 SWAP1 PUSH2 0x1383 JUMP JUMPDEST PUSH2 0x2F7 DUP2 PUSH2 0x94C JUMP JUMPDEST CALLER PUSH2 0x842 PUSH2 0x61A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x618 JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP2 SWAP1 PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x643 DUP3 DUP3 PUSH2 0x15A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x8A0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP2 SWAP1 PUSH2 0x1383 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8AC DUP6 DUP6 PUSH2 0xAA8 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x539 PUSH0 DUP8 DUP5 DUP5 DUP8 PUSH2 0xAD0 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x8D4 DUP3 DUP3 PUSH2 0x15A5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x902 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP2 SWAP1 PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x92A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP2 SWAP1 PUSH2 0x1383 JUMP JUMPDEST PUSH2 0x937 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xAD0 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9C5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH3 0xCED3E1 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP2 SWAP1 PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xA5A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP2 SWAP1 PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xA82 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP2 SWAP1 PUSH2 0x1383 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA8E DUP6 DUP6 PUSH2 0xAA8 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xA9F DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0xAD0 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 DUP3 ADD SWAP4 DUP5 MSTORE PUSH1 0x60 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 MSTORE SWAP2 JUMP JUMPDEST PUSH2 0xADC DUP6 DUP6 DUP6 DUP6 PUSH2 0xB33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x937 JUMPI DUP3 MLOAD CALLER SWAP1 PUSH1 0x1 SUB PUSH2 0xB25 JUMPI PUSH0 PUSH2 0xB01 DUP6 DUP3 PUSH2 0x93E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xB0E DUP6 DUP3 PUSH2 0x93E JUMP JUMPDEST SWAP1 POP PUSH2 0xB1E DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0xD55 JUMP JUMPDEST POP POP PUSH2 0x539 JUMP JUMPDEST PUSH2 0x539 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xE64 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xB62 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x523 JUMP JUMPDEST CALLER PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xC6C JUMPI PUSH0 PUSH2 0xB79 DUP6 DUP4 PUSH2 0x93E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xB86 DUP6 DUP5 PUSH2 0x93E JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH2 0xC1E JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xBF8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x84 ADD PUSH2 0x523 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO PUSH2 0xC62 JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xC5C SWAP1 DUP5 SWAP1 PUSH2 0x1660 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0xB65 JUMP JUMPDEST POP DUP3 MLOAD PUSH1 0x1 SUB PUSH2 0xCF7 JUMPI PUSH0 PUSH2 0xC81 DUP5 DUP3 PUSH2 0x93E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xC8E DUP5 DUP3 PUSH2 0x93E JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xCE8 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x937 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xD46 SWAP3 SWAP2 SWAP1 PUSH2 0x1673 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x539 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xD99 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x16A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xDD3 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xDD0 SWAP2 DUP2 ADD SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xE31 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xE00 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE05 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0xE29 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP2 SWAP1 PUSH2 0x1383 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xA9F JUMPI DUP5 PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP2 SWAP1 PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x539 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xEA8 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xEE2 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xEDF SWAP2 DUP2 ADD SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xF0F JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xE00 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE05 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xA9F JUMPI DUP5 PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP2 SWAP1 PUSH2 0x1383 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF58 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF6E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF77 DUP4 PUSH2 0xF42 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x2F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFAA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFB5 DUP2 PUSH2 0xF85 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xFF8 JUMPI PUSH2 0xFF8 PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x100F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1028 JUMPI PUSH2 0x1028 PUSH2 0xFBC JUMP JUMPDEST PUSH2 0x103B PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0xFD0 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x104F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x107B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1090 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x75E DUP5 DUP3 DUP6 ADD PUSH2 0x1000 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xFB5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x109C JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10EE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10F7 DUP5 PUSH2 0xF42 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1111 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x111D DUP7 DUP3 DUP8 ADD PUSH2 0x1000 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x115D JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1141 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xFB5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x112E JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x118A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x11A9 JUMPI PUSH2 0x11A9 PUSH2 0xFBC JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x11D7 PUSH2 0x11D2 DUP4 PUSH2 0x1191 JUMP JUMPDEST PUSH2 0xFD0 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x11F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1214 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x11FD JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1233 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x123C DUP7 PUSH2 0xF42 JUMP JUMPDEST SWAP5 POP PUSH2 0x124A PUSH1 0x20 DUP8 ADD PUSH2 0xF42 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1265 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1271 DUP10 DUP4 DUP11 ADD PUSH2 0x11B3 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1286 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1292 DUP10 DUP4 DUP11 ADD PUSH2 0x11B3 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x12A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12B4 DUP9 DUP3 DUP10 ADD PUSH2 0x1000 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x12E0 PUSH2 0x11D2 DUP4 PUSH2 0x1191 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x1301 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1214 JUMPI PUSH2 0x1317 DUP2 PUSH2 0xF42 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1306 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1335 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x134B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1357 DUP7 DUP4 DUP8 ADD PUSH2 0x12C1 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x136C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1379 DUP6 DUP3 DUP7 ADD PUSH2 0x11B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13B1 DUP4 PUSH2 0xF42 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x13C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x13F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1404 DUP8 DUP4 DUP9 ADD PUSH2 0x12C1 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1419 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x111D DUP7 DUP3 DUP8 ADD PUSH2 0x1000 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1437 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1440 DUP4 PUSH2 0xF42 JUMP JUMPDEST SWAP2 POP PUSH2 0x144E PUSH1 0x20 DUP5 ADD PUSH2 0xF42 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x146B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1474 DUP7 PUSH2 0xF42 JUMP JUMPDEST SWAP5 POP PUSH2 0x1482 PUSH1 0x20 DUP8 ADD PUSH2 0xF42 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x14AA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12B4 DUP9 DUP3 DUP10 ADD PUSH2 0x1000 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFB5 DUP3 PUSH2 0xF42 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x14E3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1501 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x152C JUMPI PUSH2 0x152C PUSH2 0x1507 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x8D4 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1586 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x937 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1592 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x15BE JUMPI PUSH2 0x15BE PUSH2 0xFBC JUMP JUMPDEST PUSH2 0x15D2 DUP2 PUSH2 0x15CC DUP5 SLOAD PUSH2 0x14CF JUMP JUMPDEST DUP5 PUSH2 0x1561 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1605 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x15EE JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x539 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1633 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1614 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1650 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x291 JUMPI PUSH2 0x291 PUSH2 0x1507 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x1685 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x112E JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1697 DUP2 DUP6 PUSH2 0x112E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x16D9 SWAP1 DUP4 ADD DUP5 PUSH2 0x109C JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xFB5 DUP2 PUSH2 0xF85 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x172A SWAP1 DUP4 ADD DUP7 PUSH2 0x112E JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x173C DUP2 DUP7 PUSH2 0x112E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1750 DUP2 DUP6 PUSH2 0x109C JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 PUSH13 0xE25C1FC7AA4BC1065D5BA2A04C 0xD 0x27 0xE9 LOG3 PUSH23 0x7E90F4645F81764F28DED85964736F6C63430008190033 ",
							"sourceMap": "172:2195:12:-:0;;;255:1;228:28;;368:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1251:62:2;;;;;;;;;-1:-1:-1;1251:62:2;;464:12:12;;1293:13:2;1251:62;1293:7;:13::i;:::-;-1:-1:-1;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;1747:51:13;1720:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;488:5:12::2;:12;496:4:::0;488:5;:12:::2;:::i;:::-;-1:-1:-1::0;510:7:12::2;:16;520:6:::0;510:7;:16:::2;:::i;:::-;;368:165:::0;;;172:2195;;10282:86:2;10348:4;:13;10355:6;10348:4;:13;:::i;:::-;;10282:86;:::o;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:127:13:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:716;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:13;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:13;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;709:3;702:4;697:2;689:6;685:15;681:26;678:35;675:55;;;726:1;723;716:12;675:55;783:2;776:4;768:6;764:17;757:4;749:6;745:17;739:47;830:1;823:4;818:2;810:6;806:15;802:26;795:37;850:6;841:15;;;;;;146:716;;;;:::o;867:729::-;975:6;983;991;1044:2;1032:9;1023:7;1019:23;1015:32;1012:52;;;1060:1;1057;1050:12;1012:52;1086:16;;-1:-1:-1;;;;;1131:31:13;;1121:42;;1111:70;;1177:1;1174;1167:12;1111:70;1249:2;1234:18;;1228:25;1200:5;;-1:-1:-1;;;;;;1302:14:13;;;1299:34;;;1329:1;1326;1319:12;1299:34;1352:61;1405:7;1396:6;1385:9;1381:22;1352:61;:::i;:::-;1342:71;;1459:2;1448:9;1444:18;1438:25;1422:41;;1488:2;1478:8;1475:16;1472:36;;;1504:1;1501;1494:12;1472:36;;1527:63;1582:7;1571:8;1560:9;1556:24;1527:63;:::i;:::-;1517:73;;;867:729;;;;;:::o;1809:380::-;1888:1;1884:12;;;;1931;;;1952:61;;2006:4;1998:6;1994:17;1984:27;;1952:61;2059:2;2051:6;2048:14;2028:18;2025:38;2022:161;;2105:10;2100:3;2096:20;2093:1;2086:31;2140:4;2137:1;2130:15;2168:4;2165:1;2158:15;2022:161;;1809:380;;;:::o;2320:518::-;2422:2;2417:3;2414:11;2411:421;;;2458:5;2455:1;2448:16;2502:4;2499:1;2489:18;2572:2;2560:10;2556:19;2553:1;2549:27;2543:4;2539:38;2608:4;2596:10;2593:20;2590:47;;;-1:-1:-1;2631:4:13;2590:47;2686:2;2681:3;2677:12;2674:1;2670:20;2664:4;2660:31;2650:41;;2741:81;2759:2;2752:5;2749:13;2741:81;;;2818:1;2804:16;;2785:1;2774:13;2741:81;;;2745:3;;2411:421;2320:518;;;:::o;3014:1345::-;3134:10;;-1:-1:-1;;;;;3156:30:13;;3153:56;;;3189:18;;:::i;:::-;3218:97;3308:6;3268:38;3300:4;3294:11;3268:38;:::i;:::-;3262:4;3218:97;:::i;:::-;3370:4;;3427:2;3416:14;;3444:1;3439:663;;;;4146:1;4163:6;4160:89;;;-1:-1:-1;4215:19:13;;;4209:26;4160:89;-1:-1:-1;;2971:1:13;2967:11;;;2963:24;2959:29;2949:40;2995:1;2991:11;;;2946:57;4262:81;;3409:944;;3439:663;2267:1;2260:14;;;2304:4;2291:18;;-1:-1:-1;;3475:20:13;;;3593:236;3607:7;3604:1;3601:14;3593:236;;;3696:19;;;3690:26;3675:42;;3788:27;;;;3756:1;3744:14;;;;3623:19;;3593:236;;;3597:3;3857:6;3848:7;3845:19;3842:201;;;3918:19;;;3912:26;-1:-1:-1;;4001:1:13;3997:14;;;4013:3;3993:24;3989:37;3985:42;3970:58;3955:74;;3842:201;;;4089:1;4080:6;4077:1;4073:14;4069:22;4063:4;4056:36;3409:944;;;;;3014:1345;;:::o;:::-;172:2195:12;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_asSingletonArrays_1334": {
									"entryPoint": 2728,
									"id": 1334,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_checkOwner_84": {
									"entryPoint": 2105,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1318": {
									"entryPoint": 3684,
									"id": 1318,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1248": {
									"entryPoint": 3413,
									"id": 1248,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mint_1010": {
									"entryPoint": 2167,
									"id": 1010,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_1711": {
									"entryPoint": null,
									"id": 1711,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_947": {
									"entryPoint": 2265,
									"id": 947,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_892": {
									"entryPoint": 2609,
									"id": 892,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1180": {
									"entryPoint": 2461,
									"id": 1180,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setTokenURI_2998": {
									"entryPoint": 2237,
									"id": 2998,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setURI_958": {
									"entryPoint": 2155,
									"id": 958,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2380,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateWithAcceptanceCheck_826": {
									"entryPoint": 2768,
									"id": 826,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_update_750": {
									"entryPoint": 2867,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@balanceOfBatch_474": {
									"entryPoint": 1345,
									"id": 474,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_404": {
									"entryPoint": 624,
									"id": 404,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_507": {
									"entryPoint": 1922,
									"id": 507,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mintUniqueNFT_3094": {
									"entryPoint": 906,
									"id": 3094,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@mintUniqueNFT_3160": {
									"entryPoint": 1607,
									"id": 3160,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@mint_3031": {
									"entryPoint": 1819,
									"id": 3031,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@name_3168": {
									"entryPoint": 762,
									"id": 3168,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1562,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1543,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeBatchTransferFrom_597": {
									"entryPoint": 1248,
									"id": 597,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_551": {
									"entryPoint": 1967,
									"id": 551,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_490": {
									"entryPoint": 1592,
									"id": 490,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setURI_2984": {
									"entryPoint": 742,
									"id": 2984,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1862": {
									"entryPoint": null,
									"id": 1862,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_376": {
									"entryPoint": 663,
									"id": 376,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_3176": {
									"entryPoint": 1577,
									"id": 3176,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenId_3196": {
									"entryPoint": null,
									"id": 3196,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_3188": {
									"entryPoint": 1894,
									"id": 3188,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2047,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unsafeMemoryAccess_1685": {
									"entryPoint": null,
									"id": 1685,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unsafeMemoryAccess_1698": {
									"entryPoint": 2366,
									"id": 1698,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uri_387": {
									"entryPoint": 1102,
									"id": 387,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 3906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_address_dyn": {
									"entryPoint": 4801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 4531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 4096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 4639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 5207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_string_memory_ptrt_uint256": {
									"entryPoint": 4316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_string_memory_ptrt_uint256": {
									"entryPoint": 5072,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 5860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 4203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 4398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 4252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 5447,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5887,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5792,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4456,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5747,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 4048,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 4497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 5473,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 5541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5327,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5383,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5427,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4028,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 3973,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15920:13",
										"nodeType": "YulBlock",
										"src": "0:15920:13",
										"statements": [
											{
												"nativeSrc": "6:3:13",
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "63:124:13",
													"nodeType": "YulBlock",
													"src": "63:124:13",
													"statements": [
														{
															"nativeSrc": "73:29:13",
															"nodeType": "YulAssignment",
															"src": "73:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "95:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "82:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:13"
																},
																"nativeSrc": "82:20:13",
																"nodeType": "YulFunctionCall",
																"src": "82:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "73:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "165:16:13",
																"nodeType": "YulBlock",
																"src": "165:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "174:1:13",
																					"nodeType": "YulLiteral",
																					"src": "174:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "177:1:13",
																					"nodeType": "YulLiteral",
																					"src": "177:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "167:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:13"
																			},
																			"nativeSrc": "167:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:13"
																		},
																		"nativeSrc": "167:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "124:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "135:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "150:3:13",
																										"nodeType": "YulLiteral",
																										"src": "150:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "155:1:13",
																										"nodeType": "YulLiteral",
																										"src": "155:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "146:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:13"
																								},
																								"nativeSrc": "146:11:13",
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "159:1:13",
																								"nodeType": "YulLiteral",
																								"src": "159:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "142:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:13"
																						},
																						"nativeSrc": "142:19:13",
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "131:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:13"
																				},
																				"nativeSrc": "131:31:13",
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "121:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:13"
																		},
																		"nativeSrc": "121:42:13",
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "114:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:13"
																},
																"nativeSrc": "114:50:13",
																"nodeType": "YulFunctionCall",
																"src": "114:50:13"
															},
															"nativeSrc": "111:70:13",
															"nodeType": "YulIf",
															"src": "111:70:13"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "14:173:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "42:6:13",
														"nodeType": "YulTypedName",
														"src": "42:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "53:5:13",
														"nodeType": "YulTypedName",
														"src": "53:5:13",
														"type": ""
													}
												],
												"src": "14:173:13"
											},
											{
												"body": {
													"nativeSrc": "279:167:13",
													"nodeType": "YulBlock",
													"src": "279:167:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "325:16:13",
																"nodeType": "YulBlock",
																"src": "325:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "334:1:13",
																					"nodeType": "YulLiteral",
																					"src": "334:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "337:1:13",
																					"nodeType": "YulLiteral",
																					"src": "337:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "327:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:13"
																			},
																			"nativeSrc": "327:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:13"
																		},
																		"nativeSrc": "327:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "300:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "309:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "296:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:13"
																		},
																		"nativeSrc": "296:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "321:2:13",
																		"nodeType": "YulLiteral",
																		"src": "321:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "292:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:13"
																},
																"nativeSrc": "292:32:13",
																"nodeType": "YulFunctionCall",
																"src": "292:32:13"
															},
															"nativeSrc": "289:52:13",
															"nodeType": "YulIf",
															"src": "289:52:13"
														},
														{
															"nativeSrc": "350:39:13",
															"nodeType": "YulAssignment",
															"src": "350:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "379:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "360:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:13"
																},
																"nativeSrc": "360:29:13",
																"nodeType": "YulFunctionCall",
																"src": "360:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "350:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:13"
																}
															]
														},
														{
															"nativeSrc": "398:42:13",
															"nodeType": "YulAssignment",
															"src": "398:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "425:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "436:2:13",
																				"nodeType": "YulLiteral",
																				"src": "436:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "421:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:13"
																		},
																		"nativeSrc": "421:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "408:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "408:12:13"
																},
																"nativeSrc": "408:32:13",
																"nodeType": "YulFunctionCall",
																"src": "408:32:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "398:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "192:254:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "237:9:13",
														"nodeType": "YulTypedName",
														"src": "237:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "248:7:13",
														"nodeType": "YulTypedName",
														"src": "248:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "260:6:13",
														"nodeType": "YulTypedName",
														"src": "260:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "268:6:13",
														"nodeType": "YulTypedName",
														"src": "268:6:13",
														"type": ""
													}
												],
												"src": "192:254:13"
											},
											{
												"body": {
													"nativeSrc": "552:76:13",
													"nodeType": "YulBlock",
													"src": "552:76:13",
													"statements": [
														{
															"nativeSrc": "562:26:13",
															"nodeType": "YulAssignment",
															"src": "562:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "574:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "574:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "585:2:13",
																		"nodeType": "YulLiteral",
																		"src": "585:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "570:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:13"
																},
																"nativeSrc": "570:18:13",
																"nodeType": "YulFunctionCall",
																"src": "570:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "562:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "562:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "604:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "604:9:13"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "615:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "615:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:13"
																},
																"nativeSrc": "597:25:13",
																"nodeType": "YulFunctionCall",
																"src": "597:25:13"
															},
															"nativeSrc": "597:25:13",
															"nodeType": "YulExpressionStatement",
															"src": "597:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "451:177:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "521:9:13",
														"nodeType": "YulTypedName",
														"src": "521:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "532:6:13",
														"nodeType": "YulTypedName",
														"src": "532:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "543:4:13",
														"nodeType": "YulTypedName",
														"src": "543:4:13",
														"type": ""
													}
												],
												"src": "451:177:13"
											},
											{
												"body": {
													"nativeSrc": "677:87:13",
													"nodeType": "YulBlock",
													"src": "677:87:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "742:16:13",
																"nodeType": "YulBlock",
																"src": "742:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "751:1:13",
																					"nodeType": "YulLiteral",
																					"src": "751:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "754:1:13",
																					"nodeType": "YulLiteral",
																					"src": "754:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "744:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "744:6:13"
																			},
																			"nativeSrc": "744:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "744:12:13"
																		},
																		"nativeSrc": "744:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "744:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "700:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "700:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "711:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "711:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "722:3:13",
																								"nodeType": "YulLiteral",
																								"src": "722:3:13",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "727:10:13",
																								"nodeType": "YulLiteral",
																								"src": "727:10:13",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "718:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "718:3:13"
																						},
																						"nativeSrc": "718:20:13",
																						"nodeType": "YulFunctionCall",
																						"src": "718:20:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "707:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "707:3:13"
																				},
																				"nativeSrc": "707:32:13",
																				"nodeType": "YulFunctionCall",
																				"src": "707:32:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "697:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "697:2:13"
																		},
																		"nativeSrc": "697:43:13",
																		"nodeType": "YulFunctionCall",
																		"src": "697:43:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "690:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "690:6:13"
																},
																"nativeSrc": "690:51:13",
																"nodeType": "YulFunctionCall",
																"src": "690:51:13"
															},
															"nativeSrc": "687:71:13",
															"nodeType": "YulIf",
															"src": "687:71:13"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nativeSrc": "633:131:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "666:5:13",
														"nodeType": "YulTypedName",
														"src": "666:5:13",
														"type": ""
													}
												],
												"src": "633:131:13"
											},
											{
												"body": {
													"nativeSrc": "838:176:13",
													"nodeType": "YulBlock",
													"src": "838:176:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "884:16:13",
																"nodeType": "YulBlock",
																"src": "884:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "893:1:13",
																					"nodeType": "YulLiteral",
																					"src": "893:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "896:1:13",
																					"nodeType": "YulLiteral",
																					"src": "896:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "886:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:13"
																			},
																			"nativeSrc": "886:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "886:12:13"
																		},
																		"nativeSrc": "886:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "886:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "859:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "859:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "868:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "868:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "855:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "855:3:13"
																		},
																		"nativeSrc": "855:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "855:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "880:2:13",
																		"nodeType": "YulLiteral",
																		"src": "880:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "851:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "851:3:13"
																},
																"nativeSrc": "851:32:13",
																"nodeType": "YulFunctionCall",
																"src": "851:32:13"
															},
															"nativeSrc": "848:52:13",
															"nodeType": "YulIf",
															"src": "848:52:13"
														},
														{
															"nativeSrc": "909:36:13",
															"nodeType": "YulVariableDeclaration",
															"src": "909:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "935:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "935:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "922:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "922:12:13"
																},
																"nativeSrc": "922:23:13",
																"nodeType": "YulFunctionCall",
																"src": "922:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "913:5:13",
																	"nodeType": "YulTypedName",
																	"src": "913:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "978:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "978:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "954:23:13",
																	"nodeType": "YulIdentifier",
																	"src": "954:23:13"
																},
																"nativeSrc": "954:30:13",
																"nodeType": "YulFunctionCall",
																"src": "954:30:13"
															},
															"nativeSrc": "954:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "954:30:13"
														},
														{
															"nativeSrc": "993:15:13",
															"nodeType": "YulAssignment",
															"src": "993:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "1003:5:13",
																"nodeType": "YulIdentifier",
																"src": "1003:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "993:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "993:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "769:245:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "804:9:13",
														"nodeType": "YulTypedName",
														"src": "804:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "815:7:13",
														"nodeType": "YulTypedName",
														"src": "815:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "827:6:13",
														"nodeType": "YulTypedName",
														"src": "827:6:13",
														"type": ""
													}
												],
												"src": "769:245:13"
											},
											{
												"body": {
													"nativeSrc": "1114:92:13",
													"nodeType": "YulBlock",
													"src": "1114:92:13",
													"statements": [
														{
															"nativeSrc": "1124:26:13",
															"nodeType": "YulAssignment",
															"src": "1124:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1136:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1136:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1147:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1147:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1132:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1132:3:13"
																},
																"nativeSrc": "1132:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1132:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1124:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1124:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1166:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1166:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1191:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1191:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1184:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "1184:6:13"
																				},
																				"nativeSrc": "1184:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1184:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1177:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1177:6:13"
																		},
																		"nativeSrc": "1177:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1177:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1159:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1159:6:13"
																},
																"nativeSrc": "1159:41:13",
																"nodeType": "YulFunctionCall",
																"src": "1159:41:13"
															},
															"nativeSrc": "1159:41:13",
															"nodeType": "YulExpressionStatement",
															"src": "1159:41:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1019:187:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1083:9:13",
														"nodeType": "YulTypedName",
														"src": "1083:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1094:6:13",
														"nodeType": "YulTypedName",
														"src": "1094:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1105:4:13",
														"nodeType": "YulTypedName",
														"src": "1105:4:13",
														"type": ""
													}
												],
												"src": "1019:187:13"
											},
											{
												"body": {
													"nativeSrc": "1243:95:13",
													"nodeType": "YulBlock",
													"src": "1243:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1260:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1260:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1267:3:13",
																				"nodeType": "YulLiteral",
																				"src": "1267:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1272:10:13",
																				"nodeType": "YulLiteral",
																				"src": "1272:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1263:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1263:3:13"
																		},
																		"nativeSrc": "1263:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1263:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1253:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1253:6:13"
																},
																"nativeSrc": "1253:31:13",
																"nodeType": "YulFunctionCall",
																"src": "1253:31:13"
															},
															"nativeSrc": "1253:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "1253:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1300:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1300:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1303:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1303:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1293:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1293:6:13"
																},
																"nativeSrc": "1293:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1293:15:13"
															},
															"nativeSrc": "1293:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1293:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1324:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1324:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1327:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1327:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1317:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1317:6:13"
																},
																"nativeSrc": "1317:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1317:15:13"
															},
															"nativeSrc": "1317:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1317:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1211:127:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1211:127:13"
											},
											{
												"body": {
													"nativeSrc": "1388:230:13",
													"nodeType": "YulBlock",
													"src": "1388:230:13",
													"statements": [
														{
															"nativeSrc": "1398:19:13",
															"nodeType": "YulAssignment",
															"src": "1398:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1414:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1414:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1408:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1408:5:13"
																},
																"nativeSrc": "1408:9:13",
																"nodeType": "YulFunctionCall",
																"src": "1408:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1398:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1398:6:13"
																}
															]
														},
														{
															"nativeSrc": "1426:58:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1426:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1448:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1448:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nativeSrc": "1464:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "1464:4:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1470:2:13",
																						"nodeType": "YulLiteral",
																						"src": "1470:2:13",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1460:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1460:3:13"
																				},
																				"nativeSrc": "1460:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1460:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1479:2:13",
																						"nodeType": "YulLiteral",
																						"src": "1479:2:13",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1475:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1475:3:13"
																				},
																				"nativeSrc": "1475:7:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1475:7:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1456:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1456:3:13"
																		},
																		"nativeSrc": "1456:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1456:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1444:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1444:3:13"
																},
																"nativeSrc": "1444:40:13",
																"nodeType": "YulFunctionCall",
																"src": "1444:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1430:10:13",
																	"nodeType": "YulTypedName",
																	"src": "1430:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1559:22:13",
																"nodeType": "YulBlock",
																"src": "1559:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1561:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "1561:16:13"
																			},
																			"nativeSrc": "1561:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1561:18:13"
																		},
																		"nativeSrc": "1561:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1561:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1502:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "1502:10:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1522:2:13",
																								"nodeType": "YulLiteral",
																								"src": "1522:2:13",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1526:1:13",
																								"nodeType": "YulLiteral",
																								"src": "1526:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1518:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1518:3:13"
																						},
																						"nativeSrc": "1518:10:13",
																						"nodeType": "YulFunctionCall",
																						"src": "1518:10:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1530:1:13",
																						"nodeType": "YulLiteral",
																						"src": "1530:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1514:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1514:3:13"
																				},
																				"nativeSrc": "1514:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1514:18:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1499:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1499:2:13"
																		},
																		"nativeSrc": "1499:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1499:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1538:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "1538:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1550:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1550:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1535:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1535:2:13"
																		},
																		"nativeSrc": "1535:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1535:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1496:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1496:2:13"
																},
																"nativeSrc": "1496:62:13",
																"nodeType": "YulFunctionCall",
																"src": "1496:62:13"
															},
															"nativeSrc": "1493:88:13",
															"nodeType": "YulIf",
															"src": "1493:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1597:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1597:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1601:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "1601:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1590:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1590:6:13"
																},
																"nativeSrc": "1590:22:13",
																"nodeType": "YulFunctionCall",
																"src": "1590:22:13"
															},
															"nativeSrc": "1590:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "1590:22:13"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1343:275:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1368:4:13",
														"nodeType": "YulTypedName",
														"src": "1368:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1377:6:13",
														"nodeType": "YulTypedName",
														"src": "1377:6:13",
														"type": ""
													}
												],
												"src": "1343:275:13"
											},
											{
												"body": {
													"nativeSrc": "1676:478:13",
													"nodeType": "YulBlock",
													"src": "1676:478:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1725:16:13",
																"nodeType": "YulBlock",
																"src": "1725:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1734:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1734:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1737:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1737:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1727:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1727:6:13"
																			},
																			"nativeSrc": "1727:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1727:12:13"
																		},
																		"nativeSrc": "1727:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1727:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "1704:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1704:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1712:4:13",
																						"nodeType": "YulLiteral",
																						"src": "1712:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1700:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1700:3:13"
																				},
																				"nativeSrc": "1700:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1700:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "1719:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1719:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1696:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1696:3:13"
																		},
																		"nativeSrc": "1696:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1696:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1689:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1689:6:13"
																},
																"nativeSrc": "1689:35:13",
																"nodeType": "YulFunctionCall",
																"src": "1689:35:13"
															},
															"nativeSrc": "1686:55:13",
															"nodeType": "YulIf",
															"src": "1686:55:13"
														},
														{
															"nativeSrc": "1750:30:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1750:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1773:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1773:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1760:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1760:12:13"
																},
																"nativeSrc": "1760:20:13",
																"nodeType": "YulFunctionCall",
																"src": "1760:20:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1754:2:13",
																	"nodeType": "YulTypedName",
																	"src": "1754:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1819:22:13",
																"nodeType": "YulBlock",
																"src": "1819:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1821:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "1821:16:13"
																			},
																			"nativeSrc": "1821:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1821:18:13"
																		},
																		"nativeSrc": "1821:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1821:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "1795:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "1795:2:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1807:2:13",
																						"nodeType": "YulLiteral",
																						"src": "1807:2:13",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1811:1:13",
																						"nodeType": "YulLiteral",
																						"src": "1811:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1803:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1803:3:13"
																				},
																				"nativeSrc": "1803:10:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1803:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1815:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1815:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1799:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1799:3:13"
																		},
																		"nativeSrc": "1799:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1799:18:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1792:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1792:2:13"
																},
																"nativeSrc": "1792:26:13",
																"nodeType": "YulFunctionCall",
																"src": "1792:26:13"
															},
															"nativeSrc": "1789:52:13",
															"nodeType": "YulIf",
															"src": "1789:52:13"
														},
														{
															"nativeSrc": "1850:70:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1850:70:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nativeSrc": "1893:2:13",
																								"nodeType": "YulIdentifier",
																								"src": "1893:2:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1897:4:13",
																								"nodeType": "YulLiteral",
																								"src": "1897:4:13",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1889:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1889:3:13"
																						},
																						"nativeSrc": "1889:13:13",
																						"nodeType": "YulFunctionCall",
																						"src": "1889:13:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1908:2:13",
																								"nodeType": "YulLiteral",
																								"src": "1908:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "1904:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1904:3:13"
																						},
																						"nativeSrc": "1904:7:13",
																						"nodeType": "YulFunctionCall",
																						"src": "1904:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1885:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1885:3:13"
																				},
																				"nativeSrc": "1885:27:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1885:27:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1914:4:13",
																				"nodeType": "YulLiteral",
																				"src": "1914:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1881:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1881:3:13"
																		},
																		"nativeSrc": "1881:38:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1881:38:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1865:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "1865:15:13"
																},
																"nativeSrc": "1865:55:13",
																"nodeType": "YulFunctionCall",
																"src": "1865:55:13"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nativeSrc": "1854:7:13",
																	"nodeType": "YulTypedName",
																	"src": "1854:7:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array_1",
																		"nativeSrc": "1936:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "1936:7:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1945:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "1945:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1929:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1929:6:13"
																},
																"nativeSrc": "1929:19:13",
																"nodeType": "YulFunctionCall",
																"src": "1929:19:13"
															},
															"nativeSrc": "1929:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "1929:19:13"
														},
														{
															"body": {
																"nativeSrc": "1996:16:13",
																"nodeType": "YulBlock",
																"src": "1996:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2005:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2005:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2008:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2008:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1998:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1998:6:13"
																			},
																			"nativeSrc": "1998:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1998:12:13"
																		},
																		"nativeSrc": "1998:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "1971:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1971:6:13"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "1979:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "1979:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1967:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1967:3:13"
																				},
																				"nativeSrc": "1967:15:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1967:15:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1984:4:13",
																				"nodeType": "YulLiteral",
																				"src": "1984:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1963:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1963:3:13"
																		},
																		"nativeSrc": "1963:26:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1963:26:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "1991:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1991:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1960:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1960:2:13"
																},
																"nativeSrc": "1960:35:13",
																"nodeType": "YulFunctionCall",
																"src": "1960:35:13"
															},
															"nativeSrc": "1957:55:13",
															"nodeType": "YulIf",
															"src": "1957:55:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array_1",
																				"nativeSrc": "2038:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2038:7:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2047:4:13",
																				"nodeType": "YulLiteral",
																				"src": "2047:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2034:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2034:3:13"
																		},
																		"nativeSrc": "2034:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2034:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2058:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2058:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2066:4:13",
																				"nodeType": "YulLiteral",
																				"src": "2066:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2054:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2054:3:13"
																		},
																		"nativeSrc": "2054:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2054:17:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "2073:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "2073:2:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "2021:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2021:12:13"
																},
																"nativeSrc": "2021:55:13",
																"nodeType": "YulFunctionCall",
																"src": "2021:55:13"
															},
															"nativeSrc": "2021:55:13",
															"nodeType": "YulExpressionStatement",
															"src": "2021:55:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array_1",
																						"nativeSrc": "2100:7:13",
																						"nodeType": "YulIdentifier",
																						"src": "2100:7:13"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "2109:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "2109:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2096:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2096:3:13"
																				},
																				"nativeSrc": "2096:16:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2096:16:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2114:4:13",
																				"nodeType": "YulLiteral",
																				"src": "2114:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2092:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2092:3:13"
																		},
																		"nativeSrc": "2092:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2092:27:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2121:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2121:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2085:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2085:6:13"
																},
																"nativeSrc": "2085:38:13",
																"nodeType": "YulFunctionCall",
																"src": "2085:38:13"
															},
															"nativeSrc": "2085:38:13",
															"nodeType": "YulExpressionStatement",
															"src": "2085:38:13"
														},
														{
															"nativeSrc": "2132:16:13",
															"nodeType": "YulAssignment",
															"src": "2132:16:13",
															"value": {
																"name": "array_1",
																"nativeSrc": "2141:7:13",
																"nodeType": "YulIdentifier",
																"src": "2141:7:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2132:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2132:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nativeSrc": "1623:531:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1650:6:13",
														"nodeType": "YulTypedName",
														"src": "1650:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1658:3:13",
														"nodeType": "YulTypedName",
														"src": "1658:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1666:5:13",
														"nodeType": "YulTypedName",
														"src": "1666:5:13",
														"type": ""
													}
												],
												"src": "1623:531:13"
											},
											{
												"body": {
													"nativeSrc": "2239:242:13",
													"nodeType": "YulBlock",
													"src": "2239:242:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2285:16:13",
																"nodeType": "YulBlock",
																"src": "2285:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2294:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2294:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2297:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2297:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2287:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2287:6:13"
																			},
																			"nativeSrc": "2287:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2287:12:13"
																		},
																		"nativeSrc": "2287:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2287:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2260:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2260:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2269:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2269:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2256:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2256:3:13"
																		},
																		"nativeSrc": "2256:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2256:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2281:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2281:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2252:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2252:3:13"
																},
																"nativeSrc": "2252:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2252:32:13"
															},
															"nativeSrc": "2249:52:13",
															"nodeType": "YulIf",
															"src": "2249:52:13"
														},
														{
															"nativeSrc": "2310:37:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2310:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2337:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2337:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2324:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2324:12:13"
																},
																"nativeSrc": "2324:23:13",
																"nodeType": "YulFunctionCall",
																"src": "2324:23:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "2314:6:13",
																	"nodeType": "YulTypedName",
																	"src": "2314:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2390:16:13",
																"nodeType": "YulBlock",
																"src": "2390:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2399:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2399:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2402:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2402:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2392:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2392:6:13"
																			},
																			"nativeSrc": "2392:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2392:12:13"
																		},
																		"nativeSrc": "2392:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2392:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2362:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2362:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2378:2:13",
																						"nodeType": "YulLiteral",
																						"src": "2378:2:13",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2382:1:13",
																						"nodeType": "YulLiteral",
																						"src": "2382:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2374:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2374:3:13"
																				},
																				"nativeSrc": "2374:10:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2374:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2386:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2386:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2370:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2370:3:13"
																		},
																		"nativeSrc": "2370:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2370:18:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2359:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2359:2:13"
																},
																"nativeSrc": "2359:30:13",
																"nodeType": "YulFunctionCall",
																"src": "2359:30:13"
															},
															"nativeSrc": "2356:50:13",
															"nodeType": "YulIf",
															"src": "2356:50:13"
														},
														{
															"nativeSrc": "2415:60:13",
															"nodeType": "YulAssignment",
															"src": "2415:60:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2447:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2447:9:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2458:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2458:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2443:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2443:3:13"
																		},
																		"nativeSrc": "2443:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2443:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "2467:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "2467:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "2425:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "2425:17:13"
																},
																"nativeSrc": "2425:50:13",
																"nodeType": "YulFunctionCall",
																"src": "2425:50:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2415:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2415:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "2159:322:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2205:9:13",
														"nodeType": "YulTypedName",
														"src": "2205:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2216:7:13",
														"nodeType": "YulTypedName",
														"src": "2216:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2228:6:13",
														"nodeType": "YulTypedName",
														"src": "2228:6:13",
														"type": ""
													}
												],
												"src": "2159:322:13"
											},
											{
												"body": {
													"nativeSrc": "2536:239:13",
													"nodeType": "YulBlock",
													"src": "2536:239:13",
													"statements": [
														{
															"nativeSrc": "2546:26:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2546:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2566:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2566:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2560:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2560:5:13"
																},
																"nativeSrc": "2560:12:13",
																"nodeType": "YulFunctionCall",
																"src": "2560:12:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2550:6:13",
																	"nodeType": "YulTypedName",
																	"src": "2550:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2588:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2588:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2593:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2593:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2581:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2581:6:13"
																},
																"nativeSrc": "2581:19:13",
																"nodeType": "YulFunctionCall",
																"src": "2581:19:13"
															},
															"nativeSrc": "2581:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "2581:19:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "2619:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2619:3:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2624:4:13",
																				"nodeType": "YulLiteral",
																				"src": "2624:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2615:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2615:3:13"
																		},
																		"nativeSrc": "2615:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2615:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2635:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2635:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2642:4:13",
																				"nodeType": "YulLiteral",
																				"src": "2642:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2631:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2631:3:13"
																		},
																		"nativeSrc": "2631:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2631:16:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2649:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2649:6:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2609:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2609:5:13"
																},
																"nativeSrc": "2609:47:13",
																"nodeType": "YulFunctionCall",
																"src": "2609:47:13"
															},
															"nativeSrc": "2609:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "2609:47:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2680:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "2680:3:13"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "2685:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2685:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2676:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2676:3:13"
																				},
																				"nativeSrc": "2676:16:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2676:16:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2694:4:13",
																				"nodeType": "YulLiteral",
																				"src": "2694:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2672:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2672:3:13"
																		},
																		"nativeSrc": "2672:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2672:27:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2701:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2701:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2665:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2665:6:13"
																},
																"nativeSrc": "2665:38:13",
																"nodeType": "YulFunctionCall",
																"src": "2665:38:13"
															},
															"nativeSrc": "2665:38:13",
															"nodeType": "YulExpressionStatement",
															"src": "2665:38:13"
														},
														{
															"nativeSrc": "2712:57:13",
															"nodeType": "YulAssignment",
															"src": "2712:57:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "2727:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2727:3:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "2740:6:13",
																								"nodeType": "YulIdentifier",
																								"src": "2740:6:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2748:2:13",
																								"nodeType": "YulLiteral",
																								"src": "2748:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2736:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "2736:3:13"
																						},
																						"nativeSrc": "2736:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "2736:15:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2757:2:13",
																								"nodeType": "YulLiteral",
																								"src": "2757:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "2753:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "2753:3:13"
																						},
																						"nativeSrc": "2753:7:13",
																						"nodeType": "YulFunctionCall",
																						"src": "2753:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2732:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2732:3:13"
																				},
																				"nativeSrc": "2732:29:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2732:29:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2723:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2723:3:13"
																		},
																		"nativeSrc": "2723:39:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2723:39:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2764:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2764:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2719:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2719:3:13"
																},
																"nativeSrc": "2719:50:13",
																"nodeType": "YulFunctionCall",
																"src": "2719:50:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2712:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2712:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "2486:289:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2513:5:13",
														"nodeType": "YulTypedName",
														"src": "2513:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2520:3:13",
														"nodeType": "YulTypedName",
														"src": "2520:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2528:3:13",
														"nodeType": "YulTypedName",
														"src": "2528:3:13",
														"type": ""
													}
												],
												"src": "2486:289:13"
											},
											{
												"body": {
													"nativeSrc": "2901:99:13",
													"nodeType": "YulBlock",
													"src": "2901:99:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2918:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2918:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2929:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2929:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2911:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2911:6:13"
																},
																"nativeSrc": "2911:21:13",
																"nodeType": "YulFunctionCall",
																"src": "2911:21:13"
															},
															"nativeSrc": "2911:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "2911:21:13"
														},
														{
															"nativeSrc": "2941:53:13",
															"nodeType": "YulAssignment",
															"src": "2941:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2967:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2967:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2979:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2979:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2990:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2990:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2975:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2975:3:13"
																		},
																		"nativeSrc": "2975:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2975:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "2949:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "2949:17:13"
																},
																"nativeSrc": "2949:45:13",
																"nodeType": "YulFunctionCall",
																"src": "2949:45:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2941:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2941:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2780:220:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2870:9:13",
														"nodeType": "YulTypedName",
														"src": "2870:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2881:6:13",
														"nodeType": "YulTypedName",
														"src": "2881:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2892:4:13",
														"nodeType": "YulTypedName",
														"src": "2892:4:13",
														"type": ""
													}
												],
												"src": "2780:220:13"
											},
											{
												"body": {
													"nativeSrc": "3119:350:13",
													"nodeType": "YulBlock",
													"src": "3119:350:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3165:16:13",
																"nodeType": "YulBlock",
																"src": "3165:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3174:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3174:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3177:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3177:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3167:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3167:6:13"
																			},
																			"nativeSrc": "3167:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3167:12:13"
																		},
																		"nativeSrc": "3167:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3167:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3140:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3140:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3149:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3149:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3136:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3136:3:13"
																		},
																		"nativeSrc": "3136:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3136:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3161:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3161:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3132:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3132:3:13"
																},
																"nativeSrc": "3132:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3132:32:13"
															},
															"nativeSrc": "3129:52:13",
															"nodeType": "YulIf",
															"src": "3129:52:13"
														},
														{
															"nativeSrc": "3190:39:13",
															"nodeType": "YulAssignment",
															"src": "3190:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3219:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3219:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3200:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "3200:18:13"
																},
																"nativeSrc": "3200:29:13",
																"nodeType": "YulFunctionCall",
																"src": "3200:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3190:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3190:6:13"
																}
															]
														},
														{
															"nativeSrc": "3238:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3238:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3269:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3269:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3280:2:13",
																				"nodeType": "YulLiteral",
																				"src": "3280:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3265:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3265:3:13"
																		},
																		"nativeSrc": "3265:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3265:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3252:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3252:12:13"
																},
																"nativeSrc": "3252:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3252:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3242:6:13",
																	"nodeType": "YulTypedName",
																	"src": "3242:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3327:16:13",
																"nodeType": "YulBlock",
																"src": "3327:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3336:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3336:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3339:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3339:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3329:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3329:6:13"
																			},
																			"nativeSrc": "3329:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3329:12:13"
																		},
																		"nativeSrc": "3329:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3329:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3299:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3315:2:13",
																						"nodeType": "YulLiteral",
																						"src": "3315:2:13",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3319:1:13",
																						"nodeType": "YulLiteral",
																						"src": "3319:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3311:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3311:3:13"
																				},
																				"nativeSrc": "3311:10:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3311:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:13",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3307:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3307:3:13"
																		},
																		"nativeSrc": "3307:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3307:18:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3296:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3296:2:13"
																},
																"nativeSrc": "3296:30:13",
																"nodeType": "YulFunctionCall",
																"src": "3296:30:13"
															},
															"nativeSrc": "3293:50:13",
															"nodeType": "YulIf",
															"src": "3293:50:13"
														},
														{
															"nativeSrc": "3352:60:13",
															"nodeType": "YulAssignment",
															"src": "3352:60:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3384:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3384:9:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3395:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3395:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3380:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3380:3:13"
																		},
																		"nativeSrc": "3380:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3380:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3404:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "3404:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "3362:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "3362:17:13"
																},
																"nativeSrc": "3362:50:13",
																"nodeType": "YulFunctionCall",
																"src": "3362:50:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3352:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3352:6:13"
																}
															]
														},
														{
															"nativeSrc": "3421:42:13",
															"nodeType": "YulAssignment",
															"src": "3421:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3448:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3448:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3459:2:13",
																				"nodeType": "YulLiteral",
																				"src": "3459:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3444:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3444:3:13"
																		},
																		"nativeSrc": "3444:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3444:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3431:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3431:12:13"
																},
																"nativeSrc": "3431:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3431:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3421:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3421:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptrt_uint256",
												"nativeSrc": "3005:464:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3069:9:13",
														"nodeType": "YulTypedName",
														"src": "3069:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3080:7:13",
														"nodeType": "YulTypedName",
														"src": "3080:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3092:6:13",
														"nodeType": "YulTypedName",
														"src": "3092:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3100:6:13",
														"nodeType": "YulTypedName",
														"src": "3100:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3108:6:13",
														"nodeType": "YulTypedName",
														"src": "3108:6:13",
														"type": ""
													}
												],
												"src": "3005:464:13"
											},
											{
												"body": {
													"nativeSrc": "3535:378:13",
													"nodeType": "YulBlock",
													"src": "3535:378:13",
													"statements": [
														{
															"nativeSrc": "3545:26:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3545:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3565:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3565:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3559:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3559:5:13"
																},
																"nativeSrc": "3559:12:13",
																"nodeType": "YulFunctionCall",
																"src": "3559:12:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3549:6:13",
																	"nodeType": "YulTypedName",
																	"src": "3549:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3587:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3587:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3592:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3592:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3580:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3580:6:13"
																},
																"nativeSrc": "3580:19:13",
																"nodeType": "YulFunctionCall",
																"src": "3580:19:13"
															},
															"nativeSrc": "3580:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "3580:19:13"
														},
														{
															"nativeSrc": "3608:14:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3608:14:13",
															"value": {
																"kind": "number",
																"nativeSrc": "3618:4:13",
																"nodeType": "YulLiteral",
																"src": "3618:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3612:2:13",
																	"nodeType": "YulTypedName",
																	"src": "3612:2:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3631:21:13",
															"nodeType": "YulAssignment",
															"src": "3631:21:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3642:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3642:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3647:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3647:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3638:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3638:3:13"
																},
																"nativeSrc": "3638:14:13",
																"nodeType": "YulFunctionCall",
																"src": "3638:14:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3631:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3631:3:13"
																}
															]
														},
														{
															"nativeSrc": "3661:30:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3661:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3679:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3679:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3686:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3686:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3675:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3675:3:13"
																},
																"nativeSrc": "3675:16:13",
																"nodeType": "YulFunctionCall",
																"src": "3675:16:13"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "3665:6:13",
																	"nodeType": "YulTypedName",
																	"src": "3665:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3700:10:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3700:10:13",
															"value": {
																"kind": "number",
																"nativeSrc": "3709:1:13",
																"nodeType": "YulLiteral",
																"src": "3709:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "3704:1:13",
																	"nodeType": "YulTypedName",
																	"src": "3704:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3768:120:13",
																"nodeType": "YulBlock",
																"src": "3768:120:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "3789:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3789:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nativeSrc": "3800:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "3800:6:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "3794:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3794:5:13"
																					},
																					"nativeSrc": "3794:13:13",
																					"nodeType": "YulFunctionCall",
																					"src": "3794:13:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3782:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3782:6:13"
																			},
																			"nativeSrc": "3782:26:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3782:26:13"
																		},
																		"nativeSrc": "3782:26:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3782:26:13"
																	},
																	{
																		"nativeSrc": "3821:19:13",
																		"nodeType": "YulAssignment",
																		"src": "3821:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "3832:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3832:3:13"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "3837:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "3837:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3828:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3828:3:13"
																			},
																			"nativeSrc": "3828:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3828:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "3821:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3821:3:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3853:25:13",
																		"nodeType": "YulAssignment",
																		"src": "3853:25:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "3867:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "3867:6:13"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "3875:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "3875:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3863:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3863:3:13"
																			},
																			"nativeSrc": "3863:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3863:15:13"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "3853:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3853:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "3730:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "3730:1:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3733:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3733:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3727:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3727:2:13"
																},
																"nativeSrc": "3727:13:13",
																"nodeType": "YulFunctionCall",
																"src": "3727:13:13"
															},
															"nativeSrc": "3719:169:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3741:18:13",
																"nodeType": "YulBlock",
																"src": "3741:18:13",
																"statements": [
																	{
																		"nativeSrc": "3743:14:13",
																		"nodeType": "YulAssignment",
																		"src": "3743:14:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "3752:1:13",
																					"nodeType": "YulIdentifier",
																					"src": "3752:1:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3755:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3755:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3748:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3748:3:13"
																			},
																			"nativeSrc": "3748:9:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3748:9:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "3743:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "3743:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3723:3:13",
																"nodeType": "YulBlock",
																"src": "3723:3:13",
																"statements": []
															},
															"src": "3719:169:13"
														},
														{
															"nativeSrc": "3897:10:13",
															"nodeType": "YulAssignment",
															"src": "3897:10:13",
															"value": {
																"name": "pos",
																"nativeSrc": "3904:3:13",
																"nodeType": "YulIdentifier",
																"src": "3904:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3897:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3897:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nativeSrc": "3474:439:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3512:5:13",
														"nodeType": "YulTypedName",
														"src": "3512:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3519:3:13",
														"nodeType": "YulTypedName",
														"src": "3519:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3527:3:13",
														"nodeType": "YulTypedName",
														"src": "3527:3:13",
														"type": ""
													}
												],
												"src": "3474:439:13"
											},
											{
												"body": {
													"nativeSrc": "4069:110:13",
													"nodeType": "YulBlock",
													"src": "4069:110:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4086:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4086:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4097:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4097:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4079:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4079:6:13"
																},
																"nativeSrc": "4079:21:13",
																"nodeType": "YulFunctionCall",
																"src": "4079:21:13"
															},
															"nativeSrc": "4079:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "4079:21:13"
														},
														{
															"nativeSrc": "4109:64:13",
															"nodeType": "YulAssignment",
															"src": "4109:64:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4146:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4146:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4158:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4158:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4169:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4169:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4154:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4154:3:13"
																		},
																		"nativeSrc": "4154:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4154:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nativeSrc": "4117:28:13",
																	"nodeType": "YulIdentifier",
																	"src": "4117:28:13"
																},
																"nativeSrc": "4117:56:13",
																"nodeType": "YulFunctionCall",
																"src": "4117:56:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4109:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4109:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "3918:261:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4038:9:13",
														"nodeType": "YulTypedName",
														"src": "4038:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4049:6:13",
														"nodeType": "YulTypedName",
														"src": "4049:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4060:4:13",
														"nodeType": "YulTypedName",
														"src": "4060:4:13",
														"type": ""
													}
												],
												"src": "3918:261:13"
											},
											{
												"body": {
													"nativeSrc": "4254:110:13",
													"nodeType": "YulBlock",
													"src": "4254:110:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4300:16:13",
																"nodeType": "YulBlock",
																"src": "4300:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4309:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4309:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4312:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4312:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4302:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4302:6:13"
																			},
																			"nativeSrc": "4302:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4302:12:13"
																		},
																		"nativeSrc": "4302:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4302:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4275:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4275:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4284:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4284:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4271:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4271:3:13"
																		},
																		"nativeSrc": "4271:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4271:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4296:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4296:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4267:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4267:3:13"
																},
																"nativeSrc": "4267:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4267:32:13"
															},
															"nativeSrc": "4264:52:13",
															"nodeType": "YulIf",
															"src": "4264:52:13"
														},
														{
															"nativeSrc": "4325:33:13",
															"nodeType": "YulAssignment",
															"src": "4325:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4348:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4348:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4335:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "4335:12:13"
																},
																"nativeSrc": "4335:23:13",
																"nodeType": "YulFunctionCall",
																"src": "4335:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4325:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4325:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4184:180:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4220:9:13",
														"nodeType": "YulTypedName",
														"src": "4220:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4231:7:13",
														"nodeType": "YulTypedName",
														"src": "4231:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4243:6:13",
														"nodeType": "YulTypedName",
														"src": "4243:6:13",
														"type": ""
													}
												],
												"src": "4184:180:13"
											},
											{
												"body": {
													"nativeSrc": "4438:114:13",
													"nodeType": "YulBlock",
													"src": "4438:114:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4482:22:13",
																"nodeType": "YulBlock",
																"src": "4482:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4484:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "4484:16:13"
																			},
																			"nativeSrc": "4484:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4484:18:13"
																		},
																		"nativeSrc": "4484:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4484:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4454:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4454:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4470:2:13",
																						"nodeType": "YulLiteral",
																						"src": "4470:2:13",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4474:1:13",
																						"nodeType": "YulLiteral",
																						"src": "4474:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "4466:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4466:3:13"
																				},
																				"nativeSrc": "4466:10:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4466:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4478:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4478:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4462:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4462:3:13"
																		},
																		"nativeSrc": "4462:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4462:18:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4451:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4451:2:13"
																},
																"nativeSrc": "4451:30:13",
																"nodeType": "YulFunctionCall",
																"src": "4451:30:13"
															},
															"nativeSrc": "4448:56:13",
															"nodeType": "YulIf",
															"src": "4448:56:13"
														},
														{
															"nativeSrc": "4513:33:13",
															"nodeType": "YulAssignment",
															"src": "4513:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4529:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4529:1:13",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4532:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4532:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4525:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4525:3:13"
																		},
																		"nativeSrc": "4525:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4525:14:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4541:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4541:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4521:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4521:3:13"
																},
																"nativeSrc": "4521:25:13",
																"nodeType": "YulFunctionCall",
																"src": "4521:25:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "4513:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4513:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_uint256_dyn",
												"nativeSrc": "4369:183:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "4418:6:13",
														"nodeType": "YulTypedName",
														"src": "4418:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "4429:4:13",
														"nodeType": "YulTypedName",
														"src": "4429:4:13",
														"type": ""
													}
												],
												"src": "4369:183:13"
											},
											{
												"body": {
													"nativeSrc": "4621:604:13",
													"nodeType": "YulBlock",
													"src": "4621:604:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4670:16:13",
																"nodeType": "YulBlock",
																"src": "4670:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4679:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4679:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4682:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4682:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4672:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4672:6:13"
																			},
																			"nativeSrc": "4672:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4672:12:13"
																		},
																		"nativeSrc": "4672:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4672:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "4649:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4649:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4657:4:13",
																						"nodeType": "YulLiteral",
																						"src": "4657:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4645:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4645:3:13"
																				},
																				"nativeSrc": "4645:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4645:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "4664:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "4664:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4641:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4641:3:13"
																		},
																		"nativeSrc": "4641:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4641:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4634:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4634:6:13"
																},
																"nativeSrc": "4634:35:13",
																"nodeType": "YulFunctionCall",
																"src": "4634:35:13"
															},
															"nativeSrc": "4631:55:13",
															"nodeType": "YulIf",
															"src": "4631:55:13"
														},
														{
															"nativeSrc": "4695:30:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4695:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4718:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4718:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4705:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "4705:12:13"
																},
																"nativeSrc": "4705:20:13",
																"nodeType": "YulFunctionCall",
																"src": "4705:20:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4699:2:13",
																	"nodeType": "YulTypedName",
																	"src": "4699:2:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4734:14:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4734:14:13",
															"value": {
																"kind": "number",
																"nativeSrc": "4744:4:13",
																"nodeType": "YulLiteral",
																"src": "4744:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "4738:2:13",
																	"nodeType": "YulTypedName",
																	"src": "4738:2:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4757:71:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4757:71:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "4824:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "4824:2:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_uint256_dyn",
																			"nativeSrc": "4784:39:13",
																			"nodeType": "YulIdentifier",
																			"src": "4784:39:13"
																		},
																		"nativeSrc": "4784:43:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4784:43:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "4768:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "4768:15:13"
																},
																"nativeSrc": "4768:60:13",
																"nodeType": "YulFunctionCall",
																"src": "4768:60:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "4761:3:13",
																	"nodeType": "YulTypedName",
																	"src": "4761:3:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4837:16:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4837:16:13",
															"value": {
																"name": "dst",
																"nativeSrc": "4850:3:13",
																"nodeType": "YulIdentifier",
																"src": "4850:3:13"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nativeSrc": "4841:5:13",
																	"nodeType": "YulTypedName",
																	"src": "4841:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "4869:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4869:3:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4874:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "4874:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4862:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4862:6:13"
																},
																"nativeSrc": "4862:15:13",
																"nodeType": "YulFunctionCall",
																"src": "4862:15:13"
															},
															"nativeSrc": "4862:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "4862:15:13"
														},
														{
															"nativeSrc": "4886:21:13",
															"nodeType": "YulAssignment",
															"src": "4886:21:13",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "4897:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4897:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4902:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4902:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4893:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4893:3:13"
																},
																"nativeSrc": "4893:14:13",
																"nodeType": "YulFunctionCall",
																"src": "4893:14:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "4886:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4886:3:13"
																}
															]
														},
														{
															"nativeSrc": "4916:48:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4916:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4938:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4938:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4950:1:13",
																						"nodeType": "YulLiteral",
																						"src": "4950:1:13",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "4953:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "4953:2:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "4946:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4946:3:13"
																				},
																				"nativeSrc": "4946:10:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4946:10:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4934:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4934:3:13"
																		},
																		"nativeSrc": "4934:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4934:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4959:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4959:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4930:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4930:3:13"
																},
																"nativeSrc": "4930:34:13",
																"nodeType": "YulFunctionCall",
																"src": "4930:34:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "4920:6:13",
																	"nodeType": "YulTypedName",
																	"src": "4920:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4992:16:13",
																"nodeType": "YulBlock",
																"src": "4992:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5001:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5001:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5004:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5004:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4994:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4994:6:13"
																			},
																			"nativeSrc": "4994:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4994:12:13"
																		},
																		"nativeSrc": "4994:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4994:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "4979:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4979:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4987:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4987:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4976:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4976:2:13"
																},
																"nativeSrc": "4976:15:13",
																"nodeType": "YulFunctionCall",
																"src": "4976:15:13"
															},
															"nativeSrc": "4973:35:13",
															"nodeType": "YulIf",
															"src": "4973:35:13"
														},
														{
															"nativeSrc": "5017:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5017:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5032:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5032:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5040:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5040:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5028:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5028:3:13"
																},
																"nativeSrc": "5028:17:13",
																"nodeType": "YulFunctionCall",
																"src": "5028:17:13"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "5021:3:13",
																	"nodeType": "YulTypedName",
																	"src": "5021:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5110:86:13",
																"nodeType": "YulBlock",
																"src": "5110:86:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "5131:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5131:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "5149:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "5149:3:13"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nativeSrc": "5136:12:13",
																						"nodeType": "YulIdentifier",
																						"src": "5136:12:13"
																					},
																					"nativeSrc": "5136:17:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5136:17:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5124:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5124:6:13"
																			},
																			"nativeSrc": "5124:30:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5124:30:13"
																		},
																		"nativeSrc": "5124:30:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5124:30:13"
																	},
																	{
																		"nativeSrc": "5167:19:13",
																		"nodeType": "YulAssignment",
																		"src": "5167:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "5178:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5178:3:13"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "5183:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "5183:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5174:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "5174:3:13"
																			},
																			"nativeSrc": "5174:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5174:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "5167:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "5167:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5065:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5065:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "5070:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5070:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5062:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5062:2:13"
																},
																"nativeSrc": "5062:15:13",
																"nodeType": "YulFunctionCall",
																"src": "5062:15:13"
															},
															"nativeSrc": "5054:142:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5078:23:13",
																"nodeType": "YulBlock",
																"src": "5078:23:13",
																"statements": [
																	{
																		"nativeSrc": "5080:19:13",
																		"nodeType": "YulAssignment",
																		"src": "5080:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "5091:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5091:3:13"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "5096:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "5096:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5087:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "5087:3:13"
																			},
																			"nativeSrc": "5087:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5087:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "5080:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "5080:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5058:3:13",
																"nodeType": "YulBlock",
																"src": "5058:3:13",
																"statements": []
															},
															"src": "5054:142:13"
														},
														{
															"nativeSrc": "5205:14:13",
															"nodeType": "YulAssignment",
															"src": "5205:14:13",
															"value": {
																"name": "dst_1",
																"nativeSrc": "5214:5:13",
																"nodeType": "YulIdentifier",
																"src": "5214:5:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "5205:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "5205:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nativeSrc": "4557:668:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4595:6:13",
														"nodeType": "YulTypedName",
														"src": "4595:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4603:3:13",
														"nodeType": "YulTypedName",
														"src": "4603:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "4611:5:13",
														"nodeType": "YulTypedName",
														"src": "4611:5:13",
														"type": ""
													}
												],
												"src": "4557:668:13"
											},
											{
												"body": {
													"nativeSrc": "5427:747:13",
													"nodeType": "YulBlock",
													"src": "5427:747:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5474:16:13",
																"nodeType": "YulBlock",
																"src": "5474:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5483:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5483:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5486:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5486:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5476:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5476:6:13"
																			},
																			"nativeSrc": "5476:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5476:12:13"
																		},
																		"nativeSrc": "5476:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5476:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5448:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5448:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5457:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5457:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5444:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5444:3:13"
																		},
																		"nativeSrc": "5444:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5444:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5469:3:13",
																		"nodeType": "YulLiteral",
																		"src": "5469:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5440:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5440:3:13"
																},
																"nativeSrc": "5440:33:13",
																"nodeType": "YulFunctionCall",
																"src": "5440:33:13"
															},
															"nativeSrc": "5437:53:13",
															"nodeType": "YulIf",
															"src": "5437:53:13"
														},
														{
															"nativeSrc": "5499:39:13",
															"nodeType": "YulAssignment",
															"src": "5499:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5528:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5528:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5509:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "5509:18:13"
																},
																"nativeSrc": "5509:29:13",
																"nodeType": "YulFunctionCall",
																"src": "5509:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5499:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5499:6:13"
																}
															]
														},
														{
															"nativeSrc": "5547:48:13",
															"nodeType": "YulAssignment",
															"src": "5547:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5580:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5580:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5591:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5591:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5576:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5576:3:13"
																		},
																		"nativeSrc": "5576:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5576:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5557:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "5557:18:13"
																},
																"nativeSrc": "5557:38:13",
																"nodeType": "YulFunctionCall",
																"src": "5557:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5547:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5547:6:13"
																}
															]
														},
														{
															"nativeSrc": "5604:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5604:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5635:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5635:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5646:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5646:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5631:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5631:3:13"
																		},
																		"nativeSrc": "5631:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5631:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5618:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "5618:12:13"
																},
																"nativeSrc": "5618:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5618:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "5608:6:13",
																	"nodeType": "YulTypedName",
																	"src": "5608:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5659:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5659:28:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5677:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5677:2:13",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5681:1:13",
																				"nodeType": "YulLiteral",
																				"src": "5681:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5673:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5673:3:13"
																		},
																		"nativeSrc": "5673:10:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5673:10:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5685:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5685:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5669:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5669:3:13"
																},
																"nativeSrc": "5669:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5669:18:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "5663:2:13",
																	"nodeType": "YulTypedName",
																	"src": "5663:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5714:16:13",
																"nodeType": "YulBlock",
																"src": "5714:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5723:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5723:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5726:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5726:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5716:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5716:6:13"
																			},
																			"nativeSrc": "5716:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5716:12:13"
																		},
																		"nativeSrc": "5716:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5716:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5702:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5702:6:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "5710:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "5710:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5699:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5699:2:13"
																},
																"nativeSrc": "5699:14:13",
																"nodeType": "YulFunctionCall",
																"src": "5699:14:13"
															},
															"nativeSrc": "5696:34:13",
															"nodeType": "YulIf",
															"src": "5696:34:13"
														},
														{
															"nativeSrc": "5739:71:13",
															"nodeType": "YulAssignment",
															"src": "5739:71:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5782:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5782:9:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5793:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5793:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5778:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5778:3:13"
																		},
																		"nativeSrc": "5778:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5778:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "5802:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "5802:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nativeSrc": "5749:28:13",
																	"nodeType": "YulIdentifier",
																	"src": "5749:28:13"
																},
																"nativeSrc": "5749:61:13",
																"nodeType": "YulFunctionCall",
																"src": "5749:61:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "5739:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5739:6:13"
																}
															]
														},
														{
															"nativeSrc": "5819:48:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5819:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5852:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5852:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5863:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5863:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5848:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5848:3:13"
																		},
																		"nativeSrc": "5848:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5848:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5835:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "5835:12:13"
																},
																"nativeSrc": "5835:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5835:32:13"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "5823:8:13",
																	"nodeType": "YulTypedName",
																	"src": "5823:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5896:16:13",
																"nodeType": "YulBlock",
																"src": "5896:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5905:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5905:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5908:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5908:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5898:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5898:6:13"
																			},
																			"nativeSrc": "5898:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5898:12:13"
																		},
																		"nativeSrc": "5898:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5898:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "5882:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "5882:8:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "5892:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "5892:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5879:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5879:2:13"
																},
																"nativeSrc": "5879:16:13",
																"nodeType": "YulFunctionCall",
																"src": "5879:16:13"
															},
															"nativeSrc": "5876:36:13",
															"nodeType": "YulIf",
															"src": "5876:36:13"
														},
														{
															"nativeSrc": "5921:73:13",
															"nodeType": "YulAssignment",
															"src": "5921:73:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5964:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5964:9:13"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "5975:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "5975:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5960:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5960:3:13"
																		},
																		"nativeSrc": "5960:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5960:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "5986:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "5986:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nativeSrc": "5931:28:13",
																	"nodeType": "YulIdentifier",
																	"src": "5931:28:13"
																},
																"nativeSrc": "5931:63:13",
																"nodeType": "YulFunctionCall",
																"src": "5931:63:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "5921:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5921:6:13"
																}
															]
														},
														{
															"nativeSrc": "6003:49:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6003:49:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6036:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6036:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6047:3:13",
																				"nodeType": "YulLiteral",
																				"src": "6047:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6032:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6032:3:13"
																		},
																		"nativeSrc": "6032:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6032:19:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6019:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "6019:12:13"
																},
																"nativeSrc": "6019:33:13",
																"nodeType": "YulFunctionCall",
																"src": "6019:33:13"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nativeSrc": "6007:8:13",
																	"nodeType": "YulTypedName",
																	"src": "6007:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6081:16:13",
																"nodeType": "YulBlock",
																"src": "6081:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6090:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6090:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6093:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6093:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6083:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6083:6:13"
																			},
																			"nativeSrc": "6083:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6083:12:13"
																		},
																		"nativeSrc": "6083:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6083:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nativeSrc": "6067:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "6067:8:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "6077:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "6077:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6064:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6064:2:13"
																},
																"nativeSrc": "6064:16:13",
																"nodeType": "YulFunctionCall",
																"src": "6064:16:13"
															},
															"nativeSrc": "6061:36:13",
															"nodeType": "YulIf",
															"src": "6061:36:13"
														},
														{
															"nativeSrc": "6106:62:13",
															"nodeType": "YulAssignment",
															"src": "6106:62:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6138:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6138:9:13"
																			},
																			{
																				"name": "offset_2",
																				"nativeSrc": "6149:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "6149:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6134:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6134:3:13"
																		},
																		"nativeSrc": "6134:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6134:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "6160:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "6160:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "6116:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "6116:17:13"
																},
																"nativeSrc": "6116:52:13",
																"nodeType": "YulFunctionCall",
																"src": "6116:52:13"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "6106:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6106:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nativeSrc": "5230:944:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5361:9:13",
														"nodeType": "YulTypedName",
														"src": "5361:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5372:7:13",
														"nodeType": "YulTypedName",
														"src": "5372:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5384:6:13",
														"nodeType": "YulTypedName",
														"src": "5384:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5392:6:13",
														"nodeType": "YulTypedName",
														"src": "5392:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5400:6:13",
														"nodeType": "YulTypedName",
														"src": "5400:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5408:6:13",
														"nodeType": "YulTypedName",
														"src": "5408:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "5416:6:13",
														"nodeType": "YulTypedName",
														"src": "5416:6:13",
														"type": ""
													}
												],
												"src": "5230:944:13"
											},
											{
												"body": {
													"nativeSrc": "6243:610:13",
													"nodeType": "YulBlock",
													"src": "6243:610:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6292:16:13",
																"nodeType": "YulBlock",
																"src": "6292:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6301:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6301:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6304:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6304:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6294:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6294:6:13"
																			},
																			"nativeSrc": "6294:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6294:12:13"
																		},
																		"nativeSrc": "6294:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6294:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "6271:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6271:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6279:4:13",
																						"nodeType": "YulLiteral",
																						"src": "6279:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6267:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6267:3:13"
																				},
																				"nativeSrc": "6267:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6267:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6286:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "6286:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6263:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6263:3:13"
																		},
																		"nativeSrc": "6263:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6263:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6256:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6256:6:13"
																},
																"nativeSrc": "6256:35:13",
																"nodeType": "YulFunctionCall",
																"src": "6256:35:13"
															},
															"nativeSrc": "6253:55:13",
															"nodeType": "YulIf",
															"src": "6253:55:13"
														},
														{
															"nativeSrc": "6317:30:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6317:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6340:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6340:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6327:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "6327:12:13"
																},
																"nativeSrc": "6327:20:13",
																"nodeType": "YulFunctionCall",
																"src": "6327:20:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "6321:2:13",
																	"nodeType": "YulTypedName",
																	"src": "6321:2:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6356:14:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6356:14:13",
															"value": {
																"kind": "number",
																"nativeSrc": "6366:4:13",
																"nodeType": "YulLiteral",
																"src": "6366:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "6360:2:13",
																	"nodeType": "YulTypedName",
																	"src": "6360:2:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6379:71:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6379:71:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "6446:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "6446:2:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_uint256_dyn",
																			"nativeSrc": "6406:39:13",
																			"nodeType": "YulIdentifier",
																			"src": "6406:39:13"
																		},
																		"nativeSrc": "6406:43:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6406:43:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6390:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "6390:15:13"
																},
																"nativeSrc": "6390:60:13",
																"nodeType": "YulFunctionCall",
																"src": "6390:60:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6383:3:13",
																	"nodeType": "YulTypedName",
																	"src": "6383:3:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6459:16:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6459:16:13",
															"value": {
																"name": "dst",
																"nativeSrc": "6472:3:13",
																"nodeType": "YulIdentifier",
																"src": "6472:3:13"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nativeSrc": "6463:5:13",
																	"nodeType": "YulTypedName",
																	"src": "6463:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6491:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6491:3:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "6496:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "6496:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6484:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6484:6:13"
																},
																"nativeSrc": "6484:15:13",
																"nodeType": "YulFunctionCall",
																"src": "6484:15:13"
															},
															"nativeSrc": "6484:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "6484:15:13"
														},
														{
															"nativeSrc": "6508:21:13",
															"nodeType": "YulAssignment",
															"src": "6508:21:13",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6519:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6519:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6524:4:13",
																		"nodeType": "YulLiteral",
																		"src": "6524:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6515:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6515:3:13"
																},
																"nativeSrc": "6515:14:13",
																"nodeType": "YulFunctionCall",
																"src": "6515:14:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "6508:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6508:3:13"
																}
															]
														},
														{
															"nativeSrc": "6538:48:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6538:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6560:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6560:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6572:1:13",
																						"nodeType": "YulLiteral",
																						"src": "6572:1:13",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "6575:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "6575:2:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "6568:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6568:3:13"
																				},
																				"nativeSrc": "6568:10:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6568:10:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6556:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6556:3:13"
																		},
																		"nativeSrc": "6556:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6556:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6581:4:13",
																		"nodeType": "YulLiteral",
																		"src": "6581:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6552:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6552:3:13"
																},
																"nativeSrc": "6552:34:13",
																"nodeType": "YulFunctionCall",
																"src": "6552:34:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "6542:6:13",
																	"nodeType": "YulTypedName",
																	"src": "6542:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6614:16:13",
																"nodeType": "YulBlock",
																"src": "6614:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6623:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6623:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6626:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6626:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6616:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6616:6:13"
																			},
																			"nativeSrc": "6616:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6616:12:13"
																		},
																		"nativeSrc": "6616:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6616:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "6601:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6601:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6609:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6609:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6598:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6598:2:13"
																},
																"nativeSrc": "6598:15:13",
																"nodeType": "YulFunctionCall",
																"src": "6598:15:13"
															},
															"nativeSrc": "6595:35:13",
															"nodeType": "YulIf",
															"src": "6595:35:13"
														},
														{
															"nativeSrc": "6639:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6639:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6654:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6654:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6662:4:13",
																		"nodeType": "YulLiteral",
																		"src": "6662:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6650:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6650:3:13"
																},
																"nativeSrc": "6650:17:13",
																"nodeType": "YulFunctionCall",
																"src": "6650:17:13"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "6643:3:13",
																	"nodeType": "YulTypedName",
																	"src": "6643:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6732:92:13",
																"nodeType": "YulBlock",
																"src": "6732:92:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "6753:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6753:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "6777:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "6777:3:13"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nativeSrc": "6758:18:13",
																						"nodeType": "YulIdentifier",
																						"src": "6758:18:13"
																					},
																					"nativeSrc": "6758:23:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6758:23:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6746:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6746:6:13"
																			},
																			"nativeSrc": "6746:36:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6746:36:13"
																		},
																		"nativeSrc": "6746:36:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6746:36:13"
																	},
																	{
																		"nativeSrc": "6795:19:13",
																		"nodeType": "YulAssignment",
																		"src": "6795:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "6806:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6806:3:13"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "6811:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "6811:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6802:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "6802:3:13"
																			},
																			"nativeSrc": "6802:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6802:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "6795:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "6795:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6687:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6687:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "6692:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6692:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6684:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6684:2:13"
																},
																"nativeSrc": "6684:15:13",
																"nodeType": "YulFunctionCall",
																"src": "6684:15:13"
															},
															"nativeSrc": "6676:148:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6700:23:13",
																"nodeType": "YulBlock",
																"src": "6700:23:13",
																"statements": [
																	{
																		"nativeSrc": "6702:19:13",
																		"nodeType": "YulAssignment",
																		"src": "6702:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "6713:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6713:3:13"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "6718:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "6718:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6709:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "6709:3:13"
																			},
																			"nativeSrc": "6709:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6709:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "6702:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "6702:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6680:3:13",
																"nodeType": "YulBlock",
																"src": "6680:3:13",
																"statements": []
															},
															"src": "6676:148:13"
														},
														{
															"nativeSrc": "6833:14:13",
															"nodeType": "YulAssignment",
															"src": "6833:14:13",
															"value": {
																"name": "dst_1",
																"nativeSrc": "6842:5:13",
																"nodeType": "YulIdentifier",
																"src": "6842:5:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6833:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "6833:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_address_dyn",
												"nativeSrc": "6179:674:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6217:6:13",
														"nodeType": "YulTypedName",
														"src": "6217:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6225:3:13",
														"nodeType": "YulTypedName",
														"src": "6225:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6233:5:13",
														"nodeType": "YulTypedName",
														"src": "6233:5:13",
														"type": ""
													}
												],
												"src": "6179:674:13"
											},
											{
												"body": {
													"nativeSrc": "6995:458:13",
													"nodeType": "YulBlock",
													"src": "6995:458:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7041:16:13",
																"nodeType": "YulBlock",
																"src": "7041:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7050:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7050:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7053:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7053:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7043:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7043:6:13"
																			},
																			"nativeSrc": "7043:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7043:12:13"
																		},
																		"nativeSrc": "7043:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7043:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7016:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7016:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7025:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7025:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7012:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7012:3:13"
																		},
																		"nativeSrc": "7012:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7012:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7037:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7037:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7008:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7008:3:13"
																},
																"nativeSrc": "7008:32:13",
																"nodeType": "YulFunctionCall",
																"src": "7008:32:13"
															},
															"nativeSrc": "7005:52:13",
															"nodeType": "YulIf",
															"src": "7005:52:13"
														},
														{
															"nativeSrc": "7066:37:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7066:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7093:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7093:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7080:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "7080:12:13"
																},
																"nativeSrc": "7080:23:13",
																"nodeType": "YulFunctionCall",
																"src": "7080:23:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "7070:6:13",
																	"nodeType": "YulTypedName",
																	"src": "7070:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7112:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7112:28:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7130:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7130:2:13",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7134:1:13",
																				"nodeType": "YulLiteral",
																				"src": "7134:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7126:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7126:3:13"
																		},
																		"nativeSrc": "7126:10:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7126:10:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7138:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7138:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "7122:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7122:3:13"
																},
																"nativeSrc": "7122:18:13",
																"nodeType": "YulFunctionCall",
																"src": "7122:18:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "7116:2:13",
																	"nodeType": "YulTypedName",
																	"src": "7116:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7167:16:13",
																"nodeType": "YulBlock",
																"src": "7167:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7176:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7176:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7179:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7179:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7169:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7169:6:13"
																			},
																			"nativeSrc": "7169:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7169:12:13"
																		},
																		"nativeSrc": "7169:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7169:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7155:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7155:6:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "7163:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "7163:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7152:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7152:2:13"
																},
																"nativeSrc": "7152:14:13",
																"nodeType": "YulFunctionCall",
																"src": "7152:14:13"
															},
															"nativeSrc": "7149:34:13",
															"nodeType": "YulIf",
															"src": "7149:34:13"
														},
														{
															"nativeSrc": "7192:71:13",
															"nodeType": "YulAssignment",
															"src": "7192:71:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7235:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7235:9:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "7246:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7246:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7231:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7231:3:13"
																		},
																		"nativeSrc": "7231:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7231:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "7255:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "7255:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn",
																	"nativeSrc": "7202:28:13",
																	"nodeType": "YulIdentifier",
																	"src": "7202:28:13"
																},
																"nativeSrc": "7202:61:13",
																"nodeType": "YulFunctionCall",
																"src": "7202:61:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7192:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7192:6:13"
																}
															]
														},
														{
															"nativeSrc": "7272:48:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7272:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7305:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7305:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7316:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7316:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7301:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7301:3:13"
																		},
																		"nativeSrc": "7301:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7301:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7288:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "7288:12:13"
																},
																"nativeSrc": "7288:32:13",
																"nodeType": "YulFunctionCall",
																"src": "7288:32:13"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "7276:8:13",
																	"nodeType": "YulTypedName",
																	"src": "7276:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7349:16:13",
																"nodeType": "YulBlock",
																"src": "7349:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7358:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7358:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7361:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7361:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7351:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7351:6:13"
																			},
																			"nativeSrc": "7351:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7351:12:13"
																		},
																		"nativeSrc": "7351:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7351:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "7335:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "7335:8:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "7345:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "7345:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7332:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7332:2:13"
																},
																"nativeSrc": "7332:16:13",
																"nodeType": "YulFunctionCall",
																"src": "7332:16:13"
															},
															"nativeSrc": "7329:36:13",
															"nodeType": "YulIf",
															"src": "7329:36:13"
														},
														{
															"nativeSrc": "7374:73:13",
															"nodeType": "YulAssignment",
															"src": "7374:73:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7417:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7417:9:13"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "7428:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "7428:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7413:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7413:3:13"
																		},
																		"nativeSrc": "7413:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7413:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "7439:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "7439:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nativeSrc": "7384:28:13",
																	"nodeType": "YulIdentifier",
																	"src": "7384:28:13"
																},
																"nativeSrc": "7384:63:13",
																"nodeType": "YulFunctionCall",
																"src": "7384:63:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "7374:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7374:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6858:595:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6953:9:13",
														"nodeType": "YulTypedName",
														"src": "6953:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6964:7:13",
														"nodeType": "YulTypedName",
														"src": "6964:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6976:6:13",
														"nodeType": "YulTypedName",
														"src": "6976:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6984:6:13",
														"nodeType": "YulTypedName",
														"src": "6984:6:13",
														"type": ""
													}
												],
												"src": "6858:595:13"
											},
											{
												"body": {
													"nativeSrc": "7559:102:13",
													"nodeType": "YulBlock",
													"src": "7559:102:13",
													"statements": [
														{
															"nativeSrc": "7569:26:13",
															"nodeType": "YulAssignment",
															"src": "7569:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7581:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7581:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7592:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7592:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7577:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7577:3:13"
																},
																"nativeSrc": "7577:18:13",
																"nodeType": "YulFunctionCall",
																"src": "7577:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7569:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7569:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7611:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7611:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7626:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7626:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7642:3:13",
																								"nodeType": "YulLiteral",
																								"src": "7642:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7647:1:13",
																								"nodeType": "YulLiteral",
																								"src": "7647:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7638:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "7638:3:13"
																						},
																						"nativeSrc": "7638:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "7638:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7651:1:13",
																						"nodeType": "YulLiteral",
																						"src": "7651:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7634:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7634:3:13"
																				},
																				"nativeSrc": "7634:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7634:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7622:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7622:3:13"
																		},
																		"nativeSrc": "7622:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7622:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7604:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7604:6:13"
																},
																"nativeSrc": "7604:51:13",
																"nodeType": "YulFunctionCall",
																"src": "7604:51:13"
															},
															"nativeSrc": "7604:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "7604:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7458:203:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7528:9:13",
														"nodeType": "YulTypedName",
														"src": "7528:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7539:6:13",
														"nodeType": "YulTypedName",
														"src": "7539:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7550:4:13",
														"nodeType": "YulTypedName",
														"src": "7550:4:13",
														"type": ""
													}
												],
												"src": "7458:203:13"
											},
											{
												"body": {
													"nativeSrc": "7750:263:13",
													"nodeType": "YulBlock",
													"src": "7750:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7796:16:13",
																"nodeType": "YulBlock",
																"src": "7796:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7805:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7805:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7808:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7808:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7798:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7798:6:13"
																			},
																			"nativeSrc": "7798:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7798:12:13"
																		},
																		"nativeSrc": "7798:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7798:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7771:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7771:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7780:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7780:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7767:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7767:3:13"
																		},
																		"nativeSrc": "7767:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7767:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7792:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7792:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7763:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7763:3:13"
																},
																"nativeSrc": "7763:32:13",
																"nodeType": "YulFunctionCall",
																"src": "7763:32:13"
															},
															"nativeSrc": "7760:52:13",
															"nodeType": "YulIf",
															"src": "7760:52:13"
														},
														{
															"nativeSrc": "7821:39:13",
															"nodeType": "YulAssignment",
															"src": "7821:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7850:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7850:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "7831:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "7831:18:13"
																},
																"nativeSrc": "7831:29:13",
																"nodeType": "YulFunctionCall",
																"src": "7831:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7821:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7821:6:13"
																}
															]
														},
														{
															"nativeSrc": "7869:45:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7869:45:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7899:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7899:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7910:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7910:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7895:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7895:3:13"
																		},
																		"nativeSrc": "7895:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7895:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7882:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "7882:12:13"
																},
																"nativeSrc": "7882:32:13",
																"nodeType": "YulFunctionCall",
																"src": "7882:32:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "7873:5:13",
																	"nodeType": "YulTypedName",
																	"src": "7873:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7967:16:13",
																"nodeType": "YulBlock",
																"src": "7967:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7976:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7976:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7979:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7979:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7969:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7969:6:13"
																			},
																			"nativeSrc": "7969:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7969:12:13"
																		},
																		"nativeSrc": "7969:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7969:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7936:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "7936:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "7957:5:13",
																								"nodeType": "YulIdentifier",
																								"src": "7957:5:13"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "7950:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "7950:6:13"
																						},
																						"nativeSrc": "7950:13:13",
																						"nodeType": "YulFunctionCall",
																						"src": "7950:13:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7943:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "7943:6:13"
																				},
																				"nativeSrc": "7943:21:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7943:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7933:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "7933:2:13"
																		},
																		"nativeSrc": "7933:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7933:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7926:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7926:6:13"
																},
																"nativeSrc": "7926:40:13",
																"nodeType": "YulFunctionCall",
																"src": "7926:40:13"
															},
															"nativeSrc": "7923:60:13",
															"nodeType": "YulIf",
															"src": "7923:60:13"
														},
														{
															"nativeSrc": "7992:15:13",
															"nodeType": "YulAssignment",
															"src": "7992:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "8002:5:13",
																"nodeType": "YulIdentifier",
																"src": "8002:5:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "7992:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7992:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "7666:347:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7708:9:13",
														"nodeType": "YulTypedName",
														"src": "7708:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7719:7:13",
														"nodeType": "YulTypedName",
														"src": "7719:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7731:6:13",
														"nodeType": "YulTypedName",
														"src": "7731:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7739:6:13",
														"nodeType": "YulTypedName",
														"src": "7739:6:13",
														"type": ""
													}
												],
												"src": "7666:347:13"
											},
											{
												"body": {
													"nativeSrc": "8157:498:13",
													"nodeType": "YulBlock",
													"src": "8157:498:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8203:16:13",
																"nodeType": "YulBlock",
																"src": "8203:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8212:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8212:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8215:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8215:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8205:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8205:6:13"
																			},
																			"nativeSrc": "8205:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8205:12:13"
																		},
																		"nativeSrc": "8205:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8205:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8178:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8178:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8187:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8187:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8174:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8174:3:13"
																		},
																		"nativeSrc": "8174:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8174:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8199:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8199:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8170:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8170:3:13"
																},
																"nativeSrc": "8170:32:13",
																"nodeType": "YulFunctionCall",
																"src": "8170:32:13"
															},
															"nativeSrc": "8167:52:13",
															"nodeType": "YulIf",
															"src": "8167:52:13"
														},
														{
															"nativeSrc": "8228:37:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8228:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8255:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8255:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8242:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "8242:12:13"
																},
																"nativeSrc": "8242:23:13",
																"nodeType": "YulFunctionCall",
																"src": "8242:23:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "8232:6:13",
																	"nodeType": "YulTypedName",
																	"src": "8232:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8274:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8274:28:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8292:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8292:2:13",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8296:1:13",
																				"nodeType": "YulLiteral",
																				"src": "8296:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8288:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8288:3:13"
																		},
																		"nativeSrc": "8288:10:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8288:10:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8300:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8300:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8284:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8284:3:13"
																},
																"nativeSrc": "8284:18:13",
																"nodeType": "YulFunctionCall",
																"src": "8284:18:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "8278:2:13",
																	"nodeType": "YulTypedName",
																	"src": "8278:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8329:16:13",
																"nodeType": "YulBlock",
																"src": "8329:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8338:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8338:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8341:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8341:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8331:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8331:6:13"
																			},
																			"nativeSrc": "8331:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8331:12:13"
																		},
																		"nativeSrc": "8331:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8331:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8317:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8317:6:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "8325:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "8325:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8314:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8314:2:13"
																},
																"nativeSrc": "8314:14:13",
																"nodeType": "YulFunctionCall",
																"src": "8314:14:13"
															},
															"nativeSrc": "8311:34:13",
															"nodeType": "YulIf",
															"src": "8311:34:13"
														},
														{
															"nativeSrc": "8354:71:13",
															"nodeType": "YulAssignment",
															"src": "8354:71:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8397:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8397:9:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "8408:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8408:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8393:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8393:3:13"
																		},
																		"nativeSrc": "8393:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8393:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "8417:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "8417:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn",
																	"nativeSrc": "8364:28:13",
																	"nodeType": "YulIdentifier",
																	"src": "8364:28:13"
																},
																"nativeSrc": "8364:61:13",
																"nodeType": "YulFunctionCall",
																"src": "8364:61:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8354:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8354:6:13"
																}
															]
														},
														{
															"nativeSrc": "8434:48:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8434:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8467:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8467:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8478:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8478:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8463:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8463:3:13"
																		},
																		"nativeSrc": "8463:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8463:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8450:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "8450:12:13"
																},
																"nativeSrc": "8450:32:13",
																"nodeType": "YulFunctionCall",
																"src": "8450:32:13"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "8438:8:13",
																	"nodeType": "YulTypedName",
																	"src": "8438:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8511:16:13",
																"nodeType": "YulBlock",
																"src": "8511:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8520:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8520:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8523:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8523:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8513:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8513:6:13"
																			},
																			"nativeSrc": "8513:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8513:12:13"
																		},
																		"nativeSrc": "8513:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8513:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "8497:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "8497:8:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "8507:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "8507:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8494:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8494:2:13"
																},
																"nativeSrc": "8494:16:13",
																"nodeType": "YulFunctionCall",
																"src": "8494:16:13"
															},
															"nativeSrc": "8491:36:13",
															"nodeType": "YulIf",
															"src": "8491:36:13"
														},
														{
															"nativeSrc": "8536:62:13",
															"nodeType": "YulAssignment",
															"src": "8536:62:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8568:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8568:9:13"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "8579:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "8579:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8564:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8564:3:13"
																		},
																		"nativeSrc": "8564:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8564:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "8590:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "8590:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "8546:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "8546:17:13"
																},
																"nativeSrc": "8546:52:13",
																"nodeType": "YulFunctionCall",
																"src": "8546:52:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "8536:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8536:6:13"
																}
															]
														},
														{
															"nativeSrc": "8607:42:13",
															"nodeType": "YulAssignment",
															"src": "8607:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8634:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8634:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8645:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8645:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8630:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8630:3:13"
																		},
																		"nativeSrc": "8630:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8630:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8617:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "8617:12:13"
																},
																"nativeSrc": "8617:32:13",
																"nodeType": "YulFunctionCall",
																"src": "8617:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "8607:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8607:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_string_memory_ptrt_uint256",
												"nativeSrc": "8018:637:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8107:9:13",
														"nodeType": "YulTypedName",
														"src": "8107:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8118:7:13",
														"nodeType": "YulTypedName",
														"src": "8118:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8130:6:13",
														"nodeType": "YulTypedName",
														"src": "8130:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8138:6:13",
														"nodeType": "YulTypedName",
														"src": "8138:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8146:6:13",
														"nodeType": "YulTypedName",
														"src": "8146:6:13",
														"type": ""
													}
												],
												"src": "8018:637:13"
											},
											{
												"body": {
													"nativeSrc": "8747:173:13",
													"nodeType": "YulBlock",
													"src": "8747:173:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8793:16:13",
																"nodeType": "YulBlock",
																"src": "8793:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8802:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8802:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8805:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8805:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8795:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8795:6:13"
																			},
																			"nativeSrc": "8795:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8795:12:13"
																		},
																		"nativeSrc": "8795:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8795:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8768:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8768:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8777:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8777:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8764:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8764:3:13"
																		},
																		"nativeSrc": "8764:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8764:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8789:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8789:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8760:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8760:3:13"
																},
																"nativeSrc": "8760:32:13",
																"nodeType": "YulFunctionCall",
																"src": "8760:32:13"
															},
															"nativeSrc": "8757:52:13",
															"nodeType": "YulIf",
															"src": "8757:52:13"
														},
														{
															"nativeSrc": "8818:39:13",
															"nodeType": "YulAssignment",
															"src": "8818:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8847:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8847:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "8828:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "8828:18:13"
																},
																"nativeSrc": "8828:29:13",
																"nodeType": "YulFunctionCall",
																"src": "8828:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8818:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8818:6:13"
																}
															]
														},
														{
															"nativeSrc": "8866:48:13",
															"nodeType": "YulAssignment",
															"src": "8866:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8899:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8899:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8910:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8910:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8895:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8895:3:13"
																		},
																		"nativeSrc": "8895:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8895:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "8876:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "8876:18:13"
																},
																"nativeSrc": "8876:38:13",
																"nodeType": "YulFunctionCall",
																"src": "8876:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "8866:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8866:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "8660:260:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8705:9:13",
														"nodeType": "YulTypedName",
														"src": "8705:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8716:7:13",
														"nodeType": "YulTypedName",
														"src": "8716:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8728:6:13",
														"nodeType": "YulTypedName",
														"src": "8728:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8736:6:13",
														"nodeType": "YulTypedName",
														"src": "8736:6:13",
														"type": ""
													}
												],
												"src": "8660:260:13"
											},
											{
												"body": {
													"nativeSrc": "9072:460:13",
													"nodeType": "YulBlock",
													"src": "9072:460:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "9119:16:13",
																"nodeType": "YulBlock",
																"src": "9119:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9128:1:13",
																					"nodeType": "YulLiteral",
																					"src": "9128:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9131:1:13",
																					"nodeType": "YulLiteral",
																					"src": "9131:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9121:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9121:6:13"
																			},
																			"nativeSrc": "9121:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9121:12:13"
																		},
																		"nativeSrc": "9121:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9121:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9093:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9093:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9102:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9102:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9089:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9089:3:13"
																		},
																		"nativeSrc": "9089:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9089:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9114:3:13",
																		"nodeType": "YulLiteral",
																		"src": "9114:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9085:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9085:3:13"
																},
																"nativeSrc": "9085:33:13",
																"nodeType": "YulFunctionCall",
																"src": "9085:33:13"
															},
															"nativeSrc": "9082:53:13",
															"nodeType": "YulIf",
															"src": "9082:53:13"
														},
														{
															"nativeSrc": "9144:39:13",
															"nodeType": "YulAssignment",
															"src": "9144:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9173:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9173:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "9154:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "9154:18:13"
																},
																"nativeSrc": "9154:29:13",
																"nodeType": "YulFunctionCall",
																"src": "9154:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "9144:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9144:6:13"
																}
															]
														},
														{
															"nativeSrc": "9192:48:13",
															"nodeType": "YulAssignment",
															"src": "9192:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9225:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9225:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9236:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9236:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9221:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9221:3:13"
																		},
																		"nativeSrc": "9221:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9221:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "9202:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "9202:18:13"
																},
																"nativeSrc": "9202:38:13",
																"nodeType": "YulFunctionCall",
																"src": "9202:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "9192:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9192:6:13"
																}
															]
														},
														{
															"nativeSrc": "9249:42:13",
															"nodeType": "YulAssignment",
															"src": "9249:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9276:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9276:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9287:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9287:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9272:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9272:3:13"
																		},
																		"nativeSrc": "9272:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9272:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9259:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "9259:12:13"
																},
																"nativeSrc": "9259:32:13",
																"nodeType": "YulFunctionCall",
																"src": "9259:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "9249:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9249:6:13"
																}
															]
														},
														{
															"nativeSrc": "9300:42:13",
															"nodeType": "YulAssignment",
															"src": "9300:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9327:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9327:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9338:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9338:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9323:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9323:3:13"
																		},
																		"nativeSrc": "9323:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9323:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9310:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "9310:12:13"
																},
																"nativeSrc": "9310:32:13",
																"nodeType": "YulFunctionCall",
																"src": "9310:32:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "9300:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9300:6:13"
																}
															]
														},
														{
															"nativeSrc": "9351:47:13",
															"nodeType": "YulVariableDeclaration",
															"src": "9351:47:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9382:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9382:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9393:3:13",
																				"nodeType": "YulLiteral",
																				"src": "9393:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9378:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9378:3:13"
																		},
																		"nativeSrc": "9378:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9378:19:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9365:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "9365:12:13"
																},
																"nativeSrc": "9365:33:13",
																"nodeType": "YulFunctionCall",
																"src": "9365:33:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "9355:6:13",
																	"nodeType": "YulTypedName",
																	"src": "9355:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9441:16:13",
																"nodeType": "YulBlock",
																"src": "9441:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9450:1:13",
																					"nodeType": "YulLiteral",
																					"src": "9450:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9453:1:13",
																					"nodeType": "YulLiteral",
																					"src": "9453:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9443:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9443:6:13"
																			},
																			"nativeSrc": "9443:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9443:12:13"
																		},
																		"nativeSrc": "9443:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9443:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9413:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9413:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "9429:2:13",
																						"nodeType": "YulLiteral",
																						"src": "9429:2:13",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9433:1:13",
																						"nodeType": "YulLiteral",
																						"src": "9433:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "9425:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9425:3:13"
																				},
																				"nativeSrc": "9425:10:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9425:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9437:1:13",
																				"nodeType": "YulLiteral",
																				"src": "9437:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9421:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9421:3:13"
																		},
																		"nativeSrc": "9421:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9421:18:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9410:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "9410:2:13"
																},
																"nativeSrc": "9410:30:13",
																"nodeType": "YulFunctionCall",
																"src": "9410:30:13"
															},
															"nativeSrc": "9407:50:13",
															"nodeType": "YulIf",
															"src": "9407:50:13"
														},
														{
															"nativeSrc": "9466:60:13",
															"nodeType": "YulAssignment",
															"src": "9466:60:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9498:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9498:9:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "9509:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9509:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9494:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9494:3:13"
																		},
																		"nativeSrc": "9494:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9494:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "9518:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "9518:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "9476:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "9476:17:13"
																},
																"nativeSrc": "9476:50:13",
																"nodeType": "YulFunctionCall",
																"src": "9476:50:13"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "9466:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9466:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nativeSrc": "8925:607:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9006:9:13",
														"nodeType": "YulTypedName",
														"src": "9006:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9017:7:13",
														"nodeType": "YulTypedName",
														"src": "9017:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9029:6:13",
														"nodeType": "YulTypedName",
														"src": "9029:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9037:6:13",
														"nodeType": "YulTypedName",
														"src": "9037:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9045:6:13",
														"nodeType": "YulTypedName",
														"src": "9045:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9053:6:13",
														"nodeType": "YulTypedName",
														"src": "9053:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9061:6:13",
														"nodeType": "YulTypedName",
														"src": "9061:6:13",
														"type": ""
													}
												],
												"src": "8925:607:13"
											},
											{
												"body": {
													"nativeSrc": "9607:116:13",
													"nodeType": "YulBlock",
													"src": "9607:116:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "9653:16:13",
																"nodeType": "YulBlock",
																"src": "9653:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9662:1:13",
																					"nodeType": "YulLiteral",
																					"src": "9662:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9665:1:13",
																					"nodeType": "YulLiteral",
																					"src": "9665:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9655:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9655:6:13"
																			},
																			"nativeSrc": "9655:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9655:12:13"
																		},
																		"nativeSrc": "9655:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9655:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9628:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9628:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9637:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9637:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9624:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9624:3:13"
																		},
																		"nativeSrc": "9624:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9624:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9649:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9649:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9620:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9620:3:13"
																},
																"nativeSrc": "9620:32:13",
																"nodeType": "YulFunctionCall",
																"src": "9620:32:13"
															},
															"nativeSrc": "9617:52:13",
															"nodeType": "YulIf",
															"src": "9617:52:13"
														},
														{
															"nativeSrc": "9678:39:13",
															"nodeType": "YulAssignment",
															"src": "9678:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9707:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9707:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "9688:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "9688:18:13"
																},
																"nativeSrc": "9688:29:13",
																"nodeType": "YulFunctionCall",
																"src": "9688:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "9678:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9678:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "9537:186:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9573:9:13",
														"nodeType": "YulTypedName",
														"src": "9573:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9584:7:13",
														"nodeType": "YulTypedName",
														"src": "9584:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9596:6:13",
														"nodeType": "YulTypedName",
														"src": "9596:6:13",
														"type": ""
													}
												],
												"src": "9537:186:13"
											},
											{
												"body": {
													"nativeSrc": "9783:325:13",
													"nodeType": "YulBlock",
													"src": "9783:325:13",
													"statements": [
														{
															"nativeSrc": "9793:22:13",
															"nodeType": "YulAssignment",
															"src": "9793:22:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9807:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9807:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "9810:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "9810:4:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "9803:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9803:3:13"
																},
																"nativeSrc": "9803:12:13",
																"nodeType": "YulFunctionCall",
																"src": "9803:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9793:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9793:6:13"
																}
															]
														},
														{
															"nativeSrc": "9824:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "9824:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9854:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "9854:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9860:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9860:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9850:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9850:3:13"
																},
																"nativeSrc": "9850:12:13",
																"nodeType": "YulFunctionCall",
																"src": "9850:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "9828:18:13",
																	"nodeType": "YulTypedName",
																	"src": "9828:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9901:31:13",
																"nodeType": "YulBlock",
																"src": "9901:31:13",
																"statements": [
																	{
																		"nativeSrc": "9903:27:13",
																		"nodeType": "YulAssignment",
																		"src": "9903:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "9917:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "9917:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9925:4:13",
																					"nodeType": "YulLiteral",
																					"src": "9925:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9913:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "9913:3:13"
																			},
																			"nativeSrc": "9913:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9913:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "9903:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9903:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9881:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "9881:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9874:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9874:6:13"
																},
																"nativeSrc": "9874:26:13",
																"nodeType": "YulFunctionCall",
																"src": "9874:26:13"
															},
															"nativeSrc": "9871:61:13",
															"nodeType": "YulIf",
															"src": "9871:61:13"
														},
														{
															"body": {
																"nativeSrc": "9991:111:13",
																"nodeType": "YulBlock",
																"src": "9991:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10012:1:13",
																					"nodeType": "YulLiteral",
																					"src": "10012:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10019:3:13",
																							"nodeType": "YulLiteral",
																							"src": "10019:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "10024:10:13",
																							"nodeType": "YulLiteral",
																							"src": "10024:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "10015:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "10015:3:13"
																					},
																					"nativeSrc": "10015:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "10015:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10005:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10005:6:13"
																			},
																			"nativeSrc": "10005:31:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10005:31:13"
																		},
																		"nativeSrc": "10005:31:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10005:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10056:1:13",
																					"nodeType": "YulLiteral",
																					"src": "10056:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10059:4:13",
																					"nodeType": "YulLiteral",
																					"src": "10059:4:13",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10049:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10049:6:13"
																			},
																			"nativeSrc": "10049:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10049:15:13"
																		},
																		"nativeSrc": "10049:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10049:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10084:1:13",
																					"nodeType": "YulLiteral",
																					"src": "10084:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10087:4:13",
																					"nodeType": "YulLiteral",
																					"src": "10087:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10077:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10077:6:13"
																			},
																			"nativeSrc": "10077:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10077:15:13"
																		},
																		"nativeSrc": "10077:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10077:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9947:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "9947:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9970:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9970:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9978:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9978:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9967:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "9967:2:13"
																		},
																		"nativeSrc": "9967:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9967:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9944:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "9944:2:13"
																},
																"nativeSrc": "9944:38:13",
																"nodeType": "YulFunctionCall",
																"src": "9944:38:13"
															},
															"nativeSrc": "9941:161:13",
															"nodeType": "YulIf",
															"src": "9941:161:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "9728:380:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9763:4:13",
														"nodeType": "YulTypedName",
														"src": "9763:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9772:6:13",
														"nodeType": "YulTypedName",
														"src": "9772:6:13",
														"type": ""
													}
												],
												"src": "9728:380:13"
											},
											{
												"body": {
													"nativeSrc": "10145:95:13",
													"nodeType": "YulBlock",
													"src": "10145:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10162:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10162:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10169:3:13",
																				"nodeType": "YulLiteral",
																				"src": "10169:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10174:10:13",
																				"nodeType": "YulLiteral",
																				"src": "10174:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "10165:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10165:3:13"
																		},
																		"nativeSrc": "10165:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10165:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10155:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10155:6:13"
																},
																"nativeSrc": "10155:31:13",
																"nodeType": "YulFunctionCall",
																"src": "10155:31:13"
															},
															"nativeSrc": "10155:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "10155:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10202:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10202:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10205:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10205:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10195:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10195:6:13"
																},
																"nativeSrc": "10195:15:13",
																"nodeType": "YulFunctionCall",
																"src": "10195:15:13"
															},
															"nativeSrc": "10195:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "10195:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10226:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10226:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10229:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10229:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10219:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10219:6:13"
																},
																"nativeSrc": "10219:15:13",
																"nodeType": "YulFunctionCall",
																"src": "10219:15:13"
															},
															"nativeSrc": "10219:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "10219:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10113:127:13",
												"nodeType": "YulFunctionDefinition",
												"src": "10113:127:13"
											},
											{
												"body": {
													"nativeSrc": "10292:88:13",
													"nodeType": "YulBlock",
													"src": "10292:88:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "10323:22:13",
																"nodeType": "YulBlock",
																"src": "10323:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10325:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "10325:16:13"
																			},
																			"nativeSrc": "10325:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10325:18:13"
																		},
																		"nativeSrc": "10325:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10325:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10308:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "10308:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10319:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10319:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "10315:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10315:3:13"
																		},
																		"nativeSrc": "10315:6:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10315:6:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10305:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "10305:2:13"
																},
																"nativeSrc": "10305:17:13",
																"nodeType": "YulFunctionCall",
																"src": "10305:17:13"
															},
															"nativeSrc": "10302:43:13",
															"nodeType": "YulIf",
															"src": "10302:43:13"
														},
														{
															"nativeSrc": "10354:20:13",
															"nodeType": "YulAssignment",
															"src": "10354:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10365:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "10365:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10372:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10372:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10361:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10361:3:13"
																},
																"nativeSrc": "10361:13:13",
																"nodeType": "YulFunctionCall",
																"src": "10361:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "10354:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10354:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "10245:135:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10274:5:13",
														"nodeType": "YulTypedName",
														"src": "10274:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "10284:3:13",
														"nodeType": "YulTypedName",
														"src": "10284:3:13",
														"type": ""
													}
												],
												"src": "10245:135:13"
											},
											{
												"body": {
													"nativeSrc": "10417:95:13",
													"nodeType": "YulBlock",
													"src": "10417:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10434:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10434:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10441:3:13",
																				"nodeType": "YulLiteral",
																				"src": "10441:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10446:10:13",
																				"nodeType": "YulLiteral",
																				"src": "10446:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "10437:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10437:3:13"
																		},
																		"nativeSrc": "10437:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10437:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10427:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10427:6:13"
																},
																"nativeSrc": "10427:31:13",
																"nodeType": "YulFunctionCall",
																"src": "10427:31:13"
															},
															"nativeSrc": "10427:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "10427:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10474:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10474:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10477:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10477:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10467:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10467:6:13"
																},
																"nativeSrc": "10467:15:13",
																"nodeType": "YulFunctionCall",
																"src": "10467:15:13"
															},
															"nativeSrc": "10467:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "10467:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10498:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10498:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10501:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10501:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10491:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10491:6:13"
																},
																"nativeSrc": "10491:15:13",
																"nodeType": "YulFunctionCall",
																"src": "10491:15:13"
															},
															"nativeSrc": "10491:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "10491:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "10385:127:13",
												"nodeType": "YulFunctionDefinition",
												"src": "10385:127:13"
											},
											{
												"body": {
													"nativeSrc": "10646:175:13",
													"nodeType": "YulBlock",
													"src": "10646:175:13",
													"statements": [
														{
															"nativeSrc": "10656:26:13",
															"nodeType": "YulAssignment",
															"src": "10656:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10668:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10668:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10679:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10679:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10664:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10664:3:13"
																},
																"nativeSrc": "10664:18:13",
																"nodeType": "YulFunctionCall",
																"src": "10664:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10656:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10656:4:13"
																}
															]
														},
														{
															"nativeSrc": "10691:29:13",
															"nodeType": "YulVariableDeclaration",
															"src": "10691:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10709:3:13",
																				"nodeType": "YulLiteral",
																				"src": "10709:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10714:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10714:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "10705:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10705:3:13"
																		},
																		"nativeSrc": "10705:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10705:11:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10718:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10718:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10701:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10701:3:13"
																},
																"nativeSrc": "10701:19:13",
																"nodeType": "YulFunctionCall",
																"src": "10701:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "10695:2:13",
																	"nodeType": "YulTypedName",
																	"src": "10695:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10736:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10736:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10751:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10751:6:13"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "10759:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "10759:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10747:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10747:3:13"
																		},
																		"nativeSrc": "10747:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10747:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10729:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10729:6:13"
																},
																"nativeSrc": "10729:34:13",
																"nodeType": "YulFunctionCall",
																"src": "10729:34:13"
															},
															"nativeSrc": "10729:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "10729:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10783:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10783:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10794:2:13",
																				"nodeType": "YulLiteral",
																				"src": "10794:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10779:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10779:3:13"
																		},
																		"nativeSrc": "10779:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10779:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "10803:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10803:6:13"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "10811:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "10811:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10799:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10799:3:13"
																		},
																		"nativeSrc": "10799:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10799:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10772:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10772:6:13"
																},
																"nativeSrc": "10772:43:13",
																"nodeType": "YulFunctionCall",
																"src": "10772:43:13"
															},
															"nativeSrc": "10772:43:13",
															"nodeType": "YulExpressionStatement",
															"src": "10772:43:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "10517:304:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10607:9:13",
														"nodeType": "YulTypedName",
														"src": "10607:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10618:6:13",
														"nodeType": "YulTypedName",
														"src": "10618:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10626:6:13",
														"nodeType": "YulTypedName",
														"src": "10626:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10637:4:13",
														"nodeType": "YulTypedName",
														"src": "10637:4:13",
														"type": ""
													}
												],
												"src": "10517:304:13"
											},
											{
												"body": {
													"nativeSrc": "10955:119:13",
													"nodeType": "YulBlock",
													"src": "10955:119:13",
													"statements": [
														{
															"nativeSrc": "10965:26:13",
															"nodeType": "YulAssignment",
															"src": "10965:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10977:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10977:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10988:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10988:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10973:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10973:3:13"
																},
																"nativeSrc": "10973:18:13",
																"nodeType": "YulFunctionCall",
																"src": "10973:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10965:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10965:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11007:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11007:9:13"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "11018:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11018:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11000:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11000:6:13"
																},
																"nativeSrc": "11000:25:13",
																"nodeType": "YulFunctionCall",
																"src": "11000:25:13"
															},
															"nativeSrc": "11000:25:13",
															"nodeType": "YulExpressionStatement",
															"src": "11000:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11045:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11045:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11056:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11056:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11041:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11041:3:13"
																		},
																		"nativeSrc": "11041:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11041:18:13"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "11061:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11061:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11034:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11034:6:13"
																},
																"nativeSrc": "11034:34:13",
																"nodeType": "YulFunctionCall",
																"src": "11034:34:13"
															},
															"nativeSrc": "11034:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "11034:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10826:248:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10916:9:13",
														"nodeType": "YulTypedName",
														"src": "10916:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10927:6:13",
														"nodeType": "YulTypedName",
														"src": "10927:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10935:6:13",
														"nodeType": "YulTypedName",
														"src": "10935:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10946:4:13",
														"nodeType": "YulTypedName",
														"src": "10946:4:13",
														"type": ""
													}
												],
												"src": "10826:248:13"
											},
											{
												"body": {
													"nativeSrc": "11135:65:13",
													"nodeType": "YulBlock",
													"src": "11135:65:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11152:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11152:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "11155:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11155:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11145:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11145:6:13"
																},
																"nativeSrc": "11145:14:13",
																"nodeType": "YulFunctionCall",
																"src": "11145:14:13"
															},
															"nativeSrc": "11145:14:13",
															"nodeType": "YulExpressionStatement",
															"src": "11145:14:13"
														},
														{
															"nativeSrc": "11168:26:13",
															"nodeType": "YulAssignment",
															"src": "11168:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11186:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11186:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11189:4:13",
																		"nodeType": "YulLiteral",
																		"src": "11189:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "11176:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "11176:9:13"
																},
																"nativeSrc": "11176:18:13",
																"nodeType": "YulFunctionCall",
																"src": "11176:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "11168:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11168:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "11079:121:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "11118:3:13",
														"nodeType": "YulTypedName",
														"src": "11118:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "11126:4:13",
														"nodeType": "YulTypedName",
														"src": "11126:4:13",
														"type": ""
													}
												],
												"src": "11079:121:13"
											},
											{
												"body": {
													"nativeSrc": "11286:437:13",
													"nodeType": "YulBlock",
													"src": "11286:437:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "11319:398:13",
																"nodeType": "YulBlock",
																"src": "11319:398:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11340:1:13",
																					"nodeType": "YulLiteral",
																					"src": "11340:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "11343:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "11343:5:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "11333:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11333:6:13"
																			},
																			"nativeSrc": "11333:16:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11333:16:13"
																		},
																		"nativeSrc": "11333:16:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11333:16:13"
																	},
																	{
																		"nativeSrc": "11362:30:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11362:30:13",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11384:1:13",
																					"nodeType": "YulLiteral",
																					"src": "11384:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11387:4:13",
																					"nodeType": "YulLiteral",
																					"src": "11387:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "11374:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11374:9:13"
																			},
																			"nativeSrc": "11374:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11374:18:13"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "11366:4:13",
																				"nodeType": "YulTypedName",
																				"src": "11366:4:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "11405:57:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11405:57:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "11428:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "11428:4:13"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "11438:1:13",
																							"nodeType": "YulLiteral",
																							"src": "11438:1:13",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "11445:10:13",
																									"nodeType": "YulIdentifier",
																									"src": "11445:10:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "11457:2:13",
																									"nodeType": "YulLiteral",
																									"src": "11457:2:13",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "11441:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "11441:3:13"
																							},
																							"nativeSrc": "11441:19:13",
																							"nodeType": "YulFunctionCall",
																							"src": "11441:19:13"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "11434:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "11434:3:13"
																					},
																					"nativeSrc": "11434:27:13",
																					"nodeType": "YulFunctionCall",
																					"src": "11434:27:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11424:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11424:3:13"
																			},
																			"nativeSrc": "11424:38:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11424:38:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "11409:11:13",
																				"nodeType": "YulTypedName",
																				"src": "11409:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "11499:23:13",
																			"nodeType": "YulBlock",
																			"src": "11499:23:13",
																			"statements": [
																				{
																					"nativeSrc": "11501:19:13",
																					"nodeType": "YulAssignment",
																					"src": "11501:19:13",
																					"value": {
																						"name": "data",
																						"nativeSrc": "11516:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "11516:4:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "11501:11:13",
																							"nodeType": "YulIdentifier",
																							"src": "11501:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "11481:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "11481:10:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11493:4:13",
																					"nodeType": "YulLiteral",
																					"src": "11493:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "11478:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "11478:2:13"
																			},
																			"nativeSrc": "11478:20:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11478:20:13"
																		},
																		"nativeSrc": "11475:47:13",
																		"nodeType": "YulIf",
																		"src": "11475:47:13"
																	},
																	{
																		"nativeSrc": "11535:41:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11535:41:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "11549:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "11549:4:13"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "11559:1:13",
																							"nodeType": "YulLiteral",
																							"src": "11559:1:13",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "11566:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "11566:3:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "11571:2:13",
																									"nodeType": "YulLiteral",
																									"src": "11571:2:13",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "11562:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "11562:3:13"
																							},
																							"nativeSrc": "11562:12:13",
																							"nodeType": "YulFunctionCall",
																							"src": "11562:12:13"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "11555:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "11555:3:13"
																					},
																					"nativeSrc": "11555:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "11555:20:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11545:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11545:3:13"
																			},
																			"nativeSrc": "11545:31:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11545:31:13"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "11539:2:13",
																				"nodeType": "YulTypedName",
																				"src": "11539:2:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "11589:24:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11589:24:13",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "11602:11:13",
																			"nodeType": "YulIdentifier",
																			"src": "11602:11:13"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "11593:5:13",
																				"nodeType": "YulTypedName",
																				"src": "11593:5:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "11687:20:13",
																			"nodeType": "YulBlock",
																			"src": "11687:20:13",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "11696:5:13",
																								"nodeType": "YulIdentifier",
																								"src": "11696:5:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11703:1:13",
																								"nodeType": "YulLiteral",
																								"src": "11703:1:13",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "11689:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "11689:6:13"
																						},
																						"nativeSrc": "11689:16:13",
																						"nodeType": "YulFunctionCall",
																						"src": "11689:16:13"
																					},
																					"nativeSrc": "11689:16:13",
																					"nodeType": "YulExpressionStatement",
																					"src": "11689:16:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "11637:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "11637:5:13"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "11644:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "11644:2:13"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "11634:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "11634:2:13"
																			},
																			"nativeSrc": "11634:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11634:13:13"
																		},
																		"nativeSrc": "11626:81:13",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "11648:26:13",
																			"nodeType": "YulBlock",
																			"src": "11648:26:13",
																			"statements": [
																				{
																					"nativeSrc": "11650:22:13",
																					"nodeType": "YulAssignment",
																					"src": "11650:22:13",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "11663:5:13",
																								"nodeType": "YulIdentifier",
																								"src": "11663:5:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11670:1:13",
																								"nodeType": "YulLiteral",
																								"src": "11670:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "11659:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "11659:3:13"
																						},
																						"nativeSrc": "11659:13:13",
																						"nodeType": "YulFunctionCall",
																						"src": "11659:13:13"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "11650:5:13",
																							"nodeType": "YulIdentifier",
																							"src": "11650:5:13"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "11630:3:13",
																			"nodeType": "YulBlock",
																			"src": "11630:3:13",
																			"statements": []
																		},
																		"src": "11626:81:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "11302:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11302:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11307:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11307:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11299:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "11299:2:13"
																},
																"nativeSrc": "11299:11:13",
																"nodeType": "YulFunctionCall",
																"src": "11299:11:13"
															},
															"nativeSrc": "11296:421:13",
															"nodeType": "YulIf",
															"src": "11296:421:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "11205:518:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "11258:5:13",
														"nodeType": "YulTypedName",
														"src": "11258:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "11265:3:13",
														"nodeType": "YulTypedName",
														"src": "11265:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "11270:10:13",
														"nodeType": "YulTypedName",
														"src": "11270:10:13",
														"type": ""
													}
												],
												"src": "11205:518:13"
											},
											{
												"body": {
													"nativeSrc": "11813:81:13",
													"nodeType": "YulBlock",
													"src": "11813:81:13",
													"statements": [
														{
															"nativeSrc": "11823:65:13",
															"nodeType": "YulAssignment",
															"src": "11823:65:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "11838:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "11838:4:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "11856:1:13",
																										"nodeType": "YulLiteral",
																										"src": "11856:1:13",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "11859:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "11859:3:13"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "11852:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "11852:3:13"
																								},
																								"nativeSrc": "11852:11:13",
																								"nodeType": "YulFunctionCall",
																								"src": "11852:11:13"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "11869:1:13",
																										"nodeType": "YulLiteral",
																										"src": "11869:1:13",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "11865:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "11865:3:13"
																								},
																								"nativeSrc": "11865:6:13",
																								"nodeType": "YulFunctionCall",
																								"src": "11865:6:13"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "11848:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "11848:3:13"
																						},
																						"nativeSrc": "11848:24:13",
																						"nodeType": "YulFunctionCall",
																						"src": "11848:24:13"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "11844:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11844:3:13"
																				},
																				"nativeSrc": "11844:29:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11844:29:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11834:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11834:3:13"
																		},
																		"nativeSrc": "11834:40:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11834:40:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11880:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11880:1:13",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "11883:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11883:3:13"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "11876:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11876:3:13"
																		},
																		"nativeSrc": "11876:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11876:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "11831:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "11831:2:13"
																},
																"nativeSrc": "11831:57:13",
																"nodeType": "YulFunctionCall",
																"src": "11831:57:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "11823:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11823:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "11728:166:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "11790:4:13",
														"nodeType": "YulTypedName",
														"src": "11790:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "11796:3:13",
														"nodeType": "YulTypedName",
														"src": "11796:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "11804:4:13",
														"nodeType": "YulTypedName",
														"src": "11804:4:13",
														"type": ""
													}
												],
												"src": "11728:166:13"
											},
											{
												"body": {
													"nativeSrc": "11995:1249:13",
													"nodeType": "YulBlock",
													"src": "11995:1249:13",
													"statements": [
														{
															"nativeSrc": "12005:24:13",
															"nodeType": "YulVariableDeclaration",
															"src": "12005:24:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "12025:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12025:3:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12019:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "12019:5:13"
																},
																"nativeSrc": "12019:10:13",
																"nodeType": "YulFunctionCall",
																"src": "12019:10:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "12009:6:13",
																	"nodeType": "YulTypedName",
																	"src": "12009:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12072:22:13",
																"nodeType": "YulBlock",
																"src": "12072:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "12074:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "12074:16:13"
																			},
																			"nativeSrc": "12074:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12074:18:13"
																		},
																		"nativeSrc": "12074:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12074:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "12044:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12044:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "12060:2:13",
																						"nodeType": "YulLiteral",
																						"src": "12060:2:13",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12064:1:13",
																						"nodeType": "YulLiteral",
																						"src": "12064:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "12056:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12056:3:13"
																				},
																				"nativeSrc": "12056:10:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12056:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12068:1:13",
																				"nodeType": "YulLiteral",
																				"src": "12068:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12052:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12052:3:13"
																		},
																		"nativeSrc": "12052:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12052:18:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12041:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "12041:2:13"
																},
																"nativeSrc": "12041:30:13",
																"nodeType": "YulFunctionCall",
																"src": "12041:30:13"
															},
															"nativeSrc": "12038:56:13",
															"nodeType": "YulIf",
															"src": "12038:56:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "12147:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "12147:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "12185:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "12185:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "12179:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "12179:5:13"
																				},
																				"nativeSrc": "12179:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12179:11:13"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "12153:25:13",
																			"nodeType": "YulIdentifier",
																			"src": "12153:25:13"
																		},
																		"nativeSrc": "12153:38:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12153:38:13"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "12193:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12193:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "12103:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "12103:43:13"
																},
																"nativeSrc": "12103:97:13",
																"nodeType": "YulFunctionCall",
																"src": "12103:97:13"
															},
															"nativeSrc": "12103:97:13",
															"nodeType": "YulExpressionStatement",
															"src": "12103:97:13"
														},
														{
															"nativeSrc": "12209:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "12209:18:13",
															"value": {
																"kind": "number",
																"nativeSrc": "12226:1:13",
																"nodeType": "YulLiteral",
																"src": "12226:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "12213:9:13",
																	"nodeType": "YulTypedName",
																	"src": "12213:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12236:23:13",
															"nodeType": "YulVariableDeclaration",
															"src": "12236:23:13",
															"value": {
																"kind": "number",
																"nativeSrc": "12255:4:13",
																"nodeType": "YulLiteral",
																"src": "12255:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "12240:11:13",
																	"nodeType": "YulTypedName",
																	"src": "12240:11:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12268:17:13",
															"nodeType": "YulAssignment",
															"src": "12268:17:13",
															"value": {
																"kind": "number",
																"nativeSrc": "12281:4:13",
																"nodeType": "YulLiteral",
																"src": "12281:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "12268:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "12268:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "12331:656:13",
																		"nodeType": "YulBlock",
																		"src": "12331:656:13",
																		"statements": [
																			{
																				"nativeSrc": "12345:35:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "12345:35:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "12364:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "12364:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "12376:2:13",
																									"nodeType": "YulLiteral",
																									"src": "12376:2:13",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "12372:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "12372:3:13"
																							},
																							"nativeSrc": "12372:7:13",
																							"nodeType": "YulFunctionCall",
																							"src": "12372:7:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "12360:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "12360:3:13"
																					},
																					"nativeSrc": "12360:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "12360:20:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "12349:7:13",
																						"nodeType": "YulTypedName",
																						"src": "12349:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "12393:49:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "12393:49:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "12437:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "12437:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "12407:29:13",
																						"nodeType": "YulIdentifier",
																						"src": "12407:29:13"
																					},
																					"nativeSrc": "12407:35:13",
																					"nodeType": "YulFunctionCall",
																					"src": "12407:35:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "12397:6:13",
																						"nodeType": "YulTypedName",
																						"src": "12397:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "12455:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "12455:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "12464:1:13",
																					"nodeType": "YulLiteral",
																					"src": "12464:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "12459:1:13",
																						"nodeType": "YulTypedName",
																						"src": "12459:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "12542:172:13",
																					"nodeType": "YulBlock",
																					"src": "12542:172:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "12567:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "12567:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "12585:3:13",
																														"nodeType": "YulIdentifier",
																														"src": "12585:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "12590:9:13",
																														"nodeType": "YulIdentifier",
																														"src": "12590:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "12581:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "12581:3:13"
																												},
																												"nativeSrc": "12581:19:13",
																												"nodeType": "YulFunctionCall",
																												"src": "12581:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "12575:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "12575:5:13"
																										},
																										"nativeSrc": "12575:26:13",
																										"nodeType": "YulFunctionCall",
																										"src": "12575:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "12560:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "12560:6:13"
																								},
																								"nativeSrc": "12560:42:13",
																								"nodeType": "YulFunctionCall",
																								"src": "12560:42:13"
																							},
																							"nativeSrc": "12560:42:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "12560:42:13"
																						},
																						{
																							"nativeSrc": "12619:24:13",
																							"nodeType": "YulAssignment",
																							"src": "12619:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "12633:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "12633:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "12641:1:13",
																										"nodeType": "YulLiteral",
																										"src": "12641:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "12629:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "12629:3:13"
																								},
																								"nativeSrc": "12629:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "12629:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "12619:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "12619:6:13"
																								}
																							]
																						},
																						{
																							"nativeSrc": "12660:40:13",
																							"nodeType": "YulAssignment",
																							"src": "12660:40:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "12677:9:13",
																										"nodeType": "YulIdentifier",
																										"src": "12677:9:13"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "12688:11:13",
																										"nodeType": "YulIdentifier",
																										"src": "12688:11:13"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "12673:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "12673:3:13"
																								},
																								"nativeSrc": "12673:27:13",
																								"nodeType": "YulFunctionCall",
																								"src": "12673:27:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "12660:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "12660:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "12489:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "12489:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "12492:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "12492:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "12486:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "12486:2:13"
																					},
																					"nativeSrc": "12486:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "12486:14:13"
																				},
																				"nativeSrc": "12478:236:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "12501:28:13",
																					"nodeType": "YulBlock",
																					"src": "12501:28:13",
																					"statements": [
																						{
																							"nativeSrc": "12503:24:13",
																							"nodeType": "YulAssignment",
																							"src": "12503:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "12512:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "12512:1:13"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "12515:11:13",
																										"nodeType": "YulIdentifier",
																										"src": "12515:11:13"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "12508:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "12508:3:13"
																								},
																								"nativeSrc": "12508:19:13",
																								"nodeType": "YulFunctionCall",
																								"src": "12508:19:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "12503:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "12503:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "12482:3:13",
																					"nodeType": "YulBlock",
																					"src": "12482:3:13",
																					"statements": []
																				},
																				"src": "12478:236:13"
																			},
																			{
																				"body": {
																					"nativeSrc": "12762:166:13",
																					"nodeType": "YulBlock",
																					"src": "12762:166:13",
																					"statements": [
																						{
																							"nativeSrc": "12780:43:13",
																							"nodeType": "YulVariableDeclaration",
																							"src": "12780:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "12807:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "12807:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "12812:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "12812:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "12803:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "12803:3:13"
																										},
																										"nativeSrc": "12803:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "12803:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "12797:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "12797:5:13"
																								},
																								"nativeSrc": "12797:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "12797:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "12784:9:13",
																									"nodeType": "YulTypedName",
																									"src": "12784:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "12847:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "12847:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "12859:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "12859:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "12886:1:13",
																																				"nodeType": "YulLiteral",
																																				"src": "12886:1:13",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "12889:6:13",
																																				"nodeType": "YulIdentifier",
																																				"src": "12889:6:13"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "12882:3:13",
																																			"nodeType": "YulIdentifier",
																																			"src": "12882:3:13"
																																		},
																																		"nativeSrc": "12882:14:13",
																																		"nodeType": "YulFunctionCall",
																																		"src": "12882:14:13"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "12898:3:13",
																																		"nodeType": "YulLiteral",
																																		"src": "12898:3:13",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "12878:3:13",
																																	"nodeType": "YulIdentifier",
																																	"src": "12878:3:13"
																																},
																																"nativeSrc": "12878:24:13",
																																"nodeType": "YulFunctionCall",
																																"src": "12878:24:13"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "12908:1:13",
																																		"nodeType": "YulLiteral",
																																		"src": "12908:1:13",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "12904:3:13",
																																	"nodeType": "YulIdentifier",
																																	"src": "12904:3:13"
																																},
																																"nativeSrc": "12904:6:13",
																																"nodeType": "YulFunctionCall",
																																"src": "12904:6:13"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "12874:3:13",
																															"nodeType": "YulIdentifier",
																															"src": "12874:3:13"
																														},
																														"nativeSrc": "12874:37:13",
																														"nodeType": "YulFunctionCall",
																														"src": "12874:37:13"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "12870:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "12870:3:13"
																												},
																												"nativeSrc": "12870:42:13",
																												"nodeType": "YulFunctionCall",
																												"src": "12870:42:13"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "12855:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "12855:3:13"
																										},
																										"nativeSrc": "12855:58:13",
																										"nodeType": "YulFunctionCall",
																										"src": "12855:58:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "12840:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "12840:6:13"
																								},
																								"nativeSrc": "12840:74:13",
																								"nodeType": "YulFunctionCall",
																								"src": "12840:74:13"
																							},
																							"nativeSrc": "12840:74:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "12840:74:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "12733:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "12733:7:13"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "12742:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "12742:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "12730:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "12730:2:13"
																					},
																					"nativeSrc": "12730:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "12730:19:13"
																				},
																				"nativeSrc": "12727:201:13",
																				"nodeType": "YulIf",
																				"src": "12727:201:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "12948:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "12948:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "12962:1:13",
																											"nodeType": "YulLiteral",
																											"src": "12962:1:13",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "12965:6:13",
																											"nodeType": "YulIdentifier",
																											"src": "12965:6:13"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "12958:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "12958:3:13"
																									},
																									"nativeSrc": "12958:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "12958:14:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "12974:1:13",
																									"nodeType": "YulLiteral",
																									"src": "12974:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "12954:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "12954:3:13"
																							},
																							"nativeSrc": "12954:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "12954:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "12941:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "12941:6:13"
																					},
																					"nativeSrc": "12941:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "12941:36:13"
																				},
																				"nativeSrc": "12941:36:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "12941:36:13"
																			}
																		]
																	},
																	"nativeSrc": "12324:663:13",
																	"nodeType": "YulCase",
																	"src": "12324:663:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12329:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12329:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "13004:234:13",
																		"nodeType": "YulBlock",
																		"src": "13004:234:13",
																		"statements": [
																			{
																				"nativeSrc": "13018:14:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13018:14:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "13031:1:13",
																					"nodeType": "YulLiteral",
																					"src": "13031:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "13022:5:13",
																						"nodeType": "YulTypedName",
																						"src": "13022:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "13067:67:13",
																					"nodeType": "YulBlock",
																					"src": "13067:67:13",
																					"statements": [
																						{
																							"nativeSrc": "13085:35:13",
																							"nodeType": "YulAssignment",
																							"src": "13085:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "13104:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "13104:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "13109:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "13109:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "13100:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "13100:3:13"
																										},
																										"nativeSrc": "13100:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "13100:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "13094:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "13094:5:13"
																								},
																								"nativeSrc": "13094:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "13094:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "13085:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "13085:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "13048:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "13048:6:13"
																				},
																				"nativeSrc": "13045:89:13",
																				"nodeType": "YulIf",
																				"src": "13045:89:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "13154:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "13154:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "13213:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "13213:5:13"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "13220:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "13220:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "13160:52:13",
																								"nodeType": "YulIdentifier",
																								"src": "13160:52:13"
																							},
																							"nativeSrc": "13160:67:13",
																							"nodeType": "YulFunctionCall",
																							"src": "13160:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "13147:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "13147:6:13"
																					},
																					"nativeSrc": "13147:81:13",
																					"nodeType": "YulFunctionCall",
																					"src": "13147:81:13"
																				},
																				"nativeSrc": "13147:81:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "13147:81:13"
																			}
																		]
																	},
																	"nativeSrc": "12996:242:13",
																	"nodeType": "YulCase",
																	"src": "12996:242:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "12304:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12304:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12312:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12312:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12301:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "12301:2:13"
																},
																"nativeSrc": "12301:14:13",
																"nodeType": "YulFunctionCall",
																"src": "12301:14:13"
															},
															"nativeSrc": "12294:944:13",
															"nodeType": "YulSwitch",
															"src": "12294:944:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "11899:1345:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "11980:4:13",
														"nodeType": "YulTypedName",
														"src": "11980:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "11986:3:13",
														"nodeType": "YulTypedName",
														"src": "11986:3:13",
														"type": ""
													}
												],
												"src": "11899:1345:13"
											},
											{
												"body": {
													"nativeSrc": "13434:232:13",
													"nodeType": "YulBlock",
													"src": "13434:232:13",
													"statements": [
														{
															"nativeSrc": "13444:27:13",
															"nodeType": "YulAssignment",
															"src": "13444:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13456:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13456:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13467:3:13",
																		"nodeType": "YulLiteral",
																		"src": "13467:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13452:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13452:3:13"
																},
																"nativeSrc": "13452:19:13",
																"nodeType": "YulFunctionCall",
																"src": "13452:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13444:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13444:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13487:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13487:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "13502:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "13502:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "13518:3:13",
																								"nodeType": "YulLiteral",
																								"src": "13518:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "13523:1:13",
																								"nodeType": "YulLiteral",
																								"src": "13523:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "13514:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "13514:3:13"
																						},
																						"nativeSrc": "13514:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "13514:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13527:1:13",
																						"nodeType": "YulLiteral",
																						"src": "13527:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "13510:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "13510:3:13"
																				},
																				"nativeSrc": "13510:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "13510:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13498:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13498:3:13"
																		},
																		"nativeSrc": "13498:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13498:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13480:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13480:6:13"
																},
																"nativeSrc": "13480:51:13",
																"nodeType": "YulFunctionCall",
																"src": "13480:51:13"
															},
															"nativeSrc": "13480:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "13480:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13551:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13551:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13562:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13562:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13547:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13547:3:13"
																		},
																		"nativeSrc": "13547:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13547:18:13"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "13567:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13567:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13540:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13540:6:13"
																},
																"nativeSrc": "13540:34:13",
																"nodeType": "YulFunctionCall",
																"src": "13540:34:13"
															},
															"nativeSrc": "13540:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "13540:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13594:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13594:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13605:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13605:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13590:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13590:3:13"
																		},
																		"nativeSrc": "13590:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13590:18:13"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "13610:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13610:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13583:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13583:6:13"
																},
																"nativeSrc": "13583:34:13",
																"nodeType": "YulFunctionCall",
																"src": "13583:34:13"
															},
															"nativeSrc": "13583:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "13583:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13637:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13637:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13648:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13648:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13633:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13633:3:13"
																		},
																		"nativeSrc": "13633:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13633:18:13"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "13653:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13653:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13626:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13626:6:13"
																},
																"nativeSrc": "13626:34:13",
																"nodeType": "YulFunctionCall",
																"src": "13626:34:13"
															},
															"nativeSrc": "13626:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "13626:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13249:417:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13379:9:13",
														"nodeType": "YulTypedName",
														"src": "13379:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "13390:6:13",
														"nodeType": "YulTypedName",
														"src": "13390:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13398:6:13",
														"nodeType": "YulTypedName",
														"src": "13398:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13406:6:13",
														"nodeType": "YulTypedName",
														"src": "13406:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13414:6:13",
														"nodeType": "YulTypedName",
														"src": "13414:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13425:4:13",
														"nodeType": "YulTypedName",
														"src": "13425:4:13",
														"type": ""
													}
												],
												"src": "13249:417:13"
											},
											{
												"body": {
													"nativeSrc": "13719:77:13",
													"nodeType": "YulBlock",
													"src": "13719:77:13",
													"statements": [
														{
															"nativeSrc": "13729:16:13",
															"nodeType": "YulAssignment",
															"src": "13729:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13740:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "13740:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13743:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "13743:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13736:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13736:3:13"
																},
																"nativeSrc": "13736:9:13",
																"nodeType": "YulFunctionCall",
																"src": "13736:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13729:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13729:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13768:22:13",
																"nodeType": "YulBlock",
																"src": "13768:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13770:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "13770:16:13"
																			},
																			"nativeSrc": "13770:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "13770:18:13"
																		},
																		"nativeSrc": "13770:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "13770:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13760:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "13760:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13763:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13763:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13757:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "13757:2:13"
																},
																"nativeSrc": "13757:10:13",
																"nodeType": "YulFunctionCall",
																"src": "13757:10:13"
															},
															"nativeSrc": "13754:36:13",
															"nodeType": "YulIf",
															"src": "13754:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13671:125:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13702:1:13",
														"nodeType": "YulTypedName",
														"src": "13702:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13705:1:13",
														"nodeType": "YulTypedName",
														"src": "13705:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13711:3:13",
														"nodeType": "YulTypedName",
														"src": "13711:3:13",
														"type": ""
													}
												],
												"src": "13671:125:13"
											},
											{
												"body": {
													"nativeSrc": "14030:236:13",
													"nodeType": "YulBlock",
													"src": "14030:236:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14047:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14047:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14058:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14058:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14040:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14040:6:13"
																},
																"nativeSrc": "14040:21:13",
																"nodeType": "YulFunctionCall",
																"src": "14040:21:13"
															},
															"nativeSrc": "14040:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "14040:21:13"
														},
														{
															"nativeSrc": "14070:70:13",
															"nodeType": "YulVariableDeclaration",
															"src": "14070:70:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14113:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14113:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14125:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14125:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14136:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14136:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14121:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14121:3:13"
																		},
																		"nativeSrc": "14121:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14121:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nativeSrc": "14084:28:13",
																	"nodeType": "YulIdentifier",
																	"src": "14084:28:13"
																},
																"nativeSrc": "14084:56:13",
																"nodeType": "YulFunctionCall",
																"src": "14084:56:13"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "14074:6:13",
																	"nodeType": "YulTypedName",
																	"src": "14074:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14160:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14160:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14171:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14171:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14156:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14156:3:13"
																		},
																		"nativeSrc": "14156:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14156:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "14180:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "14180:6:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14188:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14188:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14176:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14176:3:13"
																		},
																		"nativeSrc": "14176:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14176:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14149:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14149:6:13"
																},
																"nativeSrc": "14149:50:13",
																"nodeType": "YulFunctionCall",
																"src": "14149:50:13"
															},
															"nativeSrc": "14149:50:13",
															"nodeType": "YulExpressionStatement",
															"src": "14149:50:13"
														},
														{
															"nativeSrc": "14208:52:13",
															"nodeType": "YulAssignment",
															"src": "14208:52:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14245:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14245:6:13"
																	},
																	{
																		"name": "tail_1",
																		"nativeSrc": "14253:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14253:6:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nativeSrc": "14216:28:13",
																	"nodeType": "YulIdentifier",
																	"src": "14216:28:13"
																},
																"nativeSrc": "14216:44:13",
																"nodeType": "YulFunctionCall",
																"src": "14216:44:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14208:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14208:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "13801:465:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13991:9:13",
														"nodeType": "YulTypedName",
														"src": "13991:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14002:6:13",
														"nodeType": "YulTypedName",
														"src": "14002:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14010:6:13",
														"nodeType": "YulTypedName",
														"src": "14010:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14021:4:13",
														"nodeType": "YulTypedName",
														"src": "14021:4:13",
														"type": ""
													}
												],
												"src": "13801:465:13"
											},
											{
												"body": {
													"nativeSrc": "14502:330:13",
													"nodeType": "YulBlock",
													"src": "14502:330:13",
													"statements": [
														{
															"nativeSrc": "14512:29:13",
															"nodeType": "YulVariableDeclaration",
															"src": "14512:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "14530:3:13",
																				"nodeType": "YulLiteral",
																				"src": "14530:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14535:1:13",
																				"nodeType": "YulLiteral",
																				"src": "14535:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "14526:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14526:3:13"
																		},
																		"nativeSrc": "14526:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14526:11:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14539:1:13",
																		"nodeType": "YulLiteral",
																		"src": "14539:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "14522:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14522:3:13"
																},
																"nativeSrc": "14522:19:13",
																"nodeType": "YulFunctionCall",
																"src": "14522:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "14516:2:13",
																	"nodeType": "YulTypedName",
																	"src": "14516:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14557:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14557:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "14572:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "14572:6:13"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "14580:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "14580:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14568:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14568:3:13"
																		},
																		"nativeSrc": "14568:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14568:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14550:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14550:6:13"
																},
																"nativeSrc": "14550:34:13",
																"nodeType": "YulFunctionCall",
																"src": "14550:34:13"
															},
															"nativeSrc": "14550:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "14550:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14604:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14604:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14615:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14615:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14600:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14600:3:13"
																		},
																		"nativeSrc": "14600:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14600:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "14624:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "14624:6:13"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "14632:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "14632:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14620:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14620:3:13"
																		},
																		"nativeSrc": "14620:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14620:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14593:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14593:6:13"
																},
																"nativeSrc": "14593:43:13",
																"nodeType": "YulFunctionCall",
																"src": "14593:43:13"
															},
															"nativeSrc": "14593:43:13",
															"nodeType": "YulExpressionStatement",
															"src": "14593:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14656:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14656:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14667:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14667:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14652:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14652:3:13"
																		},
																		"nativeSrc": "14652:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14652:18:13"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "14672:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14672:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14645:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14645:6:13"
																},
																"nativeSrc": "14645:34:13",
																"nodeType": "YulFunctionCall",
																"src": "14645:34:13"
															},
															"nativeSrc": "14645:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "14645:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14699:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14699:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14710:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14710:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14695:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14695:3:13"
																		},
																		"nativeSrc": "14695:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14695:18:13"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "14715:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14715:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14688:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14688:6:13"
																},
																"nativeSrc": "14688:34:13",
																"nodeType": "YulFunctionCall",
																"src": "14688:34:13"
															},
															"nativeSrc": "14688:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "14688:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14742:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14742:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14753:3:13",
																				"nodeType": "YulLiteral",
																				"src": "14753:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14738:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14738:3:13"
																		},
																		"nativeSrc": "14738:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14738:19:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14759:3:13",
																		"nodeType": "YulLiteral",
																		"src": "14759:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14731:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14731:6:13"
																},
																"nativeSrc": "14731:32:13",
																"nodeType": "YulFunctionCall",
																"src": "14731:32:13"
															},
															"nativeSrc": "14731:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "14731:32:13"
														},
														{
															"nativeSrc": "14772:54:13",
															"nodeType": "YulAssignment",
															"src": "14772:54:13",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "14798:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14798:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14810:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14810:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14821:3:13",
																				"nodeType": "YulLiteral",
																				"src": "14821:3:13",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14806:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14806:3:13"
																		},
																		"nativeSrc": "14806:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14806:19:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "14780:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "14780:17:13"
																},
																"nativeSrc": "14780:46:13",
																"nodeType": "YulFunctionCall",
																"src": "14780:46:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14772:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14772:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "14271:561:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14439:9:13",
														"nodeType": "YulTypedName",
														"src": "14439:9:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "14450:6:13",
														"nodeType": "YulTypedName",
														"src": "14450:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "14458:6:13",
														"nodeType": "YulTypedName",
														"src": "14458:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14466:6:13",
														"nodeType": "YulTypedName",
														"src": "14466:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14474:6:13",
														"nodeType": "YulTypedName",
														"src": "14474:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14482:6:13",
														"nodeType": "YulTypedName",
														"src": "14482:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14493:4:13",
														"nodeType": "YulTypedName",
														"src": "14493:4:13",
														"type": ""
													}
												],
												"src": "14271:561:13"
											},
											{
												"body": {
													"nativeSrc": "14917:169:13",
													"nodeType": "YulBlock",
													"src": "14917:169:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "14963:16:13",
																"nodeType": "YulBlock",
																"src": "14963:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14972:1:13",
																					"nodeType": "YulLiteral",
																					"src": "14972:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14975:1:13",
																					"nodeType": "YulLiteral",
																					"src": "14975:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14965:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "14965:6:13"
																			},
																			"nativeSrc": "14965:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14965:12:13"
																		},
																		"nativeSrc": "14965:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "14965:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14938:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "14938:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14947:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14947:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14934:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14934:3:13"
																		},
																		"nativeSrc": "14934:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14934:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14959:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14959:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14930:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14930:3:13"
																},
																"nativeSrc": "14930:32:13",
																"nodeType": "YulFunctionCall",
																"src": "14930:32:13"
															},
															"nativeSrc": "14927:52:13",
															"nodeType": "YulIf",
															"src": "14927:52:13"
														},
														{
															"nativeSrc": "14988:29:13",
															"nodeType": "YulVariableDeclaration",
															"src": "14988:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15007:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "15007:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15001:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "15001:5:13"
																},
																"nativeSrc": "15001:16:13",
																"nodeType": "YulFunctionCall",
																"src": "15001:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "14992:5:13",
																	"nodeType": "YulTypedName",
																	"src": "14992:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15050:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "15050:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "15026:23:13",
																	"nodeType": "YulIdentifier",
																	"src": "15026:23:13"
																},
																"nativeSrc": "15026:30:13",
																"nodeType": "YulFunctionCall",
																"src": "15026:30:13"
															},
															"nativeSrc": "15026:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "15026:30:13"
														},
														{
															"nativeSrc": "15065:15:13",
															"nodeType": "YulAssignment",
															"src": "15065:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "15075:5:13",
																"nodeType": "YulIdentifier",
																"src": "15075:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "15065:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15065:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "14837:249:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14883:9:13",
														"nodeType": "YulTypedName",
														"src": "14883:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14894:7:13",
														"nodeType": "YulTypedName",
														"src": "14894:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14906:6:13",
														"nodeType": "YulTypedName",
														"src": "14906:6:13",
														"type": ""
													}
												],
												"src": "14837:249:13"
											},
											{
												"body": {
													"nativeSrc": "15422:496:13",
													"nodeType": "YulBlock",
													"src": "15422:496:13",
													"statements": [
														{
															"nativeSrc": "15432:29:13",
															"nodeType": "YulVariableDeclaration",
															"src": "15432:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "15450:3:13",
																				"nodeType": "YulLiteral",
																				"src": "15450:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15455:1:13",
																				"nodeType": "YulLiteral",
																				"src": "15455:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "15446:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15446:3:13"
																		},
																		"nativeSrc": "15446:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15446:11:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15459:1:13",
																		"nodeType": "YulLiteral",
																		"src": "15459:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "15442:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15442:3:13"
																},
																"nativeSrc": "15442:19:13",
																"nodeType": "YulFunctionCall",
																"src": "15442:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "15436:2:13",
																	"nodeType": "YulTypedName",
																	"src": "15436:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15477:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "15477:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "15492:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "15492:6:13"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "15500:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "15500:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15488:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15488:3:13"
																		},
																		"nativeSrc": "15488:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15488:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15470:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15470:6:13"
																},
																"nativeSrc": "15470:34:13",
																"nodeType": "YulFunctionCall",
																"src": "15470:34:13"
															},
															"nativeSrc": "15470:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "15470:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15524:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15524:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15535:2:13",
																				"nodeType": "YulLiteral",
																				"src": "15535:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15520:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15520:3:13"
																		},
																		"nativeSrc": "15520:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15520:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "15544:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "15544:6:13"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "15552:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "15552:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15540:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15540:3:13"
																		},
																		"nativeSrc": "15540:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15540:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15513:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15513:6:13"
																},
																"nativeSrc": "15513:43:13",
																"nodeType": "YulFunctionCall",
																"src": "15513:43:13"
															},
															"nativeSrc": "15513:43:13",
															"nodeType": "YulExpressionStatement",
															"src": "15513:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15576:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15576:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15587:2:13",
																				"nodeType": "YulLiteral",
																				"src": "15587:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15572:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15572:3:13"
																		},
																		"nativeSrc": "15572:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15572:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15592:3:13",
																		"nodeType": "YulLiteral",
																		"src": "15592:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15565:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15565:6:13"
																},
																"nativeSrc": "15565:31:13",
																"nodeType": "YulFunctionCall",
																"src": "15565:31:13"
															},
															"nativeSrc": "15565:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "15565:31:13"
														},
														{
															"nativeSrc": "15605:71:13",
															"nodeType": "YulVariableDeclaration",
															"src": "15605:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15648:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "15648:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15660:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15660:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15671:3:13",
																				"nodeType": "YulLiteral",
																				"src": "15671:3:13",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15656:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15656:3:13"
																		},
																		"nativeSrc": "15656:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15656:19:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nativeSrc": "15619:28:13",
																	"nodeType": "YulIdentifier",
																	"src": "15619:28:13"
																},
																"nativeSrc": "15619:57:13",
																"nodeType": "YulFunctionCall",
																"src": "15619:57:13"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "15609:6:13",
																	"nodeType": "YulTypedName",
																	"src": "15609:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15696:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15696:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15707:2:13",
																				"nodeType": "YulLiteral",
																				"src": "15707:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15692:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15692:3:13"
																		},
																		"nativeSrc": "15692:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15692:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "15716:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "15716:6:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15724:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15724:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15712:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15712:3:13"
																		},
																		"nativeSrc": "15712:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15712:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15685:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15685:6:13"
																},
																"nativeSrc": "15685:50:13",
																"nodeType": "YulFunctionCall",
																"src": "15685:50:13"
															},
															"nativeSrc": "15685:50:13",
															"nodeType": "YulExpressionStatement",
															"src": "15685:50:13"
														},
														{
															"nativeSrc": "15744:58:13",
															"nodeType": "YulVariableDeclaration",
															"src": "15744:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "15787:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "15787:6:13"
																	},
																	{
																		"name": "tail_1",
																		"nativeSrc": "15795:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "15795:6:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nativeSrc": "15758:28:13",
																	"nodeType": "YulIdentifier",
																	"src": "15758:28:13"
																},
																"nativeSrc": "15758:44:13",
																"nodeType": "YulFunctionCall",
																"src": "15758:44:13"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nativeSrc": "15748:6:13",
																	"nodeType": "YulTypedName",
																	"src": "15748:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15822:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15822:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15833:3:13",
																				"nodeType": "YulLiteral",
																				"src": "15833:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15818:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15818:3:13"
																		},
																		"nativeSrc": "15818:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15818:19:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nativeSrc": "15843:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "15843:6:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15851:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15851:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15839:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15839:3:13"
																		},
																		"nativeSrc": "15839:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15839:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15811:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15811:6:13"
																},
																"nativeSrc": "15811:51:13",
																"nodeType": "YulFunctionCall",
																"src": "15811:51:13"
															},
															"nativeSrc": "15811:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "15811:51:13"
														},
														{
															"nativeSrc": "15871:41:13",
															"nodeType": "YulAssignment",
															"src": "15871:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "15897:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "15897:6:13"
																	},
																	{
																		"name": "tail_2",
																		"nativeSrc": "15905:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "15905:6:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "15879:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "15879:17:13"
																},
																"nativeSrc": "15879:33:13",
																"nodeType": "YulFunctionCall",
																"src": "15879:33:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15871:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15871:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "15091:827:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15359:9:13",
														"nodeType": "YulTypedName",
														"src": "15359:9:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "15370:6:13",
														"nodeType": "YulTypedName",
														"src": "15370:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "15378:6:13",
														"nodeType": "YulTypedName",
														"src": "15378:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15386:6:13",
														"nodeType": "YulTypedName",
														"src": "15386:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15394:6:13",
														"nodeType": "YulTypedName",
														"src": "15394:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15402:6:13",
														"nodeType": "YulTypedName",
														"src": "15402:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15413:4:13",
														"nodeType": "YulTypedName",
														"src": "15413:4:13",
														"type": ""
													}
												],
												"src": "15091:827:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, 0x20)\n        let srcPtr := add(value, 0x20)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, 0x20)\n        let srcEnd := add(add(offset, shl(5, _1)), 0x20)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, 0x20)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_string(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_array_address_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, 0x20)\n        let srcEnd := add(add(offset, shl(5, _1)), 0x20)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, 0x20)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value4 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100ee575f3560e01c8062fdd58e146100f257806301ffc9a71461011857806302fe53051461013b57806306fdde03146101505780630a1e88d1146101655780630e89341c1461018557806317d70f7c146101985780632eb2c2d6146101a05780634e1273f4146101b3578063715018a6146101c65780638da5cb5b146101ce57806395d89b41146101e3578063a22cb465146101eb578063a7fd4a02146101fe578063ba7aef4314610211578063c87b56dd14610224578063e985e9c514610237578063f242432a1461024a578063f2fde38b1461025d575b5f80fd5b610105610100366004610f5d565b610270565b6040519081526020015b60405180910390f35b61012b610126366004610f9a565b610297565b604051901515815260200161010f565b61014e61014936600461106b565b6102e6565b005b6101586102fa565b60405161010f91906110ca565b6101786101733660046110dc565b61038a565b60405161010f9190611168565b61015861019336600461117a565b61044e565b600454610105565b61014e6101ae36600461121f565b6104e0565b6101786101c1366004611324565b610541565b61014e610607565b6101d661061a565b60405161010f9190611383565b610158610629565b61014e6101f9366004611397565b610638565b61017861020c3660046113d0565b610647565b61010561021f3660046110dc565b61071b565b61015861023236600461117a565b610766565b61012b610245366004611426565b610782565b61014e610258366004611457565b6107af565b61014e61026b3660046114b6565b6107ff565b5f818152602081815260408083206001600160a01b03861684529091529020545b92915050565b5f6001600160e01b03198216636cdb3d1360e11b14806102c757506001600160e01b031982166303a24d0760e21b145b8061029157506301ffc9a760e01b6001600160e01b0319831614610291565b6102ee610839565b6102f78161086b565b50565b606060058054610309906114cf565b80601f0160208091040260200160405190810160405280929190818152602001828054610335906114cf565b80156103805780601f1061035757610100808354040283529160200191610380565b820191905f5260205f20905b81548152906001019060200180831161036357829003601f168201915b5050505050905090565b6060610394610839565b5f826001600160401b038111156103ad576103ad610fbc565b6040519080825280602002602001820160405280156103d6578160200160208202803683370190505b5090505f5b8381101561044557600480545f91826103f38361151b565b9190505590506104148782600160405180602001604052805f815250610877565b61041e81876108bd565b8083838151811061043157610431611533565b6020908102919091010152506001016103db565b50949350505050565b60606002805461045d906114cf565b80601f0160208091040260200160405190810160405280929190818152602001828054610489906114cf565b80156104d45780601f106104ab576101008083540402835291602001916104d4565b820191905f5260205f20905b8154815290600101906020018083116104b757829003601f168201915b50505050509050919050565b336001600160a01b038616811480159061050157506104ff8682610782565b155b1561052c57808660405163711bec9160e11b8152600401610523929190611547565b60405180910390fd5b61053986868686866108d9565b505050505050565b606081518351146105725781518351604051635b05999160e01b815260048101929092526024820152604401610523565b5f83516001600160401b0381111561058c5761058c610fbc565b6040519080825280602002602001820160405280156105b5578160200160208202803683370190505b5090505f5b84518110156105ff576105da6105d0868361093e565b610100868461093e565b8282815181106105ec576105ec611533565b60209081029190910101526001016105ba565b509392505050565b61060f610839565b6106185f61094c565b565b6003546001600160a01b031690565b606060068054610309906114cf565b61064333838361099d565b5050565b6060610651610839565b5f826001600160401b0381111561066a5761066a610fbc565b604051908082528060200260200182016040528015610693578160200160208202803683370190505b5090505f5b8381101561044557600480545f91826106b08361151b565b9190505590506106ea8783815181106106cb576106cb611533565b602002602001015182600160405180602001604052805f815250610877565b6106f481876108bd565b8083838151811061070757610707611533565b602090810291909101015250600101610698565b5f610724610839565b600480545f91826107348361151b565b91905055905061075485828560405180602001604052805f815250610877565b61075e81856108bd565b949350505050565b5f81815260076020526040902080546060919061045d906114cf565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205460ff1690565b336001600160a01b03861681148015906107d057506107ce8682610782565b155b156107f257808660405163711bec9160e11b8152600401610523929190611547565b6105398686868686610a31565b610807610839565b6001600160a01b038116610830575f604051631e4fbdf760e01b81526004016105239190611383565b6102f78161094c565b3361084261061a565b6001600160a01b031614610618573360405163118cdaa760e01b81526004016105239190611383565b600261064382826115a5565b6001600160a01b0384166108a0575f604051632bfa23e760e11b81526004016105239190611383565b5f806108ac8585610aa8565b915091506105395f87848487610ad0565b5f8281526007602052604090206108d482826115a5565b505050565b6001600160a01b038416610902575f604051632bfa23e760e11b81526004016105239190611383565b6001600160a01b03851661092a575f604051626a0d4560e21b81526004016105239190611383565b6109378585858585610ad0565b5050505050565b602090810291909101015190565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0382166109c5575f60405162ced3e160e81b81526004016105239190611383565b6001600160a01b038381165f81815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610a5a575f604051632bfa23e760e11b81526004016105239190611383565b6001600160a01b038516610a82575f604051626a0d4560e21b81526004016105239190611383565b5f80610a8e8585610aa8565b91509150610a9f8787848487610ad0565b50505050505050565b6040805160018082526020820194909452808201938452606081019290925260808201905291565b610adc85858585610b33565b6001600160a01b038416156109375782513390600103610b25575f610b01858261093e565b90505f610b0e858261093e565b9050610b1e838989858589610d55565b5050610539565b610539818787878787610e64565b8051825114610b625781518151604051635b05999160e01b815260048101929092526024820152604401610523565b335f5b8351811015610c6c575f610b79858361093e565b90505f610b86858461093e565b90506001600160a01b03881615610c1e575f828152602081815260408083206001600160a01b038c16845290915290205481811015610bf8576040516303dee4c560e01b81526001600160a01b038a166004820152602481018290526044810183905260648101849052608401610523565b5f838152602081815260408083206001600160a01b038d16845290915290209082900390555b6001600160a01b03871615610c62575f828152602081815260408083206001600160a01b038b16845290915281208054839290610c5c908490611660565b90915550505b5050600101610b65565b508251600103610cf7575f610c81848261093e565b90505f610c8e848261093e565b9050856001600160a01b0316876001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051610ce8929190918252602082015260400190565b60405180910390a45050610937565b836001600160a01b0316856001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610d46929190611673565b60405180910390a45050505050565b6001600160a01b0384163b156105395760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610d9990899089908890889088906004016116a0565b6020604051808303815f875af1925050508015610dd3575060408051601f3d908101601f19168201909252610dd0918101906116e4565b60015b610e31573d808015610e00576040519150601f19603f3d011682016040523d82523d5f602084013e610e05565b606091505b5080515f03610e295784604051632bfa23e760e11b81526004016105239190611383565b805181602001fd5b6001600160e01b0319811663f23a6e6160e01b14610a9f5784604051632bfa23e760e11b81526004016105239190611383565b6001600160a01b0384163b156105395760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610ea890899089908890889088906004016116ff565b6020604051808303815f875af1925050508015610ee2575060408051601f3d908101601f19168201909252610edf918101906116e4565b60015b610f0f573d808015610e00576040519150601f19603f3d011682016040523d82523d5f602084013e610e05565b6001600160e01b0319811663bc197c8160e01b14610a9f5784604051632bfa23e760e11b81526004016105239190611383565b80356001600160a01b0381168114610f58575f80fd5b919050565b5f8060408385031215610f6e575f80fd5b610f7783610f42565b946020939093013593505050565b6001600160e01b0319811681146102f7575f80fd5b5f60208284031215610faa575f80fd5b8135610fb581610f85565b9392505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f191681016001600160401b0381118282101715610ff857610ff8610fbc565b604052919050565b5f82601f83011261100f575f80fd5b81356001600160401b0381111561102857611028610fbc565b61103b601f8201601f1916602001610fd0565b81815284602083860101111561104f575f80fd5b816020850160208301375f918101602001919091529392505050565b5f6020828403121561107b575f80fd5b81356001600160401b03811115611090575f80fd5b61075e84828501611000565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610fb5602083018461109c565b5f805f606084860312156110ee575f80fd5b6110f784610f42565b925060208401356001600160401b03811115611111575f80fd5b61111d86828701611000565b925050604084013590509250925092565b5f815180845260208085019450602084015f5b8381101561115d57815187529582019590820190600101611141565b509495945050505050565b602081525f610fb5602083018461112e565b5f6020828403121561118a575f80fd5b5035919050565b5f6001600160401b038211156111a9576111a9610fbc565b5060051b60200190565b5f82601f8301126111c2575f80fd5b813560206111d76111d283611191565b610fd0565b8083825260208201915060208460051b8701019350868411156111f8575f80fd5b602086015b8481101561121457803583529183019183016111fd565b509695505050505050565b5f805f805f60a08688031215611233575f80fd5b61123c86610f42565b945061124a60208701610f42565b935060408601356001600160401b0380821115611265575f80fd5b61127189838a016111b3565b94506060880135915080821115611286575f80fd5b61129289838a016111b3565b935060808801359150808211156112a7575f80fd5b506112b488828901611000565b9150509295509295909350565b5f82601f8301126112d0575f80fd5b813560206112e06111d283611191565b8083825260208201915060208460051b870101935086841115611301575f80fd5b602086015b848110156112145761131781610f42565b8352918301918301611306565b5f8060408385031215611335575f80fd5b82356001600160401b038082111561134b575f80fd5b611357868387016112c1565b9350602085013591508082111561136c575f80fd5b50611379858286016111b3565b9150509250929050565b6001600160a01b0391909116815260200190565b5f80604083850312156113a8575f80fd5b6113b183610f42565b9150602083013580151581146113c5575f80fd5b809150509250929050565b5f805f606084860312156113e2575f80fd5b83356001600160401b03808211156113f8575f80fd5b611404878388016112c1565b94506020860135915080821115611419575f80fd5b5061111d86828701611000565b5f8060408385031215611437575f80fd5b61144083610f42565b915061144e60208401610f42565b90509250929050565b5f805f805f60a0868803121561146b575f80fd5b61147486610f42565b945061148260208701610f42565b9350604086013592506060860135915060808601356001600160401b038111156114aa575f80fd5b6112b488828901611000565b5f602082840312156114c6575f80fd5b610fb582610f42565b600181811c908216806114e357607f821691505b60208210810361150157634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b5f6001820161152c5761152c611507565b5060010190565b634e487b7160e01b5f52603260045260245ffd5b6001600160a01b0392831681529116602082015260400190565b601f8211156108d457805f5260205f20601f840160051c810160208510156115865750805b601f840160051c820191505b81811015610937575f8155600101611592565b81516001600160401b038111156115be576115be610fbc565b6115d2816115cc84546114cf565b84611561565b602080601f831160018114611605575f84156115ee5750858301515b5f19600386901b1c1916600185901b178555610539565b5f85815260208120601f198616915b8281101561163357888601518255948401946001909101908401611614565b508582101561165057878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b8082018082111561029157610291611507565b604081525f611685604083018561112e565b8281036020840152611697818561112e565b95945050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190525f906116d99083018461109c565b979650505050505050565b5f602082840312156116f4575f80fd5b8151610fb581610f85565b6001600160a01b0386811682528516602082015260a0604082018190525f9061172a9083018661112e565b828103606084015261173c818661112e565b90508281036080840152611750818561109c565b9897505050505050505056fea2646970667358221220c16ce25c1fc7aa4bc1065d5ba2a04c0d27e9a3767e90f4645f81764f28ded85964736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xFDD58E EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0xA1E88D1 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x17D70F7C EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xA7FD4A02 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xBA7AEF43 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x25D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x105 PUSH2 0x100 CALLDATASIZE PUSH1 0x4 PUSH2 0xF5D JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH2 0x126 CALLDATASIZE PUSH1 0x4 PUSH2 0xF9A JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH2 0x14E PUSH2 0x149 CALLDATASIZE PUSH1 0x4 PUSH2 0x106B JUMP JUMPDEST PUSH2 0x2E6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x158 PUSH2 0x2FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x10CA JUMP JUMPDEST PUSH2 0x178 PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0x10DC JUMP JUMPDEST PUSH2 0x38A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x1168 JUMP JUMPDEST PUSH2 0x158 PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0x117A JUMP JUMPDEST PUSH2 0x44E JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x105 JUMP JUMPDEST PUSH2 0x14E PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0x121F JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1324 JUMP JUMPDEST PUSH2 0x541 JUMP JUMPDEST PUSH2 0x14E PUSH2 0x607 JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x61A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x1383 JUMP JUMPDEST PUSH2 0x158 PUSH2 0x629 JUMP JUMPDEST PUSH2 0x14E PUSH2 0x1F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1397 JUMP JUMPDEST PUSH2 0x638 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x20C CALLDATASIZE PUSH1 0x4 PUSH2 0x13D0 JUMP JUMPDEST PUSH2 0x647 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0x10DC JUMP JUMPDEST PUSH2 0x71B JUMP JUMPDEST PUSH2 0x158 PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0x117A JUMP JUMPDEST PUSH2 0x766 JUMP JUMPDEST PUSH2 0x12B PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x1426 JUMP JUMPDEST PUSH2 0x782 JUMP JUMPDEST PUSH2 0x14E PUSH2 0x258 CALLDATASIZE PUSH1 0x4 PUSH2 0x1457 JUMP JUMPDEST PUSH2 0x7AF JUMP JUMPDEST PUSH2 0x14E PUSH2 0x26B CALLDATASIZE PUSH1 0x4 PUSH2 0x14B6 JUMP JUMPDEST PUSH2 0x7FF JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x2C7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x291 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x291 JUMP JUMPDEST PUSH2 0x2EE PUSH2 0x839 JUMP JUMPDEST PUSH2 0x2F7 DUP2 PUSH2 0x86B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x309 SWAP1 PUSH2 0x14CF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x335 SWAP1 PUSH2 0x14CF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x380 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x357 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x380 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x363 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x394 PUSH2 0x839 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3AD JUMPI PUSH2 0x3AD PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3D6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x445 JUMPI PUSH1 0x4 DUP1 SLOAD PUSH0 SWAP2 DUP3 PUSH2 0x3F3 DUP4 PUSH2 0x151B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x414 DUP8 DUP3 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x877 JUMP JUMPDEST PUSH2 0x41E DUP2 DUP8 PUSH2 0x8BD JUMP JUMPDEST DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x431 JUMPI PUSH2 0x431 PUSH2 0x1533 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x3DB JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x45D SWAP1 PUSH2 0x14CF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x489 SWAP1 PUSH2 0x14CF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4D4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4AB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4D4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4B7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x501 JUMPI POP PUSH2 0x4FF DUP7 DUP3 PUSH2 0x782 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x52C JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP3 SWAP2 SWAP1 PUSH2 0x1547 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x539 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x8D9 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x572 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x523 JUMP JUMPDEST PUSH0 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x58C JUMPI PUSH2 0x58C PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5B5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5FF JUMPI PUSH2 0x5DA PUSH2 0x5D0 DUP7 DUP4 PUSH2 0x93E JUMP JUMPDEST PUSH2 0x100 DUP7 DUP5 PUSH2 0x93E JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5EC JUMPI PUSH2 0x5EC PUSH2 0x1533 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x5BA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x60F PUSH2 0x839 JUMP JUMPDEST PUSH2 0x618 PUSH0 PUSH2 0x94C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x309 SWAP1 PUSH2 0x14CF JUMP JUMPDEST PUSH2 0x643 CALLER DUP4 DUP4 PUSH2 0x99D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x651 PUSH2 0x839 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x66A JUMPI PUSH2 0x66A PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x693 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x445 JUMPI PUSH1 0x4 DUP1 SLOAD PUSH0 SWAP2 DUP3 PUSH2 0x6B0 DUP4 PUSH2 0x151B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x6EA DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6CB JUMPI PUSH2 0x6CB PUSH2 0x1533 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x877 JUMP JUMPDEST PUSH2 0x6F4 DUP2 DUP8 PUSH2 0x8BD JUMP JUMPDEST DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x707 JUMPI PUSH2 0x707 PUSH2 0x1533 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x698 JUMP JUMPDEST PUSH0 PUSH2 0x724 PUSH2 0x839 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH0 SWAP2 DUP3 PUSH2 0x734 DUP4 PUSH2 0x151B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x754 DUP6 DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x877 JUMP JUMPDEST PUSH2 0x75E DUP2 DUP6 PUSH2 0x8BD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH2 0x45D SWAP1 PUSH2 0x14CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x7D0 JUMPI POP PUSH2 0x7CE DUP7 DUP3 PUSH2 0x782 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x7F2 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP3 SWAP2 SWAP1 PUSH2 0x1547 JUMP JUMPDEST PUSH2 0x539 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xA31 JUMP JUMPDEST PUSH2 0x807 PUSH2 0x839 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x830 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP2 SWAP1 PUSH2 0x1383 JUMP JUMPDEST PUSH2 0x2F7 DUP2 PUSH2 0x94C JUMP JUMPDEST CALLER PUSH2 0x842 PUSH2 0x61A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x618 JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP2 SWAP1 PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x643 DUP3 DUP3 PUSH2 0x15A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x8A0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP2 SWAP1 PUSH2 0x1383 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8AC DUP6 DUP6 PUSH2 0xAA8 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x539 PUSH0 DUP8 DUP5 DUP5 DUP8 PUSH2 0xAD0 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x8D4 DUP3 DUP3 PUSH2 0x15A5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x902 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP2 SWAP1 PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x92A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP2 SWAP1 PUSH2 0x1383 JUMP JUMPDEST PUSH2 0x937 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xAD0 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9C5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH3 0xCED3E1 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP2 SWAP1 PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xA5A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP2 SWAP1 PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xA82 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP2 SWAP1 PUSH2 0x1383 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA8E DUP6 DUP6 PUSH2 0xAA8 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xA9F DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0xAD0 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 DUP3 ADD SWAP4 DUP5 MSTORE PUSH1 0x60 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 MSTORE SWAP2 JUMP JUMPDEST PUSH2 0xADC DUP6 DUP6 DUP6 DUP6 PUSH2 0xB33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x937 JUMPI DUP3 MLOAD CALLER SWAP1 PUSH1 0x1 SUB PUSH2 0xB25 JUMPI PUSH0 PUSH2 0xB01 DUP6 DUP3 PUSH2 0x93E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xB0E DUP6 DUP3 PUSH2 0x93E JUMP JUMPDEST SWAP1 POP PUSH2 0xB1E DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0xD55 JUMP JUMPDEST POP POP PUSH2 0x539 JUMP JUMPDEST PUSH2 0x539 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xE64 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xB62 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x523 JUMP JUMPDEST CALLER PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xC6C JUMPI PUSH0 PUSH2 0xB79 DUP6 DUP4 PUSH2 0x93E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xB86 DUP6 DUP5 PUSH2 0x93E JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH2 0xC1E JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xBF8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x84 ADD PUSH2 0x523 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO PUSH2 0xC62 JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xC5C SWAP1 DUP5 SWAP1 PUSH2 0x1660 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0xB65 JUMP JUMPDEST POP DUP3 MLOAD PUSH1 0x1 SUB PUSH2 0xCF7 JUMPI PUSH0 PUSH2 0xC81 DUP5 DUP3 PUSH2 0x93E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xC8E DUP5 DUP3 PUSH2 0x93E JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xCE8 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x937 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xD46 SWAP3 SWAP2 SWAP1 PUSH2 0x1673 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x539 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xD99 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x16A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xDD3 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xDD0 SWAP2 DUP2 ADD SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xE31 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xE00 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE05 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0xE29 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP2 SWAP1 PUSH2 0x1383 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xA9F JUMPI DUP5 PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP2 SWAP1 PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x539 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xEA8 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xEE2 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xEDF SWAP2 DUP2 ADD SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xF0F JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xE00 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE05 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xA9F JUMPI DUP5 PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP2 SWAP1 PUSH2 0x1383 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF58 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF6E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF77 DUP4 PUSH2 0xF42 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x2F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFAA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFB5 DUP2 PUSH2 0xF85 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xFF8 JUMPI PUSH2 0xFF8 PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x100F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1028 JUMPI PUSH2 0x1028 PUSH2 0xFBC JUMP JUMPDEST PUSH2 0x103B PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0xFD0 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x104F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x107B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1090 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x75E DUP5 DUP3 DUP6 ADD PUSH2 0x1000 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xFB5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x109C JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10EE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10F7 DUP5 PUSH2 0xF42 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1111 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x111D DUP7 DUP3 DUP8 ADD PUSH2 0x1000 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x115D JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1141 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xFB5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x112E JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x118A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x11A9 JUMPI PUSH2 0x11A9 PUSH2 0xFBC JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x11D7 PUSH2 0x11D2 DUP4 PUSH2 0x1191 JUMP JUMPDEST PUSH2 0xFD0 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x11F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1214 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x11FD JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1233 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x123C DUP7 PUSH2 0xF42 JUMP JUMPDEST SWAP5 POP PUSH2 0x124A PUSH1 0x20 DUP8 ADD PUSH2 0xF42 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1265 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1271 DUP10 DUP4 DUP11 ADD PUSH2 0x11B3 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1286 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1292 DUP10 DUP4 DUP11 ADD PUSH2 0x11B3 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x12A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12B4 DUP9 DUP3 DUP10 ADD PUSH2 0x1000 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x12E0 PUSH2 0x11D2 DUP4 PUSH2 0x1191 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x1301 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1214 JUMPI PUSH2 0x1317 DUP2 PUSH2 0xF42 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1306 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1335 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x134B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1357 DUP7 DUP4 DUP8 ADD PUSH2 0x12C1 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x136C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1379 DUP6 DUP3 DUP7 ADD PUSH2 0x11B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13B1 DUP4 PUSH2 0xF42 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x13C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x13F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1404 DUP8 DUP4 DUP9 ADD PUSH2 0x12C1 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1419 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x111D DUP7 DUP3 DUP8 ADD PUSH2 0x1000 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1437 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1440 DUP4 PUSH2 0xF42 JUMP JUMPDEST SWAP2 POP PUSH2 0x144E PUSH1 0x20 DUP5 ADD PUSH2 0xF42 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x146B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1474 DUP7 PUSH2 0xF42 JUMP JUMPDEST SWAP5 POP PUSH2 0x1482 PUSH1 0x20 DUP8 ADD PUSH2 0xF42 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x14AA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12B4 DUP9 DUP3 DUP10 ADD PUSH2 0x1000 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFB5 DUP3 PUSH2 0xF42 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x14E3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1501 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x152C JUMPI PUSH2 0x152C PUSH2 0x1507 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x8D4 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1586 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x937 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1592 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x15BE JUMPI PUSH2 0x15BE PUSH2 0xFBC JUMP JUMPDEST PUSH2 0x15D2 DUP2 PUSH2 0x15CC DUP5 SLOAD PUSH2 0x14CF JUMP JUMPDEST DUP5 PUSH2 0x1561 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1605 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x15EE JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x539 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1633 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1614 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1650 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x291 JUMPI PUSH2 0x291 PUSH2 0x1507 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x1685 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x112E JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1697 DUP2 DUP6 PUSH2 0x112E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x16D9 SWAP1 DUP4 ADD DUP5 PUSH2 0x109C JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xFB5 DUP2 PUSH2 0xF85 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x172A SWAP1 DUP4 ADD DUP7 PUSH2 0x112E JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x173C DUP2 DUP7 PUSH2 0x112E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1750 DUP2 DUP6 PUSH2 0x109C JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 PUSH13 0xE25C1FC7AA4BC1065D5BA2A04C 0xD 0x27 0xE9 LOG3 PUSH23 0x7E90F4645F81764F28DED85964736F6C63430008190033 ",
							"sourceMap": "172:2195:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2247:132:2;;;;;;:::i;:::-;;:::i;:::-;;;597:25:13;;;585:2;570:18;2247:132:2;;;;;;;;1380:305;;;;;;:::i;:::-;;:::i;:::-;;;1184:14:13;;1177:22;1159:41;;1147:2;1132:18;1380:305:2;1019:187:13;539:87:12;;;;;;:::i;:::-;;:::i;:::-;;1972:80;;;:::i;:::-;;;;;;;:::i;1043:428::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2084:103:2:-;;;;;;:::i;:::-;;:::i;2276:89:12:-;2350:8;;2276:89;;4014:429:2;;;;;;:::i;:::-;;:::i;2536:552::-;;;;;;:::i;:::-;;:::i;2293:101:0:-;;;:::i;1638:85::-;;;:::i;:::-;;;;;;;:::i;2058:84:12:-;;;:::i;3156:144:2:-;;;;;;:::i;:::-;;:::i;1527:439:12:-;;;;;;:::i;:::-;;:::i;776:261::-;;;;;;:::i;:::-;;:::i;2148:122::-;;;;;;:::i;:::-;;:::i;3367:157:2:-;;;;;;:::i;:::-;;:::i;3591:351::-;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;2247:132:2:-;2324:7;2350:13;;;;;;;;;;;-1:-1:-1;;;;;2350:22:2;;;;;;;;;;2247:132;;;;;:::o;1380:305::-;1482:4;-1:-1:-1;;;;;;1517:41:2;;-1:-1:-1;;;1517:41:2;;:109;;-1:-1:-1;;;;;;;1574:52:2;;-1:-1:-1;;;1574:52:2;1517:109;:161;;;-1:-1:-1;;;;;;;;;;861:40:9;;;1642:36:2;762:146:9;539:87:12;1531:13:0;:11;:13::i;:::-;604:15:12::1;612:6;604:7;:15::i;:::-;539:87:::0;:::o;1972:80::-;2008:13;2040:5;2033:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1972:80;:::o;1043:428::-;1147:16;1531:13:0;:11;:13::i;:::-;1174:20:12::1;1211:5;-1:-1:-1::0;;;;;1197:20:12::1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;1197:20:12::1;;1174:43;;1231:9;1227:210;1250:5;1246:1;:9;1227:210;;;1296:8;:10:::0;;1276:17:::1;::::0;;1296:10:::1;::::0;::::1;:::i;:::-;;;;;1276:30;;1320:27;1326:2;1330:9;1341:1;1320:27;;;;;;;;;;;::::0;:5:::1;:27::i;:::-;1361:34;1374:9;1385;1361:12;:34::i;:::-;1418:9;1409:3;1413:1;1409:6;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:18;-1:-1:-1;1257:3:12::1;;1227:210;;;-1:-1:-1::0;1461:3:12;1043:428;-1:-1:-1;;;;1043:428:12:o;2084:103:2:-;2144:13;2176:4;2169:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:103;;;:::o;4014:429::-;735:10:7;-1:-1:-1;;;;;4251:14:2;;;;;;;:49;;;4270:30;4287:4;4293:6;4270:16;:30::i;:::-;4269:31;4251:49;4247:129;;;4352:6;4360:4;4323:42;;-1:-1:-1;;;4323:42:2;;;;;;;;;:::i;:::-;;;;;;;;4247:129;4385:51;4408:4;4414:2;4418:3;4423:6;4431:4;4385:22;:51::i;:::-;4198:245;4014:429;;;;;:::o;2536:552::-;2660:16;2711:3;:10;2692:8;:15;:29;2688:121;;2770:10;;2782:15;;2744:54;;-1:-1:-1;;;2744:54:2;;;;;11000:25:13;;;;11041:18;;;11034:34;10973:18;;2744:54:2;10826:248:13;2688:121:2;2819:30;2866:8;:15;-1:-1:-1;;;;;2852:30:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2852:30:2;;2819:63;;2898:9;2893:158;2917:8;:15;2913:1;:19;2893:158;;;2972:68;2982:30;:8;3010:1;2982:27;:30::i;:::-;3014:25;:3;3037:1;3014:22;:25::i;2972:68::-;2953:13;2967:1;2953:16;;;;;;;;:::i;:::-;;;;;;;;;;:87;2934:3;;2893:158;;;-1:-1:-1;3068:13:2;2536:552;-1:-1:-1;;;2536:552:2:o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1710:6;;-1:-1:-1;;;;;1710:6:0;;1638:85::o;2058:84:12:-;2096:13;2128:7;2121:14;;;;;:::i;3156:144:2:-;3241:52;735:10:7;3274:8:2;3284;3241:18;:52::i;:::-;3156:144;;:::o;1527:439:12:-;1639:16;1531:13:0;:11;:13::i;:::-;1666:20:12::1;1703:5;-1:-1:-1::0;;;;;1689:20:12::1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;1689:20:12::1;;1666:43;;1723:9;1719:213;1742:5;1738:1;:9;1719:213;;;1788:8;:10:::0;;1768:17:::1;::::0;;1788:10:::1;::::0;::::1;:::i;:::-;;;;;1768:30;;1812;1818:2;1821:1;1818:5;;;;;;;;:::i;:::-;;;;;;;1825:9;1836:1;1812:30;;;;;;;;;;;::::0;:5:::1;:30::i;:::-;1856:34;1869:9;1880;1856:12;:34::i;:::-;1913:9;1904:3;1908:1;1904:6;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:18;-1:-1:-1;1749:3:12::1;;1719:213;;776:261:::0;870:7;1531:13:0;:11;:13::i;:::-;909:8:12::1;:10:::0;;889:17:::1;::::0;;909:10:::1;::::0;::::1;:::i;:::-;;;;;889:30;;929:31;935:2;939:9;950:5;929:31;;;;;;;;;;;::::0;:5:::1;:31::i;:::-;970:34;983:9;994;970:12;:34::i;:::-;1021:9:::0;776:261;-1:-1:-1;;;;776:261:12:o;2148:122::-;2244:19;;;;:10;:19;;;;;2237:26;;2212:13;;2244:19;2237:26;;;:::i;3367:157:2:-;-1:-1:-1;;;;;3480:27:2;;;3457:4;3480:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3367:157::o;3591:351::-;735:10:7;-1:-1:-1;;;;;3757:14:2;;;;;;;:49;;;3776:30;3793:4;3799:6;3776:16;:30::i;:::-;3775:31;3757:49;3753:129;;;3858:6;3866:4;3829:42;;-1:-1:-1;;;3829:42:2;;;;;;;;;:::i;3753:129::-;3891:44;3909:4;3915:2;3919;3923:5;3930:4;3891:17;:44::i;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2700:1;2672:31;;-1:-1:-1::0;;;2672:31:0::1;;;;;;;;:::i;2623:91::-;2723:28;2742:8;2723:18;:28::i;1796:162::-:0;735:10:7;1855:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1855:23:0;;1851:101;;735:10:7;1901:40:0;;-1:-1:-1;;;1901:40:0;;;;;;;;:::i;10282:86:2:-;10348:4;:13;10355:6;10348:4;:13;:::i;10746:346::-;-1:-1:-1;;;;;10842:16:2;;10838:88;;10912:1;10881:34;;-1:-1:-1;;;10881:34:2;;;;;;;;:::i;10838:88::-;10936:20;10958:23;10985:29;11004:2;11008:5;10985:18;:29::i;:::-;10935:79;;;;11024:61;11059:1;11063:2;11067:3;11072:6;11080:4;11024:26;:61::i;637:129:12:-;728:19;;;;:10;:19;;;;;:31;750:9;728:19;:31;:::i;:::-;;637:129;;:::o;9015:445:2:-;-1:-1:-1;;;;;9208:16:2;;9204:88;;9278:1;9247:34;;-1:-1:-1;;;9247:34:2;;;;;;;;:::i;9204:88::-;-1:-1:-1;;;;;9305:18:2;;9301:88;;9375:1;9346:32;;-1:-1:-1;;;9346:32:2;;;;;;;;:::i;9301:88::-;9398:55;9425:4;9431:2;9435:3;9440:6;9448:4;9398:26;:55::i;:::-;9015:445;;;;;:::o;4603:197:6:-;4777:4;4768:14;;;4748:35;;;;;4742:42;;4603:197::o;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;13268:315:2:-;-1:-1:-1;;;;;13375:22:2;;13371:94;;13451:1;13420:34;;-1:-1:-1;;;13420:34:2;;;;;;;;:::i;13371:94::-;-1:-1:-1;;;;;13474:25:2;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13474:46:2;;;;;;;;;;13535:41;;1159::13;;;13535::2;;1132:18:13;13535:41:2;;;;;;;13268:315;;;:::o;8151:463::-;-1:-1:-1;;;;;8273:16:2;;8269:88;;8343:1;8312:34;;-1:-1:-1;;;8312:34:2;;;;;;;;:::i;8269:88::-;-1:-1:-1;;;;;8370:18:2;;8366:88;;8440:1;8411:32;;-1:-1:-1;;;8411:32:2;;;;;;;;:::i;8366:88::-;8464:20;8486:23;8513:29;8532:2;8536:5;8513:18;:29::i;:::-;8463:79;;;;8552:55;8579:4;8585:2;8589:3;8594:6;8602:4;8552:26;:55::i;:::-;8259:355;;8151:463;;;;;:::o;16080:849::-;16374:4;16368:11;;16444:1;16429:17;;;16575:4;16563:17;;16556:35;;;;16692:17;;;16722;;;16188:23;16759:17;;16752:35;;;;16895:17;;;16882:31;;16368:11;16080:849::o;7004:690::-;7205:30;7213:4;7219:2;7223:3;7228:6;7205:7;:30::i;:::-;-1:-1:-1;;;;;7249:16:2;;;7245:443;;7330:10;;735::7;;7344:1:2;7330:15;7326:352;;7365:10;7378:25;:3;7365:10;7378:22;:25::i;:::-;7365:38;-1:-1:-1;7421:13:2;7437:28;:6;7421:13;7437:25;:28::i;:::-;7421:44;;7483:67;7514:8;7524:4;7530:2;7534;7538:5;7545:4;7483:30;:67::i;:::-;7347:218;;7326:352;;;7589:74;7625:8;7635:4;7641:2;7645:3;7650:6;7658:4;7589:35;:74::i;5144:1281::-;5279:6;:13;5265:3;:10;:27;5261:117;;5341:10;;5353:13;;5315:52;;-1:-1:-1;;;5315:52:2;;;;;11000:25:13;;;;11041:18;;;11034:34;10973:18;;5315:52:2;10826:248:13;5261:117:2;735:10:7;5388:16:2;5430:691;5454:3;:10;5450:1;:14;5430:691;;;5485:10;5498:25;:3;5521:1;5498:22;:25::i;:::-;5485:38;-1:-1:-1;5537:13:2;5553:28;:6;5579:1;5553:25;:28::i;:::-;5537:44;-1:-1:-1;;;;;;5600:18:2;;;5596:420;;5638:19;5660:13;;;;;;;;;;;-1:-1:-1;;;;;5660:19:2;;;;;;;;;;5701;;;5697:129;;;5751:56;;-1:-1:-1;;;5751:56:2;;-1:-1:-1;;;;;13498:32:13;;5751:56:2;;;13480:51:13;13547:18;;;13540:34;;;13590:18;;;13583:34;;;13633:18;;;13626:34;;;13452:19;;5751:56:2;13249:417:13;5697:129:2;5942:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5942:19:2;;;;;;;;;5964;;;;5942:41;;5596:420;-1:-1:-1;;;;;6034:16:2;;;6030:81;;6070:9;:13;;;;;;;;;;;-1:-1:-1;;;;;6070:17:2;;;;;;;;;:26;;6091:5;;6070:9;:26;;6091:5;;6070:26;:::i;:::-;;;;-1:-1:-1;;6030:81:2;-1:-1:-1;;5466:3:2;;5430:691;;;;6135:3;:10;6149:1;6135:15;6131:288;;6166:10;6179:25;:3;6166:10;6179:22;:25::i;:::-;6166:38;-1:-1:-1;6218:13:2;6234:28;:6;6218:13;6234:25;:28::i;:::-;6218:44;;6312:2;-1:-1:-1;;;;;6281:45:2;6306:4;-1:-1:-1;;;;;6281:45:2;6296:8;-1:-1:-1;;;;;6281:45:2;;6316:2;6320:5;6281:45;;;;;;11000:25:13;;;11056:2;11041:18;;11034:34;10988:2;10973:18;;10826:248;6281:45:2;;;;;;;;6152:185;;6131:288;;;6392:2;-1:-1:-1;;;;;6362:46:2;6386:4;-1:-1:-1;;;;;6362:46:2;6376:8;-1:-1:-1;;;;;6362:46:2;;6396:3;6401:6;6362:46;;;;;;;:::i;:::-;;;;;;;;5251:1174;5144:1281;;;;:::o;13761:974::-;-1:-1:-1;;;;;13967:14:2;;;:18;13963:766;;14005:71;;-1:-1:-1;;;14005:71:2;;-1:-1:-1;;;;;14005:38:2;;;;;:71;;14044:8;;14054:4;;14060:2;;14064:5;;14071:4;;14005:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14005:71:2;;;;;;;;-1:-1:-1;;14005:71:2;;;;;;;;;;;;:::i;:::-;;;14001:718;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14360:6;:13;14377:1;14360:18;14356:349;;14487:2;14464:26;;-1:-1:-1;;;14464:26:2;;;;;;;;:::i;14356:349::-;14657:6;14651:13;14642:6;14638:2;14634:15;14627:38;14001:718;-1:-1:-1;;;;;;14125:55:2;;-1:-1:-1;;;14125:55:2;14121:174;;14273:2;14250:26;;-1:-1:-1;;;14250:26:2;;;;;;;;:::i;14923:1041::-;-1:-1:-1;;;;;15154:14:2;;;:18;15150:808;;15192:78;;-1:-1:-1;;;15192:78:2;;-1:-1:-1;;;;;15192:43:2;;;;;:78;;15236:8;;15246:4;;15252:3;;15257:6;;15265:4;;15192:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15192:78:2;;;;;;;;-1:-1:-1;;15192:78:2;;;;;;;;;;;;:::i;:::-;;;15188:760;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;15349:60:2;;-1:-1:-1;;;15349:60:2;15345:179;;15502:2;15479:26;;-1:-1:-1;;;15479:26:2;;;;;;;;:::i;14:173:13:-;82:20;;-1:-1:-1;;;;;131:31:13;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:13:o;633:131::-;-1:-1:-1;;;;;;707:32:13;;697:43;;687:71;;754:1;751;744:12;769:245;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;:::-;1003:5;769:245;-1:-1:-1;;;769:245:13:o;1211:127::-;1272:10;1267:3;1263:20;1260:1;1253:31;1303:4;1300:1;1293:15;1327:4;1324:1;1317:15;1343:275;1414:2;1408:9;1479:2;1460:13;;-1:-1:-1;;1456:27:13;1444:40;;-1:-1:-1;;;;;1499:34:13;;1535:22;;;1496:62;1493:88;;;1561:18;;:::i;:::-;1597:2;1590:22;1343:275;;-1:-1:-1;1343:275:13:o;1623:531::-;1666:5;1719:3;1712:4;1704:6;1700:17;1696:27;1686:55;;1737:1;1734;1727:12;1686:55;1760:20;;-1:-1:-1;;;;;1792:26:13;;1789:52;;;1821:18;;:::i;:::-;1865:55;1908:2;1889:13;;-1:-1:-1;;1885:27:13;1914:4;1881:38;1865:55;:::i;:::-;1945:2;1936:7;1929:19;1991:3;1984:4;1979:2;1971:6;1967:15;1963:26;1960:35;1957:55;;;2008:1;2005;1998:12;1957:55;2073:2;2066:4;2058:6;2054:17;2047:4;2038:7;2034:18;2021:55;2121:1;2096:16;;;2114:4;2092:27;2085:38;;;;2100:7;1623:531;-1:-1:-1;;;1623:531:13:o;2159:322::-;2228:6;2281:2;2269:9;2260:7;2256:23;2252:32;2249:52;;;2297:1;2294;2287:12;2249:52;2324:23;;-1:-1:-1;;;;;2359:30:13;;2356:50;;;2402:1;2399;2392:12;2356:50;2425;2467:7;2458:6;2447:9;2443:22;2425:50;:::i;2486:289::-;2528:3;2566:5;2560:12;2593:6;2588:3;2581:19;2649:6;2642:4;2635:5;2631:16;2624:4;2619:3;2615:14;2609:47;2701:1;2694:4;2685:6;2680:3;2676:16;2672:27;2665:38;2764:4;2757:2;2753:7;2748:2;2740:6;2736:15;2732:29;2727:3;2723:39;2719:50;2712:57;;;2486:289;;;;:::o;2780:220::-;2929:2;2918:9;2911:21;2892:4;2949:45;2990:2;2979:9;2975:18;2967:6;2949:45;:::i;3005:464::-;3092:6;3100;3108;3161:2;3149:9;3140:7;3136:23;3132:32;3129:52;;;3177:1;3174;3167:12;3129:52;3200:29;3219:9;3200:29;:::i;:::-;3190:39;-1:-1:-1;3280:2:13;3265:18;;3252:32;-1:-1:-1;;;;;3296:30:13;;3293:50;;;3339:1;3336;3329:12;3293:50;3362;3404:7;3395:6;3384:9;3380:22;3362:50;:::i;:::-;3352:60;;;3459:2;3448:9;3444:18;3431:32;3421:42;;3005:464;;;;;:::o;3474:439::-;3527:3;3565:5;3559:12;3592:6;3587:3;3580:19;3618:4;3647;3642:3;3638:14;3631:21;;3686:4;3679:5;3675:16;3709:1;3719:169;3733:6;3730:1;3727:13;3719:169;;;3794:13;;3782:26;;3828:12;;;;3863:15;;;;3755:1;3748:9;3719:169;;;-1:-1:-1;3904:3:13;;3474:439;-1:-1:-1;;;;;3474:439:13:o;3918:261::-;4097:2;4086:9;4079:21;4060:4;4117:56;4169:2;4158:9;4154:18;4146:6;4117:56;:::i;4184:180::-;4243:6;4296:2;4284:9;4275:7;4271:23;4267:32;4264:52;;;4312:1;4309;4302:12;4264:52;-1:-1:-1;4335:23:13;;4184:180;-1:-1:-1;4184:180:13:o;4369:183::-;4429:4;-1:-1:-1;;;;;4451:30:13;;4448:56;;;4484:18;;:::i;:::-;-1:-1:-1;4529:1:13;4525:14;4541:4;4521:25;;4369:183::o;4557:668::-;4611:5;4664:3;4657:4;4649:6;4645:17;4641:27;4631:55;;4682:1;4679;4672:12;4631:55;4718:6;4705:20;4744:4;4768:60;4784:43;4824:2;4784:43;:::i;:::-;4768:60;:::i;:::-;4850:3;4874:2;4869:3;4862:15;4902:4;4897:3;4893:14;4886:21;;4959:4;4953:2;4950:1;4946:10;4938:6;4934:23;4930:34;4916:48;;4987:3;4979:6;4976:15;4973:35;;;5004:1;5001;4994:12;4973:35;5040:4;5032:6;5028:17;5054:142;5070:6;5065:3;5062:15;5054:142;;;5136:17;;5124:30;;5174:12;;;;5087;;5054:142;;;-1:-1:-1;5214:5:13;4557:668;-1:-1:-1;;;;;;4557:668:13:o;5230:944::-;5384:6;5392;5400;5408;5416;5469:3;5457:9;5448:7;5444:23;5440:33;5437:53;;;5486:1;5483;5476:12;5437:53;5509:29;5528:9;5509:29;:::i;:::-;5499:39;;5557:38;5591:2;5580:9;5576:18;5557:38;:::i;:::-;5547:48;-1:-1:-1;5646:2:13;5631:18;;5618:32;-1:-1:-1;;;;;5699:14:13;;;5696:34;;;5726:1;5723;5716:12;5696:34;5749:61;5802:7;5793:6;5782:9;5778:22;5749:61;:::i;:::-;5739:71;;5863:2;5852:9;5848:18;5835:32;5819:48;;5892:2;5882:8;5879:16;5876:36;;;5908:1;5905;5898:12;5876:36;5931:63;5986:7;5975:8;5964:9;5960:24;5931:63;:::i;:::-;5921:73;;6047:3;6036:9;6032:19;6019:33;6003:49;;6077:2;6067:8;6064:16;6061:36;;;6093:1;6090;6083:12;6061:36;;6116:52;6160:7;6149:8;6138:9;6134:24;6116:52;:::i;:::-;6106:62;;;5230:944;;;;;;;;:::o;6179:674::-;6233:5;6286:3;6279:4;6271:6;6267:17;6263:27;6253:55;;6304:1;6301;6294:12;6253:55;6340:6;6327:20;6366:4;6390:60;6406:43;6446:2;6406:43;:::i;6390:60::-;6472:3;6496:2;6491:3;6484:15;6524:4;6519:3;6515:14;6508:21;;6581:4;6575:2;6572:1;6568:10;6560:6;6556:23;6552:34;6538:48;;6609:3;6601:6;6598:15;6595:35;;;6626:1;6623;6616:12;6595:35;6662:4;6654:6;6650:17;6676:148;6692:6;6687:3;6684:15;6676:148;;;6758:23;6777:3;6758:23;:::i;:::-;6746:36;;6802:12;;;;6709;;6676:148;;6858:595;6976:6;6984;7037:2;7025:9;7016:7;7012:23;7008:32;7005:52;;;7053:1;7050;7043:12;7005:52;7080:23;;-1:-1:-1;;;;;7152:14:13;;;7149:34;;;7179:1;7176;7169:12;7149:34;7202:61;7255:7;7246:6;7235:9;7231:22;7202:61;:::i;:::-;7192:71;;7316:2;7305:9;7301:18;7288:32;7272:48;;7345:2;7335:8;7332:16;7329:36;;;7361:1;7358;7351:12;7329:36;;7384:63;7439:7;7428:8;7417:9;7413:24;7384:63;:::i;:::-;7374:73;;;6858:595;;;;;:::o;7458:203::-;-1:-1:-1;;;;;7622:32:13;;;;7604:51;;7592:2;7577:18;;7458:203::o;7666:347::-;7731:6;7739;7792:2;7780:9;7771:7;7767:23;7763:32;7760:52;;;7808:1;7805;7798:12;7760:52;7831:29;7850:9;7831:29;:::i;:::-;7821:39;;7910:2;7899:9;7895:18;7882:32;7957:5;7950:13;7943:21;7936:5;7933:32;7923:60;;7979:1;7976;7969:12;7923:60;8002:5;7992:15;;;7666:347;;;;;:::o;8018:637::-;8130:6;8138;8146;8199:2;8187:9;8178:7;8174:23;8170:32;8167:52;;;8215:1;8212;8205:12;8167:52;8242:23;;-1:-1:-1;;;;;8314:14:13;;;8311:34;;;8341:1;8338;8331:12;8311:34;8364:61;8417:7;8408:6;8397:9;8393:22;8364:61;:::i;:::-;8354:71;;8478:2;8467:9;8463:18;8450:32;8434:48;;8507:2;8497:8;8494:16;8491:36;;;8523:1;8520;8513:12;8491:36;;8546:52;8590:7;8579:8;8568:9;8564:24;8546:52;:::i;8660:260::-;8728:6;8736;8789:2;8777:9;8768:7;8764:23;8760:32;8757:52;;;8805:1;8802;8795:12;8757:52;8828:29;8847:9;8828:29;:::i;:::-;8818:39;;8876:38;8910:2;8899:9;8895:18;8876:38;:::i;:::-;8866:48;;8660:260;;;;;:::o;8925:607::-;9029:6;9037;9045;9053;9061;9114:3;9102:9;9093:7;9089:23;9085:33;9082:53;;;9131:1;9128;9121:12;9082:53;9154:29;9173:9;9154:29;:::i;:::-;9144:39;;9202:38;9236:2;9225:9;9221:18;9202:38;:::i;:::-;9192:48;-1:-1:-1;9287:2:13;9272:18;;9259:32;;-1:-1:-1;9338:2:13;9323:18;;9310:32;;-1:-1:-1;9393:3:13;9378:19;;9365:33;-1:-1:-1;;;;;9410:30:13;;9407:50;;;9453:1;9450;9443:12;9407:50;9476;9518:7;9509:6;9498:9;9494:22;9476:50;:::i;9537:186::-;9596:6;9649:2;9637:9;9628:7;9624:23;9620:32;9617:52;;;9665:1;9662;9655:12;9617:52;9688:29;9707:9;9688:29;:::i;9728:380::-;9807:1;9803:12;;;;9850;;;9871:61;;9925:4;9917:6;9913:17;9903:27;;9871:61;9978:2;9970:6;9967:14;9947:18;9944:38;9941:161;;10024:10;10019:3;10015:20;10012:1;10005:31;10059:4;10056:1;10049:15;10087:4;10084:1;10077:15;9941:161;;9728:380;;;:::o;10113:127::-;10174:10;10169:3;10165:20;10162:1;10155:31;10205:4;10202:1;10195:15;10229:4;10226:1;10219:15;10245:135;10284:3;10305:17;;;10302:43;;10325:18;;:::i;:::-;-1:-1:-1;10372:1:13;10361:13;;10245:135::o;10385:127::-;10446:10;10441:3;10437:20;10434:1;10427:31;10477:4;10474:1;10467:15;10501:4;10498:1;10491:15;10517:304;-1:-1:-1;;;;;10747:15:13;;;10729:34;;10799:15;;10794:2;10779:18;;10772:43;10679:2;10664:18;;10517:304::o;11205:518::-;11307:2;11302:3;11299:11;11296:421;;;11343:5;11340:1;11333:16;11387:4;11384:1;11374:18;11457:2;11445:10;11441:19;11438:1;11434:27;11428:4;11424:38;11493:4;11481:10;11478:20;11475:47;;;-1:-1:-1;11516:4:13;11475:47;11571:2;11566:3;11562:12;11559:1;11555:20;11549:4;11545:31;11535:41;;11626:81;11644:2;11637:5;11634:13;11626:81;;;11703:1;11689:16;;11670:1;11659:13;11626:81;;11899:1345;12019:10;;-1:-1:-1;;;;;12041:30:13;;12038:56;;;12074:18;;:::i;:::-;12103:97;12193:6;12153:38;12185:4;12179:11;12153:38;:::i;:::-;12147:4;12103:97;:::i;:::-;12255:4;;12312:2;12301:14;;12329:1;12324:663;;;;13031:1;13048:6;13045:89;;;-1:-1:-1;13100:19:13;;;13094:26;13045:89;-1:-1:-1;;11856:1:13;11852:11;;;11848:24;11844:29;11834:40;11880:1;11876:11;;;11831:57;13147:81;;12294:944;;12324:663;11152:1;11145:14;;;11189:4;11176:18;;-1:-1:-1;;12360:20:13;;;12478:236;12492:7;12489:1;12486:14;12478:236;;;12581:19;;;12575:26;12560:42;;12673:27;;;;12641:1;12629:14;;;;12508:19;;12478:236;;;12482:3;12742:6;12733:7;12730:19;12727:201;;;12803:19;;;12797:26;-1:-1:-1;;12886:1:13;12882:14;;;12898:3;12878:24;12874:37;12870:42;12855:58;12840:74;;12727:201;-1:-1:-1;;;;;12974:1:13;12958:14;;;12954:22;12941:36;;-1:-1:-1;11899:1345:13:o;13671:125::-;13736:9;;;13757:10;;;13754:36;;;13770:18;;:::i;13801:465::-;14058:2;14047:9;14040:21;14021:4;14084:56;14136:2;14125:9;14121:18;14113:6;14084:56;:::i;:::-;14188:9;14180:6;14176:22;14171:2;14160:9;14156:18;14149:50;14216:44;14253:6;14245;14216:44;:::i;:::-;14208:52;13801:465;-1:-1:-1;;;;;13801:465:13:o;14271:561::-;-1:-1:-1;;;;;14568:15:13;;;14550:34;;14620:15;;14615:2;14600:18;;14593:43;14667:2;14652:18;;14645:34;;;14710:2;14695:18;;14688:34;;;14530:3;14753;14738:19;;14731:32;;;14493:4;;14780:46;;14806:19;;14798:6;14780:46;:::i;:::-;14772:54;14271:561;-1:-1:-1;;;;;;;14271:561:13:o;14837:249::-;14906:6;14959:2;14947:9;14938:7;14934:23;14930:32;14927:52;;;14975:1;14972;14965:12;14927:52;15007:9;15001:16;15026:30;15050:5;15026:30;:::i;15091:827::-;-1:-1:-1;;;;;15488:15:13;;;15470:34;;15540:15;;15535:2;15520:18;;15513:43;15450:3;15587:2;15572:18;;15565:31;;;15413:4;;15619:57;;15656:19;;15648:6;15619:57;:::i;:::-;15724:9;15716:6;15712:22;15707:2;15696:9;15692:18;15685:50;15758:44;15795:6;15787;15758:44;:::i;:::-;15744:58;;15851:9;15843:6;15839:22;15833:3;15822:9;15818:19;15811:51;15879:33;15905:6;15897;15879:33;:::i;:::-;15871:41;15091:827;-1:-1:-1;;;;;;;;15091:827:13:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1206800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "2611",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mint(address,string,uint256)": "infinite",
								"mintUniqueNFT(address,string,uint256)": "infinite",
								"mintUniqueNFT(address[],string,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2567",
								"renounceOwnership()": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26898",
								"setURI(string)": "infinite",
								"supportsInterface(bytes4)": "529",
								"symbol()": "infinite",
								"tokenId()": "2390",
								"tokenURI(uint256)": "infinite",
								"transferOwnership(address)": "28752",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_setTokenURI(uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 172,
									"end": 2367,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 172,
									"end": 2367,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 172,
									"end": 2367,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 255,
									"end": 256,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 228,
									"end": 256,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 228,
									"end": 256,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 368,
									"end": 533,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 368,
									"end": 533,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 368,
									"end": 533,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 368,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 368,
									"end": 533,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 368,
									"end": 533,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 368,
									"end": 533,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 368,
									"end": 533,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 368,
									"end": 533,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 368,
									"end": 533,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 368,
									"end": 533,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 368,
									"end": 533,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 368,
									"end": 533,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 368,
									"end": 533,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 368,
									"end": 533,
									"name": "CODESIZE",
									"source": 12
								},
								{
									"begin": 368,
									"end": 533,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 368,
									"end": 533,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 368,
									"end": 533,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 368,
									"end": 533,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 368,
									"end": 533,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 368,
									"end": 533,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 368,
									"end": 533,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 368,
									"end": 533,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 368,
									"end": 533,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 368,
									"end": 533,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 368,
									"end": 533,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 368,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 368,
									"end": 533,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 368,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 368,
									"end": 533,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 368,
									"end": 533,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 368,
									"end": 533,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 464,
									"end": 476,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 464,
									"end": 476,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1293,
									"end": 1306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1747,
									"end": 1798,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1720,
									"end": 1738,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1720,
									"end": 1738,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 488,
									"end": 493,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 488,
									"end": 500,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 496,
									"end": 500,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 488,
									"end": 493,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 488,
									"end": 500,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 488,
									"end": 500,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 488,
									"end": 500,
									"modifierDepth": 2,
									"name": "tag",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 488,
									"end": 500,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 510,
									"end": 517,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "6"
								},
								{
									"begin": 510,
									"end": 526,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 520,
									"end": 526,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 510,
									"end": 517,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 510,
									"end": 526,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 510,
									"end": 526,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 510,
									"end": 526,
									"modifierDepth": 2,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 510,
									"end": 526,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 510,
									"end": 526,
									"modifierDepth": 2,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 368,
									"end": 533,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 368,
									"end": 533,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 368,
									"end": 533,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 172,
									"end": 2367,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 172,
									"end": 2367,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10352,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 10355,
									"end": 10361,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10352,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 10348,
									"end": 10361,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 10282,
									"end": 10368,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 146,
									"end": 862,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 146,
									"end": 862,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 13,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 709,
									"end": 712,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 702,
									"end": 706,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 697,
									"end": 699,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 689,
									"end": 695,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 685,
									"end": 700,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 681,
									"end": 707,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 678,
									"end": 713,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 675,
									"end": 730,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 675,
									"end": 730,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 675,
									"end": 730,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 726,
									"end": 727,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 723,
									"end": 724,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 716,
									"end": 728,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 675,
									"end": 730,
									"name": "tag",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 675,
									"end": 730,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 783,
									"end": 785,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 776,
									"end": 780,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 768,
									"end": 774,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 764,
									"end": 781,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 757,
									"end": 761,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 749,
									"end": 755,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 745,
									"end": 762,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 739,
									"end": 786,
									"name": "MCOPY",
									"source": 13
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 823,
									"end": 827,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 818,
									"end": 820,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 810,
									"end": 816,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 806,
									"end": 821,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 802,
									"end": 828,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 795,
									"end": 832,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 850,
									"end": 856,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 841,
									"end": 856,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 146,
									"end": 862,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 146,
									"end": 862,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 146,
									"end": 862,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 146,
									"end": 862,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 146,
									"end": 862,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 867,
									"end": 1596,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 867,
									"end": 1596,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 975,
									"end": 981,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 983,
									"end": 989,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 991,
									"end": 997,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1044,
									"end": 1046,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 1032,
									"end": 1041,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1023,
									"end": 1030,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1019,
									"end": 1042,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 1015,
									"end": 1047,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 1012,
									"end": 1064,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1012,
									"end": 1064,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1012,
									"end": 1064,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1060,
									"end": 1061,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1057,
									"end": 1058,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1050,
									"end": 1062,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1012,
									"end": 1064,
									"name": "tag",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1012,
									"end": 1064,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1086,
									"end": 1102,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1086,
									"end": 1102,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1131,
									"end": 1162,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1131,
									"end": 1162,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1121,
									"end": 1163,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1121,
									"end": 1163,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 1111,
									"end": 1181,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 1111,
									"end": 1181,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1177,
									"end": 1178,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1174,
									"end": 1175,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1167,
									"end": 1179,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1111,
									"end": 1181,
									"name": "tag",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 1111,
									"end": 1181,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1249,
									"end": 1251,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1234,
									"end": 1252,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1234,
									"end": 1252,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1228,
									"end": 1253,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1200,
									"end": 1205,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1200,
									"end": 1205,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1302,
									"end": 1316,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1302,
									"end": 1316,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1302,
									"end": 1316,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1299,
									"end": 1333,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1299,
									"end": 1333,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 1299,
									"end": 1333,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1329,
									"end": 1330,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1326,
									"end": 1327,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1319,
									"end": 1331,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1299,
									"end": 1333,
									"name": "tag",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 1299,
									"end": 1333,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1352,
									"end": 1413,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 1405,
									"end": 1412,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 1396,
									"end": 1402,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1385,
									"end": 1394,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 1381,
									"end": 1403,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1352,
									"end": 1413,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 1352,
									"end": 1413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1352,
									"end": 1413,
									"name": "tag",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 1352,
									"end": 1413,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1342,
									"end": 1413,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1342,
									"end": 1413,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1459,
									"end": 1461,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1444,
									"end": 1462,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1438,
									"end": 1463,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1422,
									"end": 1463,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1422,
									"end": 1463,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1488,
									"end": 1490,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1478,
									"end": 1486,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1475,
									"end": 1491,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1472,
									"end": 1508,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1472,
									"end": 1508,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 1472,
									"end": 1508,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1504,
									"end": 1505,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1501,
									"end": 1502,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1494,
									"end": 1506,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1472,
									"end": 1508,
									"name": "tag",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 1472,
									"end": 1508,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1472,
									"end": 1508,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1527,
									"end": 1590,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 1582,
									"end": 1589,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1571,
									"end": 1579,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1560,
									"end": 1569,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 1556,
									"end": 1580,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1527,
									"end": 1590,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 1527,
									"end": 1590,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1527,
									"end": 1590,
									"name": "tag",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 1527,
									"end": 1590,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1517,
									"end": 1590,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1517,
									"end": 1590,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1517,
									"end": 1590,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 867,
									"end": 1596,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 867,
									"end": 1596,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 867,
									"end": 1596,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 867,
									"end": 1596,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 867,
									"end": 1596,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 867,
									"end": 1596,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1809,
									"end": 2189,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 1809,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1888,
									"end": 1889,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1884,
									"end": 1896,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1884,
									"end": 1896,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1884,
									"end": 1896,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 1884,
									"end": 1896,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1931,
									"end": 1943,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1931,
									"end": 1943,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1931,
									"end": 1943,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1952,
									"end": 2013,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 1952,
									"end": 2013,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2006,
									"end": 2010,
									"name": "PUSH",
									"source": 13,
									"value": "7F"
								},
								{
									"begin": 1998,
									"end": 2004,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1994,
									"end": 2011,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1984,
									"end": 2011,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1984,
									"end": 2011,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1952,
									"end": 2013,
									"name": "tag",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 1952,
									"end": 2013,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2059,
									"end": 2061,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2051,
									"end": 2057,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2048,
									"end": 2062,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 2028,
									"end": 2046,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2025,
									"end": 2063,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 2022,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 2022,
									"end": 2183,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2105,
									"end": 2115,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 2096,
									"end": 2116,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 2093,
									"end": 2094,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2086,
									"end": 2117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2140,
									"end": 2144,
									"name": "PUSH",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 2137,
									"end": 2138,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 2130,
									"end": 2145,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2168,
									"end": 2172,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 2165,
									"end": 2166,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2158,
									"end": 2173,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 2022,
									"end": 2183,
									"name": "tag",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 2022,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2022,
									"end": 2183,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1809,
									"end": 2189,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1809,
									"end": 2189,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1809,
									"end": 2189,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1809,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2320,
									"end": 2838,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 2320,
									"end": 2838,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2422,
									"end": 2424,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2420,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2414,
									"end": 2425,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 2411,
									"end": 2832,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2411,
									"end": 2832,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 2411,
									"end": 2832,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2458,
									"end": 2463,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2455,
									"end": 2456,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2448,
									"end": 2464,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2502,
									"end": 2506,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2499,
									"end": 2500,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2489,
									"end": 2507,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 2572,
									"end": 2574,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 2560,
									"end": 2570,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2556,
									"end": 2575,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2553,
									"end": 2554,
									"name": "PUSH",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 2549,
									"end": 2576,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 2543,
									"end": 2547,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2539,
									"end": 2577,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2608,
									"end": 2612,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2596,
									"end": 2606,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 2593,
									"end": 2613,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 2590,
									"end": 2637,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2590,
									"end": 2637,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 2590,
									"end": 2637,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2631,
									"end": 2635,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2590,
									"end": 2637,
									"name": "tag",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 2590,
									"end": 2637,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2686,
									"end": 2688,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 2681,
									"end": 2684,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2677,
									"end": 2689,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2674,
									"end": 2675,
									"name": "PUSH",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 2670,
									"end": 2690,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 2664,
									"end": 2668,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2660,
									"end": 2691,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2650,
									"end": 2691,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2650,
									"end": 2691,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2741,
									"end": 2822,
									"name": "tag",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 2741,
									"end": 2822,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2759,
									"end": 2761,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2752,
									"end": 2757,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2749,
									"end": 2762,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 2741,
									"end": 2822,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2741,
									"end": 2822,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 2741,
									"end": 2822,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2818,
									"end": 2819,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2804,
									"end": 2820,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2804,
									"end": 2820,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 2785,
									"end": 2786,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 2774,
									"end": 2787,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2741,
									"end": 2822,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 2741,
									"end": 2822,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2741,
									"end": 2822,
									"name": "tag",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 2741,
									"end": 2822,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2745,
									"end": 2748,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2745,
									"end": 2748,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2411,
									"end": 2832,
									"name": "tag",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 2411,
									"end": 2832,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2320,
									"end": 2838,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2320,
									"end": 2838,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2320,
									"end": 2838,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2320,
									"end": 2838,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3014,
									"end": 4359,
									"name": "tag",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 3014,
									"end": 4359,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3134,
									"end": 3144,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3134,
									"end": 3144,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3156,
									"end": 3186,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3156,
									"end": 3186,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 3153,
									"end": 3209,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3153,
									"end": 3209,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 3153,
									"end": 3209,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3189,
									"end": 3207,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 3189,
									"end": 3207,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 3189,
									"end": 3207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3189,
									"end": 3207,
									"name": "tag",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 3189,
									"end": 3207,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3218,
									"end": 3315,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 3308,
									"end": 3314,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3268,
									"end": 3306,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "62"
								},
								{
									"begin": 3300,
									"end": 3304,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3294,
									"end": 3305,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 3268,
									"end": 3306,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 3268,
									"end": 3306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3268,
									"end": 3306,
									"name": "tag",
									"source": 13,
									"value": "62"
								},
								{
									"begin": 3268,
									"end": 3306,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3262,
									"end": 3266,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3218,
									"end": 3315,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 3218,
									"end": 3315,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3218,
									"end": 3315,
									"name": "tag",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 3218,
									"end": 3315,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3370,
									"end": 3374,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3370,
									"end": 3374,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3427,
									"end": 3429,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 3416,
									"end": 3430,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3416,
									"end": 3430,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 3444,
									"end": 3445,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 3439,
									"end": 4102,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3439,
									"end": 4102,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 3439,
									"end": 4102,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 3439,
									"end": 4102,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4146,
									"end": 4147,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4163,
									"end": 4169,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4160,
									"end": 4249,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4160,
									"end": 4249,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "65"
								},
								{
									"begin": 4160,
									"end": 4249,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4215,
									"end": 4234,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4215,
									"end": 4234,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4215,
									"end": 4234,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4209,
									"end": 4235,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4160,
									"end": 4249,
									"name": "tag",
									"source": 13,
									"value": "65"
								},
								{
									"begin": 4160,
									"end": 4249,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2971,
									"end": 2972,
									"name": "PUSH",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 2967,
									"end": 2978,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 2967,
									"end": 2978,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2967,
									"end": 2978,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 2963,
									"end": 2987,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 2959,
									"end": 2988,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 2949,
									"end": 2989,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2995,
									"end": 2996,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 2991,
									"end": 3002,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 2991,
									"end": 3002,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2991,
									"end": 3002,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 2946,
									"end": 3003,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 4262,
									"end": 4343,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4262,
									"end": 4343,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 3409,
									"end": 4353,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 3409,
									"end": 4353,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3439,
									"end": 4102,
									"name": "tag",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 3439,
									"end": 4102,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2267,
									"end": 2268,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2260,
									"end": 2274,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 2260,
									"end": 2274,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2260,
									"end": 2274,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2304,
									"end": 2308,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2291,
									"end": 2309,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2291,
									"end": 2309,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3475,
									"end": 3495,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 3475,
									"end": 3495,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3475,
									"end": 3495,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3593,
									"end": 3829,
									"name": "tag",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 3593,
									"end": 3829,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3607,
									"end": 3614,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3604,
									"end": 3605,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3601,
									"end": 3615,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 3593,
									"end": 3829,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3593,
									"end": 3829,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 3593,
									"end": 3829,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3696,
									"end": 3715,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 3696,
									"end": 3715,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 3696,
									"end": 3715,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3690,
									"end": 3716,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 3675,
									"end": 3717,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3675,
									"end": 3717,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 3788,
									"end": 3815,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 3788,
									"end": 3815,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3788,
									"end": 3815,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3788,
									"end": 3815,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 3756,
									"end": 3757,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 3744,
									"end": 3758,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3744,
									"end": 3758,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3744,
									"end": 3758,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3744,
									"end": 3758,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3623,
									"end": 3642,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3623,
									"end": 3642,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3593,
									"end": 3829,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 3593,
									"end": 3829,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3593,
									"end": 3829,
									"name": "tag",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 3593,
									"end": 3829,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3597,
									"end": 3600,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3857,
									"end": 3863,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3848,
									"end": 3855,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3845,
									"end": 3864,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 3842,
									"end": 4043,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3842,
									"end": 4043,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 3842,
									"end": 4043,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3918,
									"end": 3937,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 3918,
									"end": 3937,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3918,
									"end": 3937,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3912,
									"end": 3938,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4001,
									"end": 4002,
									"name": "PUSH",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 3997,
									"end": 4011,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 3997,
									"end": 4011,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3997,
									"end": 4011,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 4013,
									"end": 4016,
									"name": "PUSH",
									"source": 13,
									"value": "F8"
								},
								{
									"begin": 3993,
									"end": 4017,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3989,
									"end": 4026,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 3985,
									"end": 4027,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 3970,
									"end": 4028,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3955,
									"end": 4029,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3955,
									"end": 4029,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 3842,
									"end": 4043,
									"name": "tag",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 3842,
									"end": 4043,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3842,
									"end": 4043,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3842,
									"end": 4043,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4089,
									"end": 4090,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 4080,
									"end": 4086,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4077,
									"end": 4078,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 4073,
									"end": 4087,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 4069,
									"end": 4091,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4063,
									"end": 4067,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4056,
									"end": 4092,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 3409,
									"end": 4353,
									"name": "tag",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 3409,
									"end": 4353,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3409,
									"end": 4353,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3409,
									"end": 4353,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3409,
									"end": 4353,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3409,
									"end": 4353,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3014,
									"end": 4359,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3014,
									"end": 4359,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3014,
									"end": 4359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3014,
									"end": 4359,
									"name": "tag",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 3014,
									"end": 4359,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 172,
									"end": 2367,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 172,
									"end": 2367,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 172,
									"end": 2367,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 172,
									"end": 2367,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 172,
									"end": 2367,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 172,
									"end": 2367,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 172,
									"end": 2367,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c16ce25c1fc7aa4bc1065d5ba2a04c0d27e9a3767e90f4645f81764f28ded85964736f6c63430008190033",
									".code": [
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH",
											"source": 12,
											"value": "FDD58E"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A7"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH",
											"source": 12,
											"value": "2FE5305"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH",
											"source": 12,
											"value": "6FDDE03"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH",
											"source": 12,
											"value": "A1E88D1"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH",
											"source": 12,
											"value": "E89341C"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH",
											"source": 12,
											"value": "17D70F7C"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH",
											"source": 12,
											"value": "2EB2C2D6"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH",
											"source": 12,
											"value": "4E1273F4"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH",
											"source": 12,
											"value": "95D89B41"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH",
											"source": 12,
											"value": "A22CB465"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH",
											"source": 12,
											"value": "A7FD4A02"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH",
											"source": 12,
											"value": "BA7AEF43"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH",
											"source": 12,
											"value": "C87B56DD"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH",
											"source": 12,
											"value": "E985E9C5"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH",
											"source": 12,
											"value": "F242432A"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH",
											"source": 12,
											"value": "F2FDE38B"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 172,
											"end": 2367,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 597,
											"end": 622,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 597,
											"end": 622,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 597,
											"end": 622,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 585,
											"end": 587,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 588,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1177,
											"end": 1199,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1147,
											"end": 1149,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1019,
											"end": 1206,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 539,
											"end": 626,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 539,
											"end": 626,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 539,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 539,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 539,
											"end": 626,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 539,
											"end": 626,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 539,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 539,
											"end": 626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 539,
											"end": 626,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 539,
											"end": 626,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 539,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 539,
											"end": 626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 539,
											"end": 626,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 539,
											"end": 626,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 539,
											"end": 626,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1972,
											"end": 2052,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1972,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1972,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 1972,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 1972,
											"end": 2052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1972,
											"end": 2052,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 1972,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1972,
											"end": 2052,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1972,
											"end": 2052,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1972,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 1972,
											"end": 2052,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1972,
											"end": 2052,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1972,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1972,
											"end": 2052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1471,
											"name": "tag",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1043,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 1043,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 1043,
											"end": 1471,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1471,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1043,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 1043,
											"end": 1471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1471,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 1043,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 1043,
											"end": 1471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1471,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 1043,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1471,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1043,
											"end": 1471,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 1043,
											"end": 1471,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1471,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 1043,
											"end": 1471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2365,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 2276,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2350,
											"end": 2358,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2350,
											"end": 2358,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2276,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 2276,
											"end": 2365,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2058,
											"end": 2142,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 2058,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2058,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 2058,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 2058,
											"end": 2142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1527,
											"end": 1966,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 1527,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1527,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 1527,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 1527,
											"end": 1966,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1527,
											"end": 1966,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1527,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1527,
											"end": 1966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1527,
											"end": 1966,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 1527,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1527,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 1527,
											"end": 1966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 776,
											"end": 1037,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 776,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 776,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 776,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 776,
											"end": 1037,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 776,
											"end": 1037,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 776,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 776,
											"end": 1037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 776,
											"end": 1037,
											"name": "tag",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 776,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 776,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 776,
											"end": 1037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2148,
											"end": 2270,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 2148,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2148,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 2148,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 2148,
											"end": 2270,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2148,
											"end": 2270,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2148,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 2148,
											"end": 2270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2148,
											"end": 2270,
											"name": "tag",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 2148,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2148,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 2148,
											"end": 2270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2331,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1486,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A24D07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 861,
											"end": 901,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 539,
											"end": 626,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 539,
											"end": 626,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 604,
											"end": 619,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 612,
											"end": 618,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 604,
											"end": 611,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 604,
											"end": 619,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 604,
											"end": 619,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 604,
											"end": 619,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 539,
											"end": 626,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 539,
											"end": 626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1972,
											"end": 2052,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 1972,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2008,
											"end": 2021,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2040,
											"end": 2045,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 2033,
											"end": 2045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "tag",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 2033,
											"end": 2045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "tag",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "tag",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "tag",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "tag",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1972,
											"end": 2052,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1972,
											"end": 2052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1471,
											"name": "tag",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 1043,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1147,
											"end": 1163,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1174,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1216,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 1197,
											"end": 1217,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1217,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1217,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1174,
											"end": 1217,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1174,
											"end": 1217,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1231,
											"end": 1240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1227,
											"end": 1437,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 1227,
											"end": 1437,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1250,
											"end": 1255,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1246,
											"end": 1247,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1246,
											"end": 1255,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1437,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1437,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 1227,
											"end": 1437,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1296,
											"end": 1304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1296,
											"end": 1306,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1296,
											"end": 1306,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1276,
											"end": 1293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1276,
											"end": 1293,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1276,
											"end": 1293,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1296,
											"end": 1306,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 1296,
											"end": 1306,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1296,
											"end": 1306,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 1296,
											"end": 1306,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1296,
											"end": 1306,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 1296,
											"end": 1306,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1296,
											"end": 1306,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1296,
											"end": 1306,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1296,
											"end": 1306,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1296,
											"end": 1306,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1276,
											"end": 1306,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1276,
											"end": 1306,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1320,
											"end": 1347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 1326,
											"end": 1328,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1330,
											"end": 1339,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1341,
											"end": 1342,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1320,
											"end": 1347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1320,
											"end": 1347,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1320,
											"end": 1347,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1320,
											"end": 1347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1320,
											"end": 1347,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1320,
											"end": 1347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1320,
											"end": 1347,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1320,
											"end": 1347,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1320,
											"end": 1347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1320,
											"end": 1347,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1320,
											"end": 1347,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1320,
											"end": 1347,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1320,
											"end": 1325,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 1320,
											"end": 1347,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1320,
											"end": 1347,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 1320,
											"end": 1347,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1361,
											"end": 1395,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 1374,
											"end": 1383,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1385,
											"end": 1394,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1361,
											"end": 1373,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 1361,
											"end": 1395,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1361,
											"end": 1395,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 1361,
											"end": 1395,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1418,
											"end": 1427,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1409,
											"end": 1412,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1413,
											"end": 1414,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1409,
											"end": 1415,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1409,
											"end": 1415,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1409,
											"end": 1415,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1409,
											"end": 1415,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1409,
											"end": 1415,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 1409,
											"end": 1415,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1409,
											"end": 1415,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 1409,
											"end": 1415,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 1409,
											"end": 1415,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1409,
											"end": 1415,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 1409,
											"end": 1415,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1409,
											"end": 1415,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1409,
											"end": 1415,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1409,
											"end": 1415,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1409,
											"end": 1415,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1409,
											"end": 1415,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1409,
											"end": 1415,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1409,
											"end": 1415,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1409,
											"end": 1415,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1409,
											"end": 1415,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1409,
											"end": 1427,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1257,
											"end": 1260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1257,
											"end": 1260,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1437,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 1227,
											"end": 1437,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1437,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 1227,
											"end": 1437,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1461,
											"end": 1464,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1471,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1043,
											"end": 1471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2169,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2169,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 4287,
											"end": 4291,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4299,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 4270,
											"end": 4300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4269,
											"end": 4300,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4352,
											"end": 4358,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4364,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "711BEC91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 4323,
											"end": 4365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 4408,
											"end": 4412,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4416,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4418,
											"end": 4421,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4423,
											"end": 4429,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4431,
											"end": 4435,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4385,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 4385,
											"end": 4436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4198,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2676,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2711,
											"end": 2714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2711,
											"end": 2721,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2700,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2707,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2721,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2780,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2780,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2782,
											"end": 2797,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2782,
											"end": 2797,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B059991"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11000,
											"end": 11025,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11000,
											"end": 11025,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11000,
											"end": 11025,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11000,
											"end": 11025,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11041,
											"end": 11059,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11041,
											"end": 11059,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11041,
											"end": 11059,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11034,
											"end": 11068,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10973,
											"end": 10991,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 10973,
											"end": 10991,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 10826,
											"end": 11074,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2819,
											"end": 2849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 2874,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2866,
											"end": 2881,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2852,
											"end": 2882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2819,
											"end": 2882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2819,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2898,
											"end": 2907,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2917,
											"end": 2925,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2917,
											"end": 2932,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2913,
											"end": 2914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2913,
											"end": 2932,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3011,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 2982,
											"end": 3012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3014,
											"end": 3017,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3037,
											"end": 3038,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 3014,
											"end": 3039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2966,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2967,
											"end": 2968,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2953,
											"end": 2969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3081,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2058,
											"end": 2142,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 2058,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2096,
											"end": 2109,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2128,
											"end": 2135,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 2121,
											"end": 2135,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2121,
											"end": 2135,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2121,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 2121,
											"end": 2135,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2121,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 2121,
											"end": 2135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3274,
											"end": 3282,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3284,
											"end": 3292,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 3241,
											"end": 3293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1527,
											"end": 1966,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 1527,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1639,
											"end": 1655,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1703,
											"end": 1708,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 1689,
											"end": 1709,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1689,
											"end": 1709,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1689,
											"end": 1709,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1666,
											"end": 1709,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1666,
											"end": 1709,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1723,
											"end": 1732,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1719,
											"end": 1932,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 1719,
											"end": 1932,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 1747,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1738,
											"end": 1739,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1738,
											"end": 1747,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1719,
											"end": 1932,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1719,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 1719,
											"end": 1932,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1788,
											"end": 1796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1788,
											"end": 1798,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1788,
											"end": 1798,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1768,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1788,
											"end": 1798,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 1788,
											"end": 1798,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1788,
											"end": 1798,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 1788,
											"end": 1798,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1788,
											"end": 1798,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 1788,
											"end": 1798,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1788,
											"end": 1798,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1788,
											"end": 1798,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1788,
											"end": 1798,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1788,
											"end": 1798,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1768,
											"end": 1798,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1768,
											"end": 1798,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1812,
											"end": 1842,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 1818,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1821,
											"end": 1822,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 1823,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 1823,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 1823,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 1823,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 1823,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 1818,
											"end": 1823,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 1823,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 1818,
											"end": 1823,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 1818,
											"end": 1823,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 1823,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 1818,
											"end": 1823,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 1823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1818,
											"end": 1823,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 1823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1818,
											"end": 1823,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 1823,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 1823,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1825,
											"end": 1834,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1836,
											"end": 1837,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1812,
											"end": 1842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1812,
											"end": 1842,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1812,
											"end": 1842,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1812,
											"end": 1842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1812,
											"end": 1842,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1812,
											"end": 1842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1812,
											"end": 1842,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1812,
											"end": 1842,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1812,
											"end": 1842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1812,
											"end": 1842,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1812,
											"end": 1842,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1812,
											"end": 1842,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1812,
											"end": 1817,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 1812,
											"end": 1842,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1812,
											"end": 1842,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 1812,
											"end": 1842,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1856,
											"end": 1890,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 1869,
											"end": 1878,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1880,
											"end": 1889,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1856,
											"end": 1868,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 1856,
											"end": 1890,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1856,
											"end": 1890,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 1856,
											"end": 1890,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1913,
											"end": 1922,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1904,
											"end": 1907,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1908,
											"end": 1909,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1904,
											"end": 1910,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1904,
											"end": 1910,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1904,
											"end": 1910,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1904,
											"end": 1910,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1904,
											"end": 1910,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 1904,
											"end": 1910,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1904,
											"end": 1910,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 1904,
											"end": 1910,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 1904,
											"end": 1910,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1904,
											"end": 1910,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 1904,
											"end": 1910,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1904,
											"end": 1910,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1904,
											"end": 1910,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1904,
											"end": 1910,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1904,
											"end": 1910,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1904,
											"end": 1910,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1904,
											"end": 1910,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1904,
											"end": 1910,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1904,
											"end": 1910,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1904,
											"end": 1910,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1904,
											"end": 1922,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1749,
											"end": 1752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1749,
											"end": 1752,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1719,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 1719,
											"end": 1932,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 776,
											"end": 1037,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 776,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 870,
											"end": 877,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 909,
											"end": 917,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 909,
											"end": 919,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 909,
											"end": 919,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 889,
											"end": 906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 889,
											"end": 906,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 889,
											"end": 906,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 909,
											"end": 919,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 909,
											"end": 919,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 909,
											"end": 919,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 909,
											"end": 919,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 909,
											"end": 919,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 909,
											"end": 919,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 909,
											"end": 919,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 909,
											"end": 919,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 909,
											"end": 919,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 909,
											"end": 919,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 889,
											"end": 919,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 889,
											"end": 919,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 929,
											"end": 960,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 935,
											"end": 937,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 939,
											"end": 948,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 950,
											"end": 955,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 929,
											"end": 960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 929,
											"end": 960,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 929,
											"end": 960,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 929,
											"end": 960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 929,
											"end": 960,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 929,
											"end": 960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 929,
											"end": 960,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 929,
											"end": 960,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 929,
											"end": 960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 960,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 929,
											"end": 960,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 929,
											"end": 960,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 929,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 929,
											"end": 960,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 929,
											"end": 960,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 929,
											"end": 960,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 970,
											"end": 1004,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 983,
											"end": 992,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 994,
											"end": 1003,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 970,
											"end": 982,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 970,
											"end": 1004,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 970,
											"end": 1004,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 970,
											"end": 1004,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1021,
											"end": 1030,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 776,
											"end": 1037,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 776,
											"end": 1037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2148,
											"end": 2270,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 2148,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2244,
											"end": 2263,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2244,
											"end": 2263,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2244,
											"end": 2263,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2244,
											"end": 2263,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2244,
											"end": 2254,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 2244,
											"end": 2263,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2244,
											"end": 2263,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2244,
											"end": 2263,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2244,
											"end": 2263,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2244,
											"end": 2263,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2237,
											"end": 2263,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2237,
											"end": 2263,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2244,
											"end": 2263,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2237,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 2237,
											"end": 2263,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2237,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 2237,
											"end": 2263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3457,
											"end": 3461,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 3793,
											"end": 3797,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3799,
											"end": 3805,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3776,
											"end": 3806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3775,
											"end": 3806,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3858,
											"end": 3864,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3866,
											"end": 3870,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "711BEC91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 3829,
											"end": 3871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 3909,
											"end": 3913,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3915,
											"end": 3917,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3919,
											"end": 3921,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3928,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3930,
											"end": 3934,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 3891,
											"end": 3935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10282,
											"end": 10368,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 10282,
											"end": 10368,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10348,
											"end": 10352,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10348,
											"end": 10361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 10355,
											"end": 10361,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10348,
											"end": 10352,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10348,
											"end": 10361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 10348,
											"end": 10361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10912,
											"end": 10913,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2BFA23E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 10881,
											"end": 10915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10956,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10958,
											"end": 10981,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10985,
											"end": 11014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 11004,
											"end": 11006,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11008,
											"end": 11013,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10985,
											"end": 11003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 10985,
											"end": 11014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10985,
											"end": 11014,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 10985,
											"end": 11014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11024,
											"end": 11085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 11059,
											"end": 11060,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11063,
											"end": 11065,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11067,
											"end": 11070,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11072,
											"end": 11078,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11080,
											"end": 11084,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11024,
											"end": 11050,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 11024,
											"end": 11085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 637,
											"end": 766,
											"name": "tag",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 637,
											"end": 766,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 728,
											"end": 747,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 728,
											"end": 747,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 728,
											"end": 747,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 728,
											"end": 747,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 728,
											"end": 738,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 728,
											"end": 747,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 728,
											"end": 747,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 728,
											"end": 747,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 728,
											"end": 747,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 728,
											"end": 747,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 728,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 750,
											"end": 759,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 728,
											"end": 747,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 728,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 728,
											"end": 759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 728,
											"end": 759,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 728,
											"end": 759,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 728,
											"end": 759,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 637,
											"end": 766,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 637,
											"end": 766,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 637,
											"end": 766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9278,
											"end": 9279,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2BFA23E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 9247,
											"end": 9281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9375,
											"end": 9376,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A0D45"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 9346,
											"end": 9378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 9425,
											"end": 9429,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9431,
											"end": 9433,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9435,
											"end": 9438,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9440,
											"end": 9446,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9452,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9398,
											"end": 9424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 9398,
											"end": 9453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4777,
											"end": 4781,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4742,
											"end": 4784,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4742,
											"end": 4784,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13451,
											"end": 13452,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CED3E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 13420,
											"end": 13454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13492,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8344,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2BFA23E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 8312,
											"end": 8346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8440,
											"end": 8441,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A0D45"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 8411,
											"end": 8443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8486,
											"end": 8509,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 8532,
											"end": 8534,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8536,
											"end": 8541,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8513,
											"end": 8531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 8513,
											"end": 8542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 8579,
											"end": 8583,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8585,
											"end": 8587,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8589,
											"end": 8592,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8594,
											"end": 8600,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8602,
											"end": 8606,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8552,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 8552,
											"end": 8607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8259,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8259,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16374,
											"end": 16378,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16368,
											"end": 16379,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16368,
											"end": 16379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16444,
											"end": 16445,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 16429,
											"end": 16446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16429,
											"end": 16446,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16429,
											"end": 16446,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16575,
											"end": 16579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16563,
											"end": 16580,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16563,
											"end": 16580,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16556,
											"end": 16591,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 16556,
											"end": 16591,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16556,
											"end": 16591,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 16556,
											"end": 16591,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16722,
											"end": 16739,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 16722,
											"end": 16739,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 16722,
											"end": 16739,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16188,
											"end": 16211,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 16759,
											"end": 16776,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16759,
											"end": 16776,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16752,
											"end": 16787,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16752,
											"end": 16787,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16752,
											"end": 16787,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16752,
											"end": 16787,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16895,
											"end": 16912,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 16895,
											"end": 16912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16895,
											"end": 16912,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16882,
											"end": 16913,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16882,
											"end": 16913,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16368,
											"end": 16379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 7213,
											"end": 7217,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7219,
											"end": 7221,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7223,
											"end": 7226,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7234,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 7205,
											"end": 7235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7330,
											"end": 7340,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7330,
											"end": 7340,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7344,
											"end": 7345,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7330,
											"end": 7345,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7375,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 7378,
											"end": 7381,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7375,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 7378,
											"end": 7403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7421,
											"end": 7434,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 7437,
											"end": 7443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7421,
											"end": 7434,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 7437,
											"end": 7465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7421,
											"end": 7465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7421,
											"end": 7465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 7514,
											"end": 7522,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7528,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7530,
											"end": 7532,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7534,
											"end": 7536,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7538,
											"end": 7543,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7549,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7483,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 7483,
											"end": 7550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7565,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7565,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 7625,
											"end": 7633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7635,
											"end": 7639,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7641,
											"end": 7643,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7645,
											"end": 7648,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7650,
											"end": 7656,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7658,
											"end": 7662,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7589,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 7589,
											"end": 7663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5279,
											"end": 5285,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5279,
											"end": 5292,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5268,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5275,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5292,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5353,
											"end": 5366,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5353,
											"end": 5366,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B059991"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11000,
											"end": 11025,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11000,
											"end": 11025,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11000,
											"end": 11025,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11000,
											"end": 11025,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11041,
											"end": 11059,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11041,
											"end": 11059,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11041,
											"end": 11059,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11034,
											"end": 11068,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10973,
											"end": 10991,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 10973,
											"end": 10991,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 10826,
											"end": 11074,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5454,
											"end": 5457,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5454,
											"end": 5464,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5450,
											"end": 5451,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5450,
											"end": 5464,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5495,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5521,
											"end": 5522,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 5498,
											"end": 5523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5537,
											"end": 5550,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 5553,
											"end": 5559,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5579,
											"end": 5580,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 5553,
											"end": 5581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5581,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5638,
											"end": 5657,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5701,
											"end": 5720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5701,
											"end": 5720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5701,
											"end": 5720,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3DEE4C5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13498,
											"end": 13530,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 13498,
											"end": 13530,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13480,
											"end": 13531,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13565,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13547,
											"end": 13565,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13565,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13540,
											"end": 13574,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13540,
											"end": 13574,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13540,
											"end": 13574,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13590,
											"end": 13608,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 13590,
											"end": 13608,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13590,
											"end": 13608,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13583,
											"end": 13617,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13583,
											"end": 13617,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13583,
											"end": 13617,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13633,
											"end": 13651,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13633,
											"end": 13651,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13633,
											"end": 13651,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13626,
											"end": 13660,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13626,
											"end": 13660,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13626,
											"end": 13660,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13452,
											"end": 13471,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 13452,
											"end": 13471,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 13249,
											"end": 13666,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5951,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "DUP14",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5964,
											"end": 5983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5964,
											"end": 5983,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5964,
											"end": 5983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5964,
											"end": 5983,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6091,
											"end": 6096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6091,
											"end": 6096,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6079,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6091,
											"end": 6096,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6091,
											"end": 6096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 6070,
											"end": 6096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "tag",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6135,
											"end": 6138,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6135,
											"end": 6145,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6149,
											"end": 6150,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6135,
											"end": 6150,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6166,
											"end": 6176,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 6179,
											"end": 6182,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6166,
											"end": 6176,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 6179,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6166,
											"end": 6204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6218,
											"end": 6231,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 6234,
											"end": 6240,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6218,
											"end": 6231,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 6234,
											"end": 6262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "tag",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6218,
											"end": 6262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6218,
											"end": 6262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6314,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6306,
											"end": 6310,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6296,
											"end": 6304,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 6316,
											"end": 6318,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6320,
											"end": 6325,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11000,
											"end": 11025,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11000,
											"end": 11025,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11000,
											"end": 11025,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11056,
											"end": 11058,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11041,
											"end": 11059,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11041,
											"end": 11059,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11034,
											"end": 11068,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10988,
											"end": 10990,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10973,
											"end": 10991,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10973,
											"end": 10991,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10826,
											"end": 11074,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 6152,
											"end": 6337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6152,
											"end": 6337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "tag",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6394,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6390,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6384,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 6396,
											"end": 6399,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6401,
											"end": 6407,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 6362,
											"end": 6408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "tag",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 5251,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 13967,
											"end": 13985,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14044,
											"end": 14052,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 14044,
											"end": 14052,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14058,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14060,
											"end": 14062,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14060,
											"end": 14062,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14064,
											"end": 14069,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14064,
											"end": 14069,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14071,
											"end": 14075,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14071,
											"end": 14075,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 14005,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 14005,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14360,
											"end": 14366,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14360,
											"end": 14373,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14377,
											"end": 14378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14360,
											"end": 14378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14487,
											"end": 14489,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2BFA23E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 14464,
											"end": 14490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "tag",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14657,
											"end": 14663,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14651,
											"end": 14664,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14642,
											"end": 14648,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14638,
											"end": 14640,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14634,
											"end": 14649,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14627,
											"end": 14665,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14273,
											"end": 14275,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2BFA23E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 14250,
											"end": 14276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 15154,
											"end": 15172,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15236,
											"end": 15244,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 15236,
											"end": 15244,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15246,
											"end": 15250,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 15246,
											"end": 15250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15252,
											"end": 15255,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15252,
											"end": 15255,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15257,
											"end": 15263,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15257,
											"end": 15263,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15265,
											"end": 15269,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15265,
											"end": 15269,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 15192,
											"end": 15270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 15192,
											"end": 15270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "tag",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15502,
											"end": 15504,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2BFA23E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 15479,
											"end": 15505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 192,
											"end": 446,
											"name": "tag",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 360,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 436,
											"end": 438,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 408,
											"end": 440,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 408,
											"end": 440,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 633,
											"end": 764,
											"name": "tag",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 633,
											"end": 764,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 707,
											"end": 739,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 707,
											"end": 739,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 697,
											"end": 740,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 697,
											"end": 740,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 687,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 754,
											"end": 755,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 752,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 744,
											"end": 756,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 827,
											"end": 833,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 882,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 868,
											"end": 877,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 859,
											"end": 866,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 855,
											"end": 878,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 851,
											"end": 883,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 848,
											"end": 900,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 848,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 896,
											"end": 897,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 894,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 886,
											"end": 898,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 848,
											"end": 900,
											"name": "tag",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 935,
											"end": 944,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 922,
											"end": 945,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 954,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 954,
											"end": 984,
											"name": "tag",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 769,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1211,
											"end": 1338,
											"name": "tag",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 1211,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1272,
											"end": 1282,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 1267,
											"end": 1270,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1263,
											"end": 1283,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1260,
											"end": 1261,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1284,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1303,
											"end": 1307,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 1300,
											"end": 1301,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1293,
											"end": 1308,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1327,
											"end": 1331,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1324,
											"end": 1325,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1317,
											"end": 1332,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1343,
											"end": 1618,
											"name": "tag",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 1343,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1414,
											"end": 1416,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1408,
											"end": 1417,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1479,
											"end": 1481,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1460,
											"end": 1473,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1460,
											"end": 1473,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1456,
											"end": 1483,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1444,
											"end": 1484,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1444,
											"end": 1484,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1499,
											"end": 1533,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1499,
											"end": 1533,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1557,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1557,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1557,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1496,
											"end": 1558,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1493,
											"end": 1581,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1493,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 1493,
											"end": 1581,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1561,
											"end": 1579,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 1561,
											"end": 1579,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 1561,
											"end": 1579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1561,
											"end": 1579,
											"name": "tag",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 1561,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1599,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1590,
											"end": 1612,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1343,
											"end": 1618,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1343,
											"end": 1618,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1343,
											"end": 1618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 2154,
											"name": "tag",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 1623,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1666,
											"end": 1671,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1719,
											"end": 1722,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1712,
											"end": 1716,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1704,
											"end": 1710,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1700,
											"end": 1717,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1696,
											"end": 1723,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1686,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 1686,
											"end": 1741,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1737,
											"end": 1738,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1734,
											"end": 1735,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1727,
											"end": 1739,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1686,
											"end": 1741,
											"name": "tag",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 1686,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1760,
											"end": 1780,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1760,
											"end": 1780,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1792,
											"end": 1818,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1792,
											"end": 1818,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1789,
											"end": 1841,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1789,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 1789,
											"end": 1841,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1821,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 1821,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 1821,
											"end": 1839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1821,
											"end": 1839,
											"name": "tag",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 1821,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1865,
											"end": 1920,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 1908,
											"end": 1910,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1889,
											"end": 1902,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1889,
											"end": 1902,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1885,
											"end": 1912,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1914,
											"end": 1918,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1881,
											"end": 1919,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1865,
											"end": 1920,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 1865,
											"end": 1920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1865,
											"end": 1920,
											"name": "tag",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 1865,
											"end": 1920,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1945,
											"end": 1947,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1936,
											"end": 1943,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1929,
											"end": 1948,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1991,
											"end": 1994,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1984,
											"end": 1988,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1979,
											"end": 1981,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1971,
											"end": 1977,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1967,
											"end": 1982,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1963,
											"end": 1989,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1960,
											"end": 1995,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1957,
											"end": 2012,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1957,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 1957,
											"end": 2012,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2008,
											"end": 2009,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2005,
											"end": 2006,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2010,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1957,
											"end": 2012,
											"name": "tag",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 1957,
											"end": 2012,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2073,
											"end": 2075,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2066,
											"end": 2070,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2058,
											"end": 2064,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2054,
											"end": 2071,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2047,
											"end": 2051,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2038,
											"end": 2045,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2034,
											"end": 2052,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2076,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 2121,
											"end": 2122,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2114,
											"end": 2118,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2092,
											"end": 2119,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2123,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2123,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2123,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2123,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2100,
											"end": 2107,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 2154,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1623,
											"end": 2154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2159,
											"end": 2481,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 2159,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2228,
											"end": 2234,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2283,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2269,
											"end": 2278,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2260,
											"end": 2267,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2252,
											"end": 2284,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2301,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 2249,
											"end": 2301,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2297,
											"end": 2298,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2294,
											"end": 2295,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2301,
											"name": "tag",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 2249,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2324,
											"end": 2347,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2324,
											"end": 2347,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2359,
											"end": 2389,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2359,
											"end": 2389,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2356,
											"end": 2406,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2356,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 2356,
											"end": 2406,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2402,
											"end": 2403,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2399,
											"end": 2400,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2404,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2356,
											"end": 2406,
											"name": "tag",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 2356,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2425,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 2467,
											"end": 2474,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2458,
											"end": 2464,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2447,
											"end": 2456,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2443,
											"end": 2465,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2425,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 2425,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2486,
											"end": 2775,
											"name": "tag",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 2486,
											"end": 2775,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2528,
											"end": 2531,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2566,
											"end": 2571,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2560,
											"end": 2572,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2593,
											"end": 2599,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2588,
											"end": 2591,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2581,
											"end": 2600,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2649,
											"end": 2655,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2646,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2635,
											"end": 2640,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2624,
											"end": 2628,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2619,
											"end": 2622,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2615,
											"end": 2629,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2609,
											"end": 2656,
											"name": "MCOPY",
											"source": 13
										},
										{
											"begin": 2701,
											"end": 2702,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2694,
											"end": 2698,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2685,
											"end": 2691,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2680,
											"end": 2683,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2676,
											"end": 2692,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2672,
											"end": 2699,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2665,
											"end": 2703,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2764,
											"end": 2768,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2757,
											"end": 2759,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2748,
											"end": 2750,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2740,
											"end": 2746,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2736,
											"end": 2751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2732,
											"end": 2761,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2727,
											"end": 2730,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2723,
											"end": 2762,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2719,
											"end": 2769,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2712,
											"end": 2769,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2712,
											"end": 2769,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2712,
											"end": 2769,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2486,
											"end": 2775,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2486,
											"end": 2775,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2486,
											"end": 2775,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2486,
											"end": 2775,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2486,
											"end": 2775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2780,
											"end": 3000,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 2780,
											"end": 3000,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2929,
											"end": 2931,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2918,
											"end": 2927,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2911,
											"end": 2932,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2892,
											"end": 2896,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2949,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 2990,
											"end": 2992,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2979,
											"end": 2988,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2975,
											"end": 2993,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2967,
											"end": 2973,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2949,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 2949,
											"end": 2994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3005,
											"end": 3469,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 3005,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3100,
											"end": 3106,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3108,
											"end": 3114,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3161,
											"end": 3163,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3149,
											"end": 3158,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3140,
											"end": 3147,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3136,
											"end": 3159,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3132,
											"end": 3164,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3129,
											"end": 3181,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3129,
											"end": 3181,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 3129,
											"end": 3181,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3177,
											"end": 3178,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3174,
											"end": 3175,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3167,
											"end": 3179,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3129,
											"end": 3181,
											"name": "tag",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 3129,
											"end": 3181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3200,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 3219,
											"end": 3228,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3200,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 3200,
											"end": 3229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3200,
											"end": 3229,
											"name": "tag",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 3200,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3190,
											"end": 3229,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3280,
											"end": 3282,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3252,
											"end": 3284,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3296,
											"end": 3326,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3296,
											"end": 3326,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3293,
											"end": 3343,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3293,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 3293,
											"end": 3343,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3339,
											"end": 3340,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3336,
											"end": 3337,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3293,
											"end": 3343,
											"name": "tag",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 3293,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3362,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 3404,
											"end": 3411,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3395,
											"end": 3401,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3384,
											"end": 3393,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3380,
											"end": 3402,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3362,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 3362,
											"end": 3412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3362,
											"end": 3412,
											"name": "tag",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 3362,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3352,
											"end": 3412,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3352,
											"end": 3412,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3352,
											"end": 3412,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3459,
											"end": 3461,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3448,
											"end": 3457,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3444,
											"end": 3462,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3431,
											"end": 3463,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3421,
											"end": 3463,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3421,
											"end": 3463,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3005,
											"end": 3469,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3005,
											"end": 3469,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3005,
											"end": 3469,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3005,
											"end": 3469,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3005,
											"end": 3469,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3005,
											"end": 3469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3474,
											"end": 3913,
											"name": "tag",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 3474,
											"end": 3913,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3527,
											"end": 3530,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3570,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3559,
											"end": 3571,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3592,
											"end": 3598,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3587,
											"end": 3590,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3618,
											"end": 3622,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3647,
											"end": 3651,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3642,
											"end": 3645,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3638,
											"end": 3652,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3631,
											"end": 3652,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 3631,
											"end": 3652,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3686,
											"end": 3690,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3679,
											"end": 3684,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3675,
											"end": 3691,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3709,
											"end": 3710,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3719,
											"end": 3888,
											"name": "tag",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 3719,
											"end": 3888,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3733,
											"end": 3739,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3730,
											"end": 3731,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3727,
											"end": 3740,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3719,
											"end": 3888,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3719,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 3719,
											"end": 3888,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3794,
											"end": 3807,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3794,
											"end": 3807,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3782,
											"end": 3808,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3782,
											"end": 3808,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3828,
											"end": 3840,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 3828,
											"end": 3840,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3828,
											"end": 3840,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3828,
											"end": 3840,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 3863,
											"end": 3878,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3863,
											"end": 3878,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3863,
											"end": 3878,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3863,
											"end": 3878,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3755,
											"end": 3756,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3748,
											"end": 3757,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3719,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 3719,
											"end": 3888,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3719,
											"end": 3888,
											"name": "tag",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 3719,
											"end": 3888,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3904,
											"end": 3907,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 3904,
											"end": 3907,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 3474,
											"end": 3913,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3474,
											"end": 3913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3918,
											"end": 4179,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 3918,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4097,
											"end": 4099,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4086,
											"end": 4095,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4079,
											"end": 4100,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4060,
											"end": 4064,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4117,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 4169,
											"end": 4171,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4158,
											"end": 4167,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4154,
											"end": 4172,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4146,
											"end": 4152,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4117,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 4117,
											"end": 4173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4184,
											"end": 4364,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 4184,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4243,
											"end": 4249,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4296,
											"end": 4298,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4284,
											"end": 4293,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4282,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4271,
											"end": 4294,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4267,
											"end": 4299,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4264,
											"end": 4316,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4264,
											"end": 4316,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 4264,
											"end": 4316,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4313,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4309,
											"end": 4310,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4264,
											"end": 4316,
											"name": "tag",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 4264,
											"end": 4316,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4335,
											"end": 4358,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4335,
											"end": 4358,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4184,
											"end": 4364,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4184,
											"end": 4364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4369,
											"end": 4552,
											"name": "tag",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 4369,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4429,
											"end": 4433,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4451,
											"end": 4481,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4451,
											"end": 4481,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4448,
											"end": 4504,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4448,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 4448,
											"end": 4504,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4484,
											"end": 4502,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 4484,
											"end": 4502,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 4484,
											"end": 4502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4484,
											"end": 4502,
											"name": "tag",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 4484,
											"end": 4502,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4529,
											"end": 4530,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 4525,
											"end": 4539,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 4541,
											"end": 4545,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4521,
											"end": 4546,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4546,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4369,
											"end": 4552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4557,
											"end": 5225,
											"name": "tag",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 4557,
											"end": 5225,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4611,
											"end": 4616,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4664,
											"end": 4667,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4657,
											"end": 4661,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4649,
											"end": 4655,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4645,
											"end": 4662,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4641,
											"end": 4668,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4631,
											"end": 4686,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 4631,
											"end": 4686,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4682,
											"end": 4683,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4679,
											"end": 4680,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4672,
											"end": 4684,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4631,
											"end": 4686,
											"name": "tag",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 4631,
											"end": 4686,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4718,
											"end": 4724,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4705,
											"end": 4725,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4744,
											"end": 4748,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4768,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 4784,
											"end": 4827,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 4824,
											"end": 4826,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4784,
											"end": 4827,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 4784,
											"end": 4827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4784,
											"end": 4827,
											"name": "tag",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 4784,
											"end": 4827,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4768,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 4768,
											"end": 4828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4768,
											"end": 4828,
											"name": "tag",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 4768,
											"end": 4828,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4853,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4874,
											"end": 4876,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4869,
											"end": 4872,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4862,
											"end": 4877,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4902,
											"end": 4906,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4897,
											"end": 4900,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4893,
											"end": 4907,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4886,
											"end": 4907,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4886,
											"end": 4907,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4959,
											"end": 4963,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4953,
											"end": 4955,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4950,
											"end": 4951,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 4946,
											"end": 4956,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 4938,
											"end": 4944,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4934,
											"end": 4957,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4930,
											"end": 4964,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4916,
											"end": 4964,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4916,
											"end": 4964,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4987,
											"end": 4990,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4979,
											"end": 4985,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4976,
											"end": 4991,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4973,
											"end": 5008,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4973,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 4973,
											"end": 5008,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5004,
											"end": 5005,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5001,
											"end": 5002,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4994,
											"end": 5006,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4973,
											"end": 5008,
											"name": "tag",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 4973,
											"end": 5008,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5040,
											"end": 5044,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5032,
											"end": 5038,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5028,
											"end": 5045,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5054,
											"end": 5196,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 5054,
											"end": 5196,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5070,
											"end": 5076,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5065,
											"end": 5068,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5062,
											"end": 5077,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5054,
											"end": 5196,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5054,
											"end": 5196,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 5054,
											"end": 5196,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5136,
											"end": 5153,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5136,
											"end": 5153,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5124,
											"end": 5154,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5124,
											"end": 5154,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5174,
											"end": 5186,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5174,
											"end": 5186,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5174,
											"end": 5186,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5174,
											"end": 5186,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5087,
											"end": 5099,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5087,
											"end": 5099,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5054,
											"end": 5196,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 5054,
											"end": 5196,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5054,
											"end": 5196,
											"name": "tag",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 5054,
											"end": 5196,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5214,
											"end": 5219,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 4557,
											"end": 5225,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4557,
											"end": 5225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5230,
											"end": 6174,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 5230,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5384,
											"end": 5390,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5392,
											"end": 5398,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5400,
											"end": 5406,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5408,
											"end": 5414,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5416,
											"end": 5422,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5469,
											"end": 5472,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 5457,
											"end": 5466,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5455,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 5444,
											"end": 5467,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5440,
											"end": 5473,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5437,
											"end": 5490,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5437,
											"end": 5490,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 5437,
											"end": 5490,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5486,
											"end": 5487,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5483,
											"end": 5484,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5476,
											"end": 5488,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5437,
											"end": 5490,
											"name": "tag",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 5437,
											"end": 5490,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5509,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 5528,
											"end": 5537,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5509,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 5509,
											"end": 5538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5509,
											"end": 5538,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 5509,
											"end": 5538,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5499,
											"end": 5538,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5499,
											"end": 5538,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5557,
											"end": 5595,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 5591,
											"end": 5593,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5589,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5576,
											"end": 5594,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5557,
											"end": 5595,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 5557,
											"end": 5595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5557,
											"end": 5595,
											"name": "tag",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 5557,
											"end": 5595,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5547,
											"end": 5595,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5646,
											"end": 5648,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5631,
											"end": 5649,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5631,
											"end": 5649,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5699,
											"end": 5713,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5699,
											"end": 5713,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5699,
											"end": 5713,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5696,
											"end": 5730,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5696,
											"end": 5730,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 5696,
											"end": 5730,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5726,
											"end": 5727,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5723,
											"end": 5724,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5728,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5696,
											"end": 5730,
											"name": "tag",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 5696,
											"end": 5730,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5749,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 5802,
											"end": 5809,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 5793,
											"end": 5799,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5782,
											"end": 5791,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 5778,
											"end": 5800,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5749,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 5749,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5749,
											"end": 5810,
											"name": "tag",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 5749,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5739,
											"end": 5810,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5739,
											"end": 5810,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5863,
											"end": 5865,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5852,
											"end": 5861,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 5848,
											"end": 5866,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5835,
											"end": 5867,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5819,
											"end": 5867,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5819,
											"end": 5867,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5892,
											"end": 5894,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5882,
											"end": 5890,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5879,
											"end": 5895,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5876,
											"end": 5912,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5876,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 5876,
											"end": 5912,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5908,
											"end": 5909,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5905,
											"end": 5906,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5898,
											"end": 5910,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5876,
											"end": 5912,
											"name": "tag",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 5876,
											"end": 5912,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5931,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 5986,
											"end": 5993,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 5975,
											"end": 5983,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5964,
											"end": 5973,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 5960,
											"end": 5984,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5931,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 5931,
											"end": 5994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5931,
											"end": 5994,
											"name": "tag",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 5931,
											"end": 5994,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5921,
											"end": 5994,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5921,
											"end": 5994,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6047,
											"end": 6050,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 6036,
											"end": 6045,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6032,
											"end": 6051,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6019,
											"end": 6052,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6003,
											"end": 6052,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6003,
											"end": 6052,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6077,
											"end": 6079,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6067,
											"end": 6075,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6064,
											"end": 6080,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6061,
											"end": 6097,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6061,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 6061,
											"end": 6097,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6093,
											"end": 6094,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6090,
											"end": 6091,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6083,
											"end": 6095,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6061,
											"end": 6097,
											"name": "tag",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 6061,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6061,
											"end": 6097,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6116,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 6160,
											"end": 6167,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6149,
											"end": 6157,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6138,
											"end": 6147,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 6134,
											"end": 6158,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6116,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 6116,
											"end": 6168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6116,
											"end": 6168,
											"name": "tag",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 6116,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6106,
											"end": 6168,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6106,
											"end": 6168,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6106,
											"end": 6168,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5230,
											"end": 6174,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5230,
											"end": 6174,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 5230,
											"end": 6174,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5230,
											"end": 6174,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5230,
											"end": 6174,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 5230,
											"end": 6174,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5230,
											"end": 6174,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5230,
											"end": 6174,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5230,
											"end": 6174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6179,
											"end": 6853,
											"name": "tag",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 6179,
											"end": 6853,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6233,
											"end": 6238,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6286,
											"end": 6289,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6279,
											"end": 6283,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6271,
											"end": 6277,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6267,
											"end": 6284,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6263,
											"end": 6290,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6253,
											"end": 6308,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 6253,
											"end": 6308,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6304,
											"end": 6305,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6301,
											"end": 6302,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6294,
											"end": 6306,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6253,
											"end": 6308,
											"name": "tag",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 6253,
											"end": 6308,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6340,
											"end": 6346,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6327,
											"end": 6347,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6366,
											"end": 6370,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6390,
											"end": 6450,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 6406,
											"end": 6449,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 6446,
											"end": 6448,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6406,
											"end": 6449,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 6406,
											"end": 6449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6390,
											"end": 6450,
											"name": "tag",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 6390,
											"end": 6450,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6472,
											"end": 6475,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6496,
											"end": 6498,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6491,
											"end": 6494,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6484,
											"end": 6499,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6524,
											"end": 6528,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6519,
											"end": 6522,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6515,
											"end": 6529,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6508,
											"end": 6529,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6508,
											"end": 6529,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6575,
											"end": 6577,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6572,
											"end": 6573,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 6568,
											"end": 6578,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 6560,
											"end": 6566,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6556,
											"end": 6579,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6552,
											"end": 6586,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6586,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6586,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6609,
											"end": 6612,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6601,
											"end": 6607,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6598,
											"end": 6613,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6595,
											"end": 6630,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6595,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 6595,
											"end": 6630,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6626,
											"end": 6627,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6623,
											"end": 6624,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6616,
											"end": 6628,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6595,
											"end": 6630,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 6595,
											"end": 6630,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6662,
											"end": 6666,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6654,
											"end": 6660,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6650,
											"end": 6667,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6676,
											"end": 6824,
											"name": "tag",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 6676,
											"end": 6824,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6692,
											"end": 6698,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6687,
											"end": 6690,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6684,
											"end": 6699,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 6676,
											"end": 6824,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6676,
											"end": 6824,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 6676,
											"end": 6824,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6758,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 6777,
											"end": 6780,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6758,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 6758,
											"end": 6781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6758,
											"end": 6781,
											"name": "tag",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 6758,
											"end": 6781,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6746,
											"end": 6782,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6746,
											"end": 6782,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6802,
											"end": 6814,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6802,
											"end": 6814,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6802,
											"end": 6814,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6802,
											"end": 6814,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6709,
											"end": 6721,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6709,
											"end": 6721,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6676,
											"end": 6824,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 6676,
											"end": 6824,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6858,
											"end": 7453,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 6858,
											"end": 7453,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6976,
											"end": 6982,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6984,
											"end": 6990,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7037,
											"end": 7039,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7025,
											"end": 7034,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7016,
											"end": 7023,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7012,
											"end": 7035,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7008,
											"end": 7040,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7005,
											"end": 7057,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7005,
											"end": 7057,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 7005,
											"end": 7057,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7053,
											"end": 7054,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7050,
											"end": 7051,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7043,
											"end": 7055,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7005,
											"end": 7057,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 7005,
											"end": 7057,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7080,
											"end": 7103,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7080,
											"end": 7103,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7152,
											"end": 7166,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7152,
											"end": 7166,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7152,
											"end": 7166,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7149,
											"end": 7183,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7149,
											"end": 7183,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 7149,
											"end": 7183,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7179,
											"end": 7180,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7176,
											"end": 7177,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7169,
											"end": 7181,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7149,
											"end": 7183,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 7149,
											"end": 7183,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7202,
											"end": 7263,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 7255,
											"end": 7262,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7246,
											"end": 7252,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7235,
											"end": 7244,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 7231,
											"end": 7253,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7202,
											"end": 7263,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 7202,
											"end": 7263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7202,
											"end": 7263,
											"name": "tag",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 7202,
											"end": 7263,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7192,
											"end": 7263,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7192,
											"end": 7263,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7316,
											"end": 7318,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7305,
											"end": 7314,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7301,
											"end": 7319,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7288,
											"end": 7320,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7272,
											"end": 7320,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7272,
											"end": 7320,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7345,
											"end": 7347,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7335,
											"end": 7343,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7332,
											"end": 7348,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7329,
											"end": 7365,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7329,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 7329,
											"end": 7365,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7361,
											"end": 7362,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7358,
											"end": 7359,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7351,
											"end": 7363,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7329,
											"end": 7365,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 7329,
											"end": 7365,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7329,
											"end": 7365,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7384,
											"end": 7447,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 7439,
											"end": 7446,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7428,
											"end": 7436,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7417,
											"end": 7426,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7413,
											"end": 7437,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7384,
											"end": 7447,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 7384,
											"end": 7447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7384,
											"end": 7447,
											"name": "tag",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 7384,
											"end": 7447,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7374,
											"end": 7447,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7374,
											"end": 7447,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7374,
											"end": 7447,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6858,
											"end": 7453,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6858,
											"end": 7453,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6858,
											"end": 7453,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6858,
											"end": 7453,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6858,
											"end": 7453,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6858,
											"end": 7453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7458,
											"end": 7661,
											"name": "tag",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 7458,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7622,
											"end": 7654,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7622,
											"end": 7654,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7622,
											"end": 7654,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7622,
											"end": 7654,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7604,
											"end": 7655,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7604,
											"end": 7655,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7592,
											"end": 7594,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7577,
											"end": 7595,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7577,
											"end": 7595,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7458,
											"end": 7661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7666,
											"end": 8013,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 7666,
											"end": 8013,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7731,
											"end": 7737,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7739,
											"end": 7745,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7792,
											"end": 7794,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7780,
											"end": 7789,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7771,
											"end": 7778,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7790,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7760,
											"end": 7812,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7760,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 7760,
											"end": 7812,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7808,
											"end": 7809,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7805,
											"end": 7806,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7798,
											"end": 7810,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7760,
											"end": 7812,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 7760,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7831,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 7850,
											"end": 7859,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7831,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 7831,
											"end": 7860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7831,
											"end": 7860,
											"name": "tag",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 7831,
											"end": 7860,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7821,
											"end": 7860,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7821,
											"end": 7860,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7910,
											"end": 7912,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7899,
											"end": 7908,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7895,
											"end": 7913,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7882,
											"end": 7914,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7957,
											"end": 7962,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7950,
											"end": 7963,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7943,
											"end": 7964,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7936,
											"end": 7941,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7933,
											"end": 7965,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 7923,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 7923,
											"end": 7983,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7979,
											"end": 7980,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7976,
											"end": 7977,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7969,
											"end": 7981,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7923,
											"end": 7983,
											"name": "tag",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 7923,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8002,
											"end": 8007,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7992,
											"end": 8007,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7992,
											"end": 8007,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7992,
											"end": 8007,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7666,
											"end": 8013,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7666,
											"end": 8013,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7666,
											"end": 8013,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7666,
											"end": 8013,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7666,
											"end": 8013,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7666,
											"end": 8013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8018,
											"end": 8655,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 8018,
											"end": 8655,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8130,
											"end": 8136,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8138,
											"end": 8144,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8146,
											"end": 8152,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8199,
											"end": 8201,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 8187,
											"end": 8196,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8178,
											"end": 8185,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8174,
											"end": 8197,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8170,
											"end": 8202,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 8167,
											"end": 8219,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8167,
											"end": 8219,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 8167,
											"end": 8219,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8215,
											"end": 8216,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8212,
											"end": 8213,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8205,
											"end": 8217,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8167,
											"end": 8219,
											"name": "tag",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 8167,
											"end": 8219,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8242,
											"end": 8265,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8242,
											"end": 8265,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8314,
											"end": 8328,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8314,
											"end": 8328,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8314,
											"end": 8328,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8311,
											"end": 8345,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8311,
											"end": 8345,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 8311,
											"end": 8345,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8341,
											"end": 8342,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8338,
											"end": 8339,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8331,
											"end": 8343,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8311,
											"end": 8345,
											"name": "tag",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 8311,
											"end": 8345,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8364,
											"end": 8425,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 8417,
											"end": 8424,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 8408,
											"end": 8414,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8397,
											"end": 8406,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 8393,
											"end": 8415,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8364,
											"end": 8425,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 8364,
											"end": 8425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8364,
											"end": 8425,
											"name": "tag",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 8364,
											"end": 8425,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8354,
											"end": 8425,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 8354,
											"end": 8425,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8478,
											"end": 8480,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8467,
											"end": 8476,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8463,
											"end": 8481,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8450,
											"end": 8482,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 8434,
											"end": 8482,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8434,
											"end": 8482,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8507,
											"end": 8509,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8497,
											"end": 8505,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8494,
											"end": 8510,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8491,
											"end": 8527,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8491,
											"end": 8527,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 8491,
											"end": 8527,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8523,
											"end": 8524,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8520,
											"end": 8521,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8513,
											"end": 8525,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8491,
											"end": 8527,
											"name": "tag",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 8491,
											"end": 8527,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8491,
											"end": 8527,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8546,
											"end": 8598,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 8590,
											"end": 8597,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8579,
											"end": 8587,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8568,
											"end": 8577,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 8564,
											"end": 8588,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8546,
											"end": 8598,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 8546,
											"end": 8598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8660,
											"end": 8920,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 8660,
											"end": 8920,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8728,
											"end": 8734,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8736,
											"end": 8742,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8789,
											"end": 8791,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8777,
											"end": 8786,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8768,
											"end": 8775,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8764,
											"end": 8787,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8760,
											"end": 8792,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 8757,
											"end": 8809,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8757,
											"end": 8809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 8757,
											"end": 8809,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8805,
											"end": 8806,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8802,
											"end": 8803,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8795,
											"end": 8807,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8757,
											"end": 8809,
											"name": "tag",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 8757,
											"end": 8809,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8828,
											"end": 8857,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 8847,
											"end": 8856,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8828,
											"end": 8857,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 8828,
											"end": 8857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8828,
											"end": 8857,
											"name": "tag",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 8828,
											"end": 8857,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8818,
											"end": 8857,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8818,
											"end": 8857,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8876,
											"end": 8914,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 8910,
											"end": 8912,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8899,
											"end": 8908,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8895,
											"end": 8913,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8876,
											"end": 8914,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 8876,
											"end": 8914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8876,
											"end": 8914,
											"name": "tag",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 8876,
											"end": 8914,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8866,
											"end": 8914,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8866,
											"end": 8914,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8660,
											"end": 8920,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8660,
											"end": 8920,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8660,
											"end": 8920,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8660,
											"end": 8920,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8660,
											"end": 8920,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8660,
											"end": 8920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8925,
											"end": 9532,
											"name": "tag",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 8925,
											"end": 9532,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9029,
											"end": 9035,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9037,
											"end": 9043,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9045,
											"end": 9051,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9053,
											"end": 9059,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9061,
											"end": 9067,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9114,
											"end": 9117,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 9102,
											"end": 9111,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9093,
											"end": 9100,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9089,
											"end": 9112,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9085,
											"end": 9118,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9082,
											"end": 9135,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9082,
											"end": 9135,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 9082,
											"end": 9135,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9131,
											"end": 9132,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9128,
											"end": 9129,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9121,
											"end": 9133,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9082,
											"end": 9135,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 9082,
											"end": 9135,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9154,
											"end": 9183,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 9173,
											"end": 9182,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9154,
											"end": 9183,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 9154,
											"end": 9183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9154,
											"end": 9183,
											"name": "tag",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 9154,
											"end": 9183,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9144,
											"end": 9183,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 9144,
											"end": 9183,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9202,
											"end": 9240,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 9236,
											"end": 9238,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9225,
											"end": 9234,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9221,
											"end": 9239,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9202,
											"end": 9240,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 9202,
											"end": 9240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9202,
											"end": 9240,
											"name": "tag",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 9202,
											"end": 9240,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9192,
											"end": 9240,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9287,
											"end": 9289,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9272,
											"end": 9290,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9272,
											"end": 9290,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9259,
											"end": 9291,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 9259,
											"end": 9291,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9338,
											"end": 9340,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 9323,
											"end": 9341,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9323,
											"end": 9341,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9310,
											"end": 9342,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 9310,
											"end": 9342,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9393,
											"end": 9396,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 9378,
											"end": 9397,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9378,
											"end": 9397,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9365,
											"end": 9398,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9410,
											"end": 9440,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9410,
											"end": 9440,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9407,
											"end": 9457,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9407,
											"end": 9457,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 9407,
											"end": 9457,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9453,
											"end": 9454,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9450,
											"end": 9451,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9443,
											"end": 9455,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9407,
											"end": 9457,
											"name": "tag",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 9407,
											"end": 9457,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9476,
											"end": 9526,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 9518,
											"end": 9525,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9509,
											"end": 9515,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9498,
											"end": 9507,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 9494,
											"end": 9516,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9476,
											"end": 9526,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 9476,
											"end": 9526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9537,
											"end": 9723,
											"name": "tag",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 9537,
											"end": 9723,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9596,
											"end": 9602,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9649,
											"end": 9651,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9637,
											"end": 9646,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9628,
											"end": 9635,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9624,
											"end": 9647,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9620,
											"end": 9652,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9617,
											"end": 9669,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9617,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 9617,
											"end": 9669,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9665,
											"end": 9666,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9662,
											"end": 9663,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9655,
											"end": 9667,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9617,
											"end": 9669,
											"name": "tag",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 9617,
											"end": 9669,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9688,
											"end": 9717,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 9707,
											"end": 9716,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9688,
											"end": 9717,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 9688,
											"end": 9717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9728,
											"end": 10108,
											"name": "tag",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 9728,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9807,
											"end": 9808,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 9803,
											"end": 9815,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9803,
											"end": 9815,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9803,
											"end": 9815,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 9803,
											"end": 9815,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9850,
											"end": 9862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9850,
											"end": 9862,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9850,
											"end": 9862,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9871,
											"end": 9932,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 9871,
											"end": 9932,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9925,
											"end": 9929,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 9917,
											"end": 9923,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9913,
											"end": 9930,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9903,
											"end": 9930,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9903,
											"end": 9930,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9871,
											"end": 9932,
											"name": "tag",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 9871,
											"end": 9932,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9978,
											"end": 9980,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9970,
											"end": 9976,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9967,
											"end": 9981,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 9947,
											"end": 9965,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9944,
											"end": 9982,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9941,
											"end": 10102,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 9941,
											"end": 10102,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10024,
											"end": 10034,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 10019,
											"end": 10022,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 10015,
											"end": 10035,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 10012,
											"end": 10013,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10005,
											"end": 10036,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10059,
											"end": 10063,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 10056,
											"end": 10057,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10049,
											"end": 10064,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10087,
											"end": 10091,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 10084,
											"end": 10085,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10077,
											"end": 10092,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9941,
											"end": 10102,
											"name": "tag",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 9941,
											"end": 10102,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9941,
											"end": 10102,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9728,
											"end": 10108,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9728,
											"end": 10108,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9728,
											"end": 10108,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9728,
											"end": 10108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10113,
											"end": 10240,
											"name": "tag",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 10113,
											"end": 10240,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10174,
											"end": 10184,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 10169,
											"end": 10172,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 10162,
											"end": 10163,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10155,
											"end": 10186,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10205,
											"end": 10209,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 10202,
											"end": 10203,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10195,
											"end": 10210,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10229,
											"end": 10233,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 10226,
											"end": 10227,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10219,
											"end": 10234,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 10245,
											"end": 10380,
											"name": "tag",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 10245,
											"end": 10380,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10284,
											"end": 10287,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10305,
											"end": 10322,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 10305,
											"end": 10322,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10305,
											"end": 10322,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10302,
											"end": 10345,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 10302,
											"end": 10345,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10325,
											"end": 10343,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 10325,
											"end": 10343,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 10325,
											"end": 10343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10325,
											"end": 10343,
											"name": "tag",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 10325,
											"end": 10343,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10372,
											"end": 10373,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 10361,
											"end": 10374,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10361,
											"end": 10374,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10245,
											"end": 10380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10385,
											"end": 10512,
											"name": "tag",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 10385,
											"end": 10512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10446,
											"end": 10456,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 10441,
											"end": 10444,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 10437,
											"end": 10457,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 10434,
											"end": 10435,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10427,
											"end": 10458,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10477,
											"end": 10481,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 10474,
											"end": 10475,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10467,
											"end": 10482,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10501,
											"end": 10505,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 10498,
											"end": 10499,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10491,
											"end": 10506,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 10517,
											"end": 10821,
											"name": "tag",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 10517,
											"end": 10821,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10747,
											"end": 10762,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10747,
											"end": 10762,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10747,
											"end": 10762,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10729,
											"end": 10763,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10729,
											"end": 10763,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10799,
											"end": 10814,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10799,
											"end": 10814,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10794,
											"end": 10796,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10779,
											"end": 10797,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10779,
											"end": 10797,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10772,
											"end": 10815,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10679,
											"end": 10681,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10664,
											"end": 10682,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10664,
											"end": 10682,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10517,
											"end": 10821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11205,
											"end": 11723,
											"name": "tag",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 11205,
											"end": 11723,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11307,
											"end": 11309,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 11302,
											"end": 11305,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11299,
											"end": 11310,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 11296,
											"end": 11717,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11296,
											"end": 11717,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 11296,
											"end": 11717,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11343,
											"end": 11348,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11340,
											"end": 11341,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11333,
											"end": 11349,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11387,
											"end": 11391,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11384,
											"end": 11385,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11374,
											"end": 11392,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 11457,
											"end": 11459,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 11445,
											"end": 11455,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11441,
											"end": 11460,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11438,
											"end": 11439,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 11434,
											"end": 11461,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 11428,
											"end": 11432,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11424,
											"end": 11462,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11493,
											"end": 11497,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11481,
											"end": 11491,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11478,
											"end": 11498,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 11475,
											"end": 11522,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11475,
											"end": 11522,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 11475,
											"end": 11522,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11516,
											"end": 11520,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11475,
											"end": 11522,
											"name": "tag",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 11475,
											"end": 11522,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11571,
											"end": 11573,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 11566,
											"end": 11569,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11562,
											"end": 11574,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11559,
											"end": 11560,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 11555,
											"end": 11575,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 11549,
											"end": 11553,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11545,
											"end": 11576,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11535,
											"end": 11576,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11535,
											"end": 11576,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11626,
											"end": 11707,
											"name": "tag",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 11626,
											"end": 11707,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11644,
											"end": 11646,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11637,
											"end": 11642,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11634,
											"end": 11647,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 11626,
											"end": 11707,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11626,
											"end": 11707,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 11626,
											"end": 11707,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11703,
											"end": 11704,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11689,
											"end": 11705,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11689,
											"end": 11705,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 11670,
											"end": 11671,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 11659,
											"end": 11672,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11626,
											"end": 11707,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 11626,
											"end": 11707,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11899,
											"end": 13244,
											"name": "tag",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 11899,
											"end": 13244,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12019,
											"end": 12029,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12019,
											"end": 12029,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12041,
											"end": 12071,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12041,
											"end": 12071,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 12038,
											"end": 12094,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12038,
											"end": 12094,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 12038,
											"end": 12094,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12074,
											"end": 12092,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 12074,
											"end": 12092,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 12074,
											"end": 12092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12074,
											"end": 12092,
											"name": "tag",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 12074,
											"end": 12092,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12103,
											"end": 12200,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 12193,
											"end": 12199,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12153,
											"end": 12191,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 12185,
											"end": 12189,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12179,
											"end": 12190,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 12153,
											"end": 12191,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 12153,
											"end": 12191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12153,
											"end": 12191,
											"name": "tag",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 12153,
											"end": 12191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12147,
											"end": 12151,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12103,
											"end": 12200,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 12103,
											"end": 12200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12103,
											"end": 12200,
											"name": "tag",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 12103,
											"end": 12200,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12255,
											"end": 12259,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12255,
											"end": 12259,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12312,
											"end": 12314,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 12301,
											"end": 12315,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12301,
											"end": 12315,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 12329,
											"end": 12330,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 12324,
											"end": 12987,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12324,
											"end": 12987,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 12324,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 12324,
											"end": 12987,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13031,
											"end": 13032,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13048,
											"end": 13054,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13045,
											"end": 13134,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13045,
											"end": 13134,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 13045,
											"end": 13134,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13100,
											"end": 13119,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13100,
											"end": 13119,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13100,
											"end": 13119,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13094,
											"end": 13120,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 13045,
											"end": 13134,
											"name": "tag",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 13045,
											"end": 13134,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11856,
											"end": 11857,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 11852,
											"end": 11863,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11852,
											"end": 11863,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11852,
											"end": 11863,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 11848,
											"end": 11872,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 11844,
											"end": 11873,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 11834,
											"end": 11874,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11880,
											"end": 11881,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 11876,
											"end": 11887,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11876,
											"end": 11887,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11876,
											"end": 11887,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 11831,
											"end": 11888,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 13147,
											"end": 13228,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13147,
											"end": 13228,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 12294,
											"end": 13238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 12294,
											"end": 13238,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12324,
											"end": 12987,
											"name": "tag",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 12324,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11152,
											"end": 11153,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11145,
											"end": 11159,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11145,
											"end": 11159,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11145,
											"end": 11159,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11189,
											"end": 11193,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11176,
											"end": 11194,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11176,
											"end": 11194,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12360,
											"end": 12380,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12360,
											"end": 12380,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12360,
											"end": 12380,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12478,
											"end": 12714,
											"name": "tag",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 12478,
											"end": 12714,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12492,
											"end": 12499,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12490,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12486,
											"end": 12500,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12478,
											"end": 12714,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12478,
											"end": 12714,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 12478,
											"end": 12714,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12581,
											"end": 12600,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 12581,
											"end": 12600,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12581,
											"end": 12600,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12575,
											"end": 12601,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12560,
											"end": 12602,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12560,
											"end": 12602,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 12673,
											"end": 12700,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 12673,
											"end": 12700,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12673,
											"end": 12700,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12673,
											"end": 12700,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 12641,
											"end": 12642,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 12629,
											"end": 12643,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12629,
											"end": 12643,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12629,
											"end": 12643,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12629,
											"end": 12643,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12508,
											"end": 12527,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12508,
											"end": 12527,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12478,
											"end": 12714,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 12478,
											"end": 12714,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12478,
											"end": 12714,
											"name": "tag",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 12478,
											"end": 12714,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12482,
											"end": 12485,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12742,
											"end": 12748,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12733,
											"end": 12740,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12730,
											"end": 12749,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12727,
											"end": 12928,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12727,
											"end": 12928,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 12727,
											"end": 12928,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12803,
											"end": 12822,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 12803,
											"end": 12822,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12803,
											"end": 12822,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12797,
											"end": 12823,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12886,
											"end": 12887,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 12882,
											"end": 12896,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 12882,
											"end": 12896,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12882,
											"end": 12896,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 12898,
											"end": 12901,
											"name": "PUSH",
											"source": 13,
											"value": "F8"
										},
										{
											"begin": 12878,
											"end": 12902,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12874,
											"end": 12911,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 12870,
											"end": 12912,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 12855,
											"end": 12913,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12840,
											"end": 12914,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12840,
											"end": 12914,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 12727,
											"end": 12928,
											"name": "tag",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 12727,
											"end": 12928,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12974,
											"end": 12975,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 12958,
											"end": 12972,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12958,
											"end": 12972,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12958,
											"end": 12972,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 12954,
											"end": 12976,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12941,
											"end": 12977,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12941,
											"end": 12977,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11899,
											"end": 13244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13671,
											"end": 13796,
											"name": "tag",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 13671,
											"end": 13796,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13736,
											"end": 13745,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13736,
											"end": 13745,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13736,
											"end": 13745,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13757,
											"end": 13767,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13757,
											"end": 13767,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13757,
											"end": 13767,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 13754,
											"end": 13790,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13754,
											"end": 13790,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 13754,
											"end": 13790,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13770,
											"end": 13788,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 13770,
											"end": 13788,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 13770,
											"end": 13788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13801,
											"end": 14266,
											"name": "tag",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 13801,
											"end": 14266,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14058,
											"end": 14060,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14047,
											"end": 14056,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14040,
											"end": 14061,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14021,
											"end": 14025,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14084,
											"end": 14140,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 14136,
											"end": 14138,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14125,
											"end": 14134,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14121,
											"end": 14139,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14113,
											"end": 14119,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14084,
											"end": 14140,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 14084,
											"end": 14140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14084,
											"end": 14140,
											"name": "tag",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 14084,
											"end": 14140,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14188,
											"end": 14197,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14180,
											"end": 14186,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14176,
											"end": 14198,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14171,
											"end": 14173,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14160,
											"end": 14169,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14156,
											"end": 14174,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14149,
											"end": 14199,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14216,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 14253,
											"end": 14259,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14245,
											"end": 14251,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14216,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 14216,
											"end": 14260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14216,
											"end": 14260,
											"name": "tag",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 14216,
											"end": 14260,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14208,
											"end": 14260,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 13801,
											"end": 14266,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13801,
											"end": 14266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14271,
											"end": 14832,
											"name": "tag",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 14271,
											"end": 14832,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14568,
											"end": 14583,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 14568,
											"end": 14583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14568,
											"end": 14583,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14550,
											"end": 14584,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14550,
											"end": 14584,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14620,
											"end": 14635,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14620,
											"end": 14635,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14615,
											"end": 14617,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14600,
											"end": 14618,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14600,
											"end": 14618,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14593,
											"end": 14636,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14667,
											"end": 14669,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14652,
											"end": 14670,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14652,
											"end": 14670,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14645,
											"end": 14679,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14645,
											"end": 14679,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14645,
											"end": 14679,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14710,
											"end": 14712,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 14695,
											"end": 14713,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14695,
											"end": 14713,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14688,
											"end": 14722,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14688,
											"end": 14722,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14688,
											"end": 14722,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14530,
											"end": 14533,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 14753,
											"end": 14756,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 14738,
											"end": 14757,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14738,
											"end": 14757,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14731,
											"end": 14763,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14731,
											"end": 14763,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14731,
											"end": 14763,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14493,
											"end": 14497,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14493,
											"end": 14497,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14780,
											"end": 14826,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 14780,
											"end": 14826,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14806,
											"end": 14825,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14806,
											"end": 14825,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14798,
											"end": 14804,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14780,
											"end": 14826,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 14780,
											"end": 14826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14780,
											"end": 14826,
											"name": "tag",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 14780,
											"end": 14826,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14772,
											"end": 14826,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 14271,
											"end": 14832,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14271,
											"end": 14832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14837,
											"end": 15086,
											"name": "tag",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 14837,
											"end": 15086,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14906,
											"end": 14912,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14959,
											"end": 14961,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14947,
											"end": 14956,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14938,
											"end": 14945,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14934,
											"end": 14957,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14930,
											"end": 14962,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 14927,
											"end": 14979,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14927,
											"end": 14979,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 14927,
											"end": 14979,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14975,
											"end": 14976,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14972,
											"end": 14973,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14965,
											"end": 14977,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 14927,
											"end": 14979,
											"name": "tag",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 14927,
											"end": 14979,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15007,
											"end": 15016,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15001,
											"end": 15017,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 15026,
											"end": 15056,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 15050,
											"end": 15055,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15026,
											"end": 15056,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 15026,
											"end": 15056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15091,
											"end": 15918,
											"name": "tag",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 15091,
											"end": 15918,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15488,
											"end": 15503,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 15488,
											"end": 15503,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15488,
											"end": 15503,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 15470,
											"end": 15504,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15470,
											"end": 15504,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15540,
											"end": 15555,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15540,
											"end": 15555,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 15535,
											"end": 15537,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15520,
											"end": 15538,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15520,
											"end": 15538,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15513,
											"end": 15556,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15450,
											"end": 15453,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 15587,
											"end": 15589,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 15572,
											"end": 15590,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15572,
											"end": 15590,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15565,
											"end": 15596,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15565,
											"end": 15596,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15565,
											"end": 15596,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15413,
											"end": 15417,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15413,
											"end": 15417,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15619,
											"end": 15676,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 15619,
											"end": 15676,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15656,
											"end": 15675,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15656,
											"end": 15675,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15648,
											"end": 15654,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 15619,
											"end": 15676,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 15619,
											"end": 15676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15619,
											"end": 15676,
											"name": "tag",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 15619,
											"end": 15676,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15724,
											"end": 15733,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15716,
											"end": 15722,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15712,
											"end": 15734,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15707,
											"end": 15709,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 15696,
											"end": 15705,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15692,
											"end": 15710,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15685,
											"end": 15735,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15758,
											"end": 15802,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 15795,
											"end": 15801,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15787,
											"end": 15793,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 15758,
											"end": 15802,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 15758,
											"end": 15802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15758,
											"end": 15802,
											"name": "tag",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 15758,
											"end": 15802,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15744,
											"end": 15802,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15744,
											"end": 15802,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15851,
											"end": 15860,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15843,
											"end": 15849,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15839,
											"end": 15861,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15833,
											"end": 15836,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 15822,
											"end": 15831,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15818,
											"end": 15837,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15811,
											"end": 15862,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15879,
											"end": 15912,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 15905,
											"end": 15911,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15897,
											"end": 15903,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15879,
											"end": 15912,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 15879,
											"end": 15912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15879,
											"end": 15912,
											"name": "tag",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 15879,
											"end": 15912,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15871,
											"end": 15912,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": 15091,
											"end": 15918,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15091,
											"end": 15918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/NftV1Contract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,string,uint256)": "ba7aef43",
							"mintUniqueNFT(address,string,uint256)": "0a1e88d1",
							"mintUniqueNFT(address[],string,uint256)": "a7fd4a02",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setURI(string)": "02fe5305",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenId()": "17d70f7c",
							"tokenURI(uint256)": "c87b56dd",
							"transferOwnership(address)": "f2fde38b",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mintUniqueNFT\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mintUniqueNFT\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newuri\",\"type\":\"string\"}],\"name\":\"setURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NftV1Contract.sol\":\"NftV1Collection\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"contracts/NftV1Contract.sol\":{\"keccak256\":\"0xe78fbe5991e8d69816f1a640904181c833e288e7a1d297f603ca1ccd2fef82de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86555a2ce6c30de374dd0cadcdab7cf30342ed3da35989371ad41035ee5b33b0\",\"dweb:/ipfs/QmQyoJZoTo1JadTFjwr9yHm2CbCWT4Mt9DuoDCQyUShXHS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 326,
								"contract": "contracts/NftV1Contract.sol:NftV1Collection",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 332,
								"contract": "contracts/NftV1Contract.sol:NftV1Collection",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 334,
								"contract": "contracts/NftV1Contract.sol:NftV1Collection",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/NftV1Contract.sol:NftV1Collection",
								"label": "_owner",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 2940,
								"contract": "contracts/NftV1Contract.sol:NftV1Collection",
								"label": "_tokenId",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 2942,
								"contract": "contracts/NftV1Contract.sol:NftV1Collection",
								"label": "_name",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 2944,
								"contract": "contracts/NftV1Contract.sol:NftV1Collection",
								"label": "_symbol",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 2948,
								"contract": "contracts/NftV1Contract.sol:NftV1Collection",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> contracts/NftV1Contract.sol:14:39:\n   |\n14 |     constructor(address initialOwner, string memory name, string memory symbol) ERC1155(\"\") Ownable(initialOwner) {\n   |                                       ^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/NftV1Contract.sol:61:5:\n   |\n61 |     function name() public view returns(string memory) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 2052,
						"file": "contracts/NftV1Contract.sol",
						"message": "The shadowed declaration is here:",
						"start": 1972
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 420,
					"file": "contracts/NftV1Contract.sol",
					"start": 402
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> contracts/NftV1Contract.sol:14:59:\n   |\n14 |     constructor(address initialOwner, string memory name, string memory symbol) ERC1155(\"\") Ownable(initialOwner) {\n   |                                                           ^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/NftV1Contract.sol:65:5:\n   |\n65 |     function symbol() public view returns(string memory) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 2142,
						"file": "contracts/NftV1Contract.sol",
						"message": "The shadowed declaration is here:",
						"start": 2058
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 442,
					"file": "contracts/NftV1Contract.sol",
					"start": 422
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> contracts/NftV1Contract.sol:23:27:\n   |\n23 |     function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n   |                           ^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/NftV1Contract.sol:73:5:\n   |\n73 |     function tokenId() public view virtual returns (uint256) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 2365,
						"file": "contracts/NftV1Contract.sol",
						"message": "The shadowed declaration is here:",
						"start": 2276
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 674,
					"file": "contracts/NftV1Contract.sol",
					"start": 659
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> contracts/NftV1Contract.sol:69:23:\n   |\n69 |     function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n   |                       ^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/NftV1Contract.sol:73:5:\n   |\n73 |     function tokenId() public view virtual returns (uint256) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 2365,
						"file": "contracts/NftV1Contract.sol",
						"message": "The shadowed declaration is here:",
						"start": 2276
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 2181,
					"file": "contracts/NftV1Contract.sol",
					"start": 2166
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1729
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1730,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1729,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1729,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1729
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1711,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1711,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Arrays": [
							1699
						],
						"Context": [
							1729
						],
						"ERC1155": [
							1335
						],
						"ERC165": [
							1863
						],
						"IERC1155": [
							1458
						],
						"IERC1155Errors": [
							284
						],
						"IERC1155MetadataURI": [
							1516
						],
						"IERC1155Receiver": [
							1500
						],
						"IERC165": [
							1875
						]
					},
					"id": 1336,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1459,
							"src": "135:40:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1458,
										"src": "143:8:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1501,
							"src": "176:56:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC1155Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1500,
										"src": "184:16:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1517,
							"src": "233:73:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "IERC1155MetadataURI",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1516,
										"src": "241:19:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1730,
							"src": "307:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1729,
										"src": "315:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 297,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1864,
							"src": "356:69:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 295,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1875,
										"src": "364:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 296,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1863,
										"src": "373:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Arrays.sol",
							"file": "../../utils/Arrays.sol",
							"id": 299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1700,
							"src": "426:46:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 298,
										"name": "Arrays",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1699,
										"src": "434:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 301,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 285,
							"src": "473:67:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 300,
										"name": "IERC1155Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 284,
										"src": "481:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 303,
										"name": "Context",
										"nameLocations": [
											"756:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1729,
										"src": "756:7:2"
									},
									"id": 304,
									"nodeType": "InheritanceSpecifier",
									"src": "756:7:2"
								},
								{
									"baseName": {
										"id": 305,
										"name": "ERC165",
										"nameLocations": [
											"765:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1863,
										"src": "765:6:2"
									},
									"id": 306,
									"nodeType": "InheritanceSpecifier",
									"src": "765:6:2"
								},
								{
									"baseName": {
										"id": 307,
										"name": "IERC1155",
										"nameLocations": [
											"773:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1458,
										"src": "773:8:2"
									},
									"id": 308,
									"nodeType": "InheritanceSpecifier",
									"src": "773:8:2"
								},
								{
									"baseName": {
										"id": 309,
										"name": "IERC1155MetadataURI",
										"nameLocations": [
											"783:19:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1516,
										"src": "783:19:2"
									},
									"id": 310,
									"nodeType": "InheritanceSpecifier",
									"src": "783:19:2"
								},
								{
									"baseName": {
										"id": 311,
										"name": "IERC1155Errors",
										"nameLocations": [
											"804:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 284,
										"src": "804:14:2"
									},
									"id": 312,
									"nodeType": "InheritanceSpecifier",
									"src": "804:14:2"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 302,
								"nodeType": "StructuredDocumentation",
								"src": "542:184:2",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"
							},
							"fullyImplemented": true,
							"id": 1335,
							"linearizedBaseContracts": [
								1335,
								284,
								1516,
								1458,
								1863,
								1875,
								1729
							],
							"name": "ERC1155",
							"nameLocation": "745:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 316,
									"libraryName": {
										"id": 313,
										"name": "Arrays",
										"nameLocations": [
											"831:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1699,
										"src": "831:6:2"
									},
									"nodeType": "UsingForDirective",
									"src": "825:27:2",
									"typeName": {
										"baseType": {
											"id": 314,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "842:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 315,
										"nodeType": "ArrayTypeName",
										"src": "842:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									}
								},
								{
									"global": false,
									"id": 320,
									"libraryName": {
										"id": 317,
										"name": "Arrays",
										"nameLocations": [
											"863:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1699,
										"src": "863:6:2"
									},
									"nodeType": "UsingForDirective",
									"src": "857:27:2",
									"typeName": {
										"baseType": {
											"id": 318,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "874:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 319,
										"nodeType": "ArrayTypeName",
										"src": "874:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									}
								},
								{
									"constant": false,
									"id": 326,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "957:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1335,
									"src": "890:76:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 325,
										"keyName": "id",
										"keyNameLocation": "906:2:2",
										"keyType": {
											"id": 321,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "898:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "890:58:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 324,
											"keyName": "account",
											"keyNameLocation": "928:7:2",
											"keyType": {
												"id": 322,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "920:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "912:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 323,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "939:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 332,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1043:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1335,
									"src": "973:88:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 331,
										"keyName": "account",
										"keyNameLocation": "989:7:2",
										"keyType": {
											"id": 327,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "981:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "973:61:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 330,
											"keyName": "operator",
											"keyNameLocation": "1016:8:2",
											"keyType": {
												"id": 328,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1008:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1000:33:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 329,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1028:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 334,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1197:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 1335,
									"src": "1182:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 333,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1182:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1283:30:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 341,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "1301:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 340,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "1293:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1293:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "1293:13:2"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "1208:38:2",
										"text": " @dev See {_setURI}."
									},
									"id": 345,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1277:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1263:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 336,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1263:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:20:2"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1283:0:2"
									},
									"scope": 1335,
									"src": "1251:62:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1862,
										1874
									],
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "1488:197:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 356,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "1517:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 358,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1458,
																			"src": "1537:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1458_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1458_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 357,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1532:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1532:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1458",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 360,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1547:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1532:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1517:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 362,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "1574:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 364,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1516,
																			"src": "1594:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1516_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1516_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 363,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1589:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1589:25:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1516",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1615:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1589:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1574:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1517:109:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 371,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "1666:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 369,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1642:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1335_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1648:17:2",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1862,
															"src": "1642:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1642:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1517:161:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 355,
												"id": 374,
												"nodeType": "Return",
												"src": "1498:180:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1319:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1389:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 352,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 350,
												"name": "ERC165",
												"nameLocations": [
													"1456:6:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1863,
												"src": "1456:6:2"
											},
											{
												"id": 351,
												"name": "IERC165",
												"nameLocations": [
													"1464:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1875,
												"src": "1464:7:2"
											}
										],
										"src": "1447:25:2"
									},
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1414:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1407:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 347,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1407:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1406:20:2"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1482:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 353,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1481:6:2"
									},
									"scope": 1335,
									"src": "1380:305:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1515
									],
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "2159:28:2",
										"statements": [
											{
												"expression": {
													"id": 384,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 334,
													"src": "2176:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 383,
												"id": 385,
												"nodeType": "Return",
												"src": "2169:11:2"
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "1691:388:2",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "2093:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2097:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2096:18:2"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2144:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 381,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2144:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2143:15:2"
									},
									"scope": 1335,
									"src": "2084:103:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1396
									],
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "2333:46:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 397,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "2350:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 399,
														"indexExpression": {
															"id": 398,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "2360:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2350:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 401,
													"indexExpression": {
														"id": 400,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "2364:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2350:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 396,
												"id": 402,
												"nodeType": "Return",
												"src": "2343:29:2"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "2193:49:2",
										"text": " @dev See {IERC1155-balanceOf}."
									},
									"functionSelector": "00fdd58e",
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2256:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2274:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "2266:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2291:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "2283:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2283:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2265:29:2"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "2324:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:9:2"
									},
									"scope": 1335,
									"src": "2247:132:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1409
									],
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "2678:410:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 417,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "2692:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2701:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2692:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 419,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "2711:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2715:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2692:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 430,
												"nodeType": "IfStatement",
												"src": "2688:121:2",
												"trueBody": {
													"id": 429,
													"nodeType": "Block",
													"src": "2723:86:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 423,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 411,
																			"src": "2770:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2774:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2770:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 425,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 408,
																			"src": "2782:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2791:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2782:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 422,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "2744:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2744:54:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 428,
															"nodeType": "RevertStatement",
															"src": "2737:61:2"
														}
													]
												}
											},
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2836:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "2819:30:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 433,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2819:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 434,
															"nodeType": "ArrayTypeName",
															"src": "2819:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 442,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 439,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 408,
																"src": "2866:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2875:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2866:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2852:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 436,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2856:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 437,
															"nodeType": "ArrayTypeName",
															"src": "2856:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2852:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2819:63:2"
											},
											{
												"body": {
													"id": 469,
													"nodeType": "Block",
													"src": "2939:112:2",
													"statements": [
														{
															"expression": {
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 454,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 435,
																		"src": "2953:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 456,
																	"indexExpression": {
																		"id": 455,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 444,
																		"src": "2967:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2953:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 460,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 444,
																					"src": "3010:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 458,
																					"name": "accounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 408,
																					"src": "2982:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 459,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2991:18:2",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1698,
																				"src": "2982:27:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$",
																					"typeString": "function (address[] memory,uint256) pure returns (address)"
																				}
																			},
																			"id": 461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2982:30:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 464,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 444,
																					"src": "3037:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 462,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 411,
																					"src": "3014:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 463,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3018:18:2",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1685,
																				"src": "3014:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 465,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3014:25:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 457,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 404,
																		"src": "2972:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2972:68:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2953:87:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 468,
															"nodeType": "ExpressionStatement",
															"src": "2953:87:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 447,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "2913:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 448,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "2917:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2926:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2917:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2913:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 470,
												"initializationExpression": {
													"assignments": [
														444
													],
													"declarations": [
														{
															"constant": false,
															"id": 444,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2906:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 470,
															"src": "2898:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 443,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2898:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 446,
													"initialValue": {
														"hexValue": "30",
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2910:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2898:13:2"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2934:3:2",
														"subExpression": {
															"id": 451,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "2936:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 453,
													"nodeType": "ExpressionStatement",
													"src": "2934:3:2"
												},
												"nodeType": "ForStatement",
												"src": "2893:158:2"
											},
											{
												"expression": {
													"id": 471,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 435,
													"src": "3068:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 416,
												"id": 472,
												"nodeType": "Return",
												"src": "3061:20:2"
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "2385:146:2",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2545:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2586:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2569:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 406,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2569:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 407,
													"nodeType": "ArrayTypeName",
													"src": "2569:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2621:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2604:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 409,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2604:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 410,
													"nodeType": "ArrayTypeName",
													"src": "2604:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2559:71:2"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2660:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 413,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2660:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 414,
													"nodeType": "ArrayTypeName",
													"src": "2660:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:18:2"
									},
									"scope": 1335,
									"src": "2536:552:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1417
									],
									"body": {
										"id": 489,
										"nodeType": "Block",
										"src": "3231:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 483,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1711,
																"src": "3260:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3260:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 485,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3274:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "3284:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 482,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "3241:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "3241:52:2"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "3094:57:2",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3165:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3191:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "3183:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3183:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3206:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "3201:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 478,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3201:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3182:33:2"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:2"
									},
									"scope": 1335,
									"src": "3156:144:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1427
									],
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "3463:61:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 500,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "3480:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 502,
														"indexExpression": {
															"id": 501,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "3499:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3480:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 504,
													"indexExpression": {
														"id": 503,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "3508:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3480:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 499,
												"id": 505,
												"nodeType": "Return",
												"src": "3473:44:2"
											}
										]
									},
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "3306:56:2",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3376:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3401:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "3393:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3418:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "3410:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3410:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3392:35:2"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "3457:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 497,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3457:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3456:6:2"
									},
									"scope": 1335,
									"src": "3367:157:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1441
									],
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "3704:238:2",
										"statements": [
											{
												"assignments": [
													522
												],
												"declarations": [
													{
														"constant": false,
														"id": 522,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "3722:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 550,
														"src": "3714:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 521,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3714:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 525,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 523,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1711,
														"src": "3731:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3731:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3714:29:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 526,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "3757:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 527,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "3765:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3757:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3775:31:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 530,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 510,
																	"src": "3793:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 531,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "3799:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 529,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "3776:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3776:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3757:49:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 541,
												"nodeType": "IfStatement",
												"src": "3753:129:2",
												"trueBody": {
													"id": 540,
													"nodeType": "Block",
													"src": "3808:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 536,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 522,
																		"src": "3858:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 537,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 510,
																		"src": "3866:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 535,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "3829:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3829:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 539,
															"nodeType": "RevertStatement",
															"src": "3822:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 543,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "3909:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "3915:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 545,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "3919:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 546,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "3923:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 547,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "3930:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 542,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 892,
														"src": "3891:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3891:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "3891:44:2"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "3530:56:2",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3600:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3625:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3617:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3617:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3639:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3631:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3651:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3643:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3643:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3663:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3655:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3655:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3670:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 517,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3670:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3616:72:2"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3704:0:2"
									},
									"scope": 1335,
									"src": "3591:351:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1457
									],
									"body": {
										"id": 596,
										"nodeType": "Block",
										"src": "4198:245:2",
										"statements": [
											{
												"assignments": [
													568
												],
												"declarations": [
													{
														"constant": false,
														"id": 568,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "4216:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 596,
														"src": "4208:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 567,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4208:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 571,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 569,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1711,
														"src": "4225:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4225:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4208:29:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 572,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4251:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 573,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "4259:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4251:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4269:31:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 576,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 554,
																	"src": "4287:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 577,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 568,
																	"src": "4293:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 575,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "4270:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4270:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4251:49:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 587,
												"nodeType": "IfStatement",
												"src": "4247:129:2",
												"trueBody": {
													"id": 586,
													"nodeType": "Block",
													"src": "4302:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 582,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 568,
																		"src": "4352:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 583,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 554,
																		"src": "4360:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 581,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "4323:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4323:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 585,
															"nodeType": "RevertStatement",
															"src": "4316:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 589,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4408:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 590,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "4414:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 591,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "4418:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 592,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4423:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 593,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "4431:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 588,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "4385:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4385:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "4385:51:2"
											}
										]
									},
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "3948:61:2",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4023:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4062:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4054:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4054:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4084:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4076:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4113:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4096:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 557,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4096:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 558,
													"nodeType": "ArrayTypeName",
													"src": "4096:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4143:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4126:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 560,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4126:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 561,
													"nodeType": "ArrayTypeName",
													"src": "4126:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4172:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4159:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 563,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4159:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4044:138:2"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4198:0:2"
									},
									"scope": 1335,
									"src": "4014:429:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "5251:1174:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 611,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "5265:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5269:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5265:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 613,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "5279:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5286:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5279:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5265:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 624,
												"nodeType": "IfStatement",
												"src": "5261:117:2",
												"trueBody": {
													"id": 623,
													"nodeType": "Block",
													"src": "5294:84:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 617,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 605,
																			"src": "5341:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5345:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5341:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 619,
																			"name": "values",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 608,
																			"src": "5353:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5360:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5353:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 616,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "5315:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5315:52:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 622,
															"nodeType": "RevertStatement",
															"src": "5308:59:2"
														}
													]
												}
											},
											{
												"assignments": [
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5396:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 749,
														"src": "5388:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 625,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5388:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 629,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 627,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1711,
														"src": "5407:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5407:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5388:31:2"
											},
											{
												"body": {
													"id": 710,
													"nodeType": "Block",
													"src": "5471:650:2",
													"statements": [
														{
															"assignments": [
																642
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 642,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "5493:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 710,
																	"src": "5485:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 641,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5485:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 647,
															"initialValue": {
																"arguments": [
																	{
																		"id": 645,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "5521:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 643,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 605,
																		"src": "5498:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5502:18:2",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1685,
																	"src": "5498:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5485:38:2"
														},
														{
															"assignments": [
																649
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 649,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "5545:5:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 710,
																	"src": "5537:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 648,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5537:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 654,
															"initialValue": {
																"arguments": [
																	{
																		"id": 652,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "5579:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 650,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "5553:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5560:18:2",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1685,
																	"src": "5553:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5553:28:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5537:44:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 655,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 600,
																	"src": "5600:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5616:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5608:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 656,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5608:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5608:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5600:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 693,
															"nodeType": "IfStatement",
															"src": "5596:420:2",
															"trueBody": {
																"id": 692,
																"nodeType": "Block",
																"src": "5620:396:2",
																"statements": [
																	{
																		"assignments": [
																			662
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 662,
																				"mutability": "mutable",
																				"name": "fromBalance",
																				"nameLocation": "5646:11:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 692,
																				"src": "5638:19:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 661,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "5638:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 668,
																		"initialValue": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 663,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 326,
																					"src": "5660:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 665,
																				"indexExpression": {
																					"id": 664,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 642,
																					"src": "5670:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5660:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 667,
																			"indexExpression": {
																				"id": 666,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 600,
																				"src": "5674:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5660:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5638:41:2"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 669,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 662,
																				"src": "5701:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 670,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 649,
																				"src": "5715:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5701:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 680,
																		"nodeType": "IfStatement",
																		"src": "5697:129:2",
																		"trueBody": {
																			"id": 679,
																			"nodeType": "Block",
																			"src": "5722:104:2",
																			"statements": [
																				{
																					"errorCall": {
																						"arguments": [
																							{
																								"id": 673,
																								"name": "from",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 600,
																								"src": "5778:4:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 674,
																								"name": "fromBalance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 662,
																								"src": "5784:11:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 675,
																								"name": "value",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 649,
																								"src": "5797:5:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 676,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 642,
																								"src": "5804:2:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 672,
																							"name": "ERC1155InsufficientBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 249,
																							"src": "5751:26:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																								"typeString": "function (address,uint256,uint256,uint256) pure"
																							}
																						},
																						"id": 677,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5751:56:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 678,
																					"nodeType": "RevertStatement",
																					"src": "5744:63:2"
																				}
																			]
																		}
																	},
																	{
																		"id": 691,
																		"nodeType": "UncheckedBlock",
																		"src": "5843:159:2",
																		"statements": [
																			{
																				"expression": {
																					"id": 689,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 681,
																								"name": "_balances",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 326,
																								"src": "5942:9:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(uint256 => mapping(address => uint256))"
																								}
																							},
																							"id": 684,
																							"indexExpression": {
																								"id": 682,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 642,
																								"src": "5952:2:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5942:13:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 685,
																						"indexExpression": {
																							"id": 683,
																							"name": "from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 600,
																							"src": "5956:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "5942:19:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 688,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 686,
																							"name": "fromBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 662,
																							"src": "5964:11:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 687,
																							"name": "value",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 649,
																							"src": "5978:5:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5964:19:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5942:41:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 690,
																				"nodeType": "ExpressionStatement",
																				"src": "5942:41:2"
																			}
																		]
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 694,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 602,
																	"src": "6034:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6048:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6040:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 695,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6040:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6040:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6034:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 709,
															"nodeType": "IfStatement",
															"src": "6030:81:2",
															"trueBody": {
																"id": 708,
																"nodeType": "Block",
																"src": "6052:59:2",
																"statements": [
																	{
																		"expression": {
																			"id": 706,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 700,
																						"name": "_balances",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 326,
																						"src": "6070:9:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																							"typeString": "mapping(uint256 => mapping(address => uint256))"
																						}
																					},
																					"id": 703,
																					"indexExpression": {
																						"id": 701,
																						"name": "id",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 642,
																						"src": "6080:2:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6070:13:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 704,
																				"indexExpression": {
																					"id": 702,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 602,
																					"src": "6084:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "6070:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 705,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 649,
																				"src": "6091:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6070:26:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 707,
																		"nodeType": "ExpressionStatement",
																		"src": "6070:26:2"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 634,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "5450:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 635,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "5454:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5458:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5454:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5450:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 711,
												"initializationExpression": {
													"assignments": [
														631
													],
													"declarations": [
														{
															"constant": false,
															"id": 631,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5443:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 711,
															"src": "5435:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 630,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5435:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 633,
													"initialValue": {
														"hexValue": "30",
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5447:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5435:13:2"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "5466:3:2",
														"subExpression": {
															"id": 638,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "5468:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 640,
													"nodeType": "ExpressionStatement",
													"src": "5466:3:2"
												},
												"nodeType": "ForStatement",
												"src": "5430:691:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 712,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "6135:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6139:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6135:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6149:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6135:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "6343:76:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 740,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "6376:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 741,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 600,
																		"src": "6386:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 742,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 602,
																		"src": "6392:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 605,
																		"src": "6396:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 744,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "6401:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	],
																	"id": 739,
																	"name": "TransferBatch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1370,
																	"src": "6362:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6362:46:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "6357:51:2"
														}
													]
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "6131:288:2",
												"trueBody": {
													"id": 738,
													"nodeType": "Block",
													"src": "6152:185:2",
													"statements": [
														{
															"assignments": [
																717
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 717,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6174:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 738,
																	"src": "6166:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 716,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6166:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 722,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6202:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 718,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 605,
																		"src": "6179:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6183:18:2",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1685,
																	"src": "6179:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6179:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6166:38:2"
														},
														{
															"assignments": [
																724
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 724,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "6226:5:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 738,
																	"src": "6218:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 723,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6218:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 729,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6260:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 725,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "6234:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6241:18:2",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1685,
																	"src": "6234:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6234:28:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6218:44:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 731,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "6296:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 732,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 600,
																		"src": "6306:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 733,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 602,
																		"src": "6312:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 734,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 717,
																		"src": "6316:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 735,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 724,
																		"src": "6320:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 730,
																	"name": "TransferSingle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1355,
																	"src": "6281:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256,uint256)"
																	}
																},
																"id": 736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6281:45:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 737,
															"nodeType": "EmitStatement",
															"src": "6276:50:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "4449:690:2",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5153:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5169:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5161:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5161:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5183:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5175:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5175:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "5204:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5187:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 603,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5187:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 604,
													"nodeType": "ArrayTypeName",
													"src": "5187:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "5226:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5209:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 606,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5209:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 607,
													"nodeType": "ArrayTypeName",
													"src": "5209:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5160:73:2"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5251:0:2"
									},
									"scope": 1335,
									"src": "5144:1281:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "7195:499:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 767,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "7213:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 768,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "7219:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 769,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "7223:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 770,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "7228:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 766,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "7205:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7205:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "7205:30:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 773,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 755,
														"src": "7249:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7263:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7255:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 774,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7255:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7255:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7249:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 824,
												"nodeType": "IfStatement",
												"src": "7245:443:2",
												"trueBody": {
													"id": 823,
													"nodeType": "Block",
													"src": "7267:421:2",
													"statements": [
														{
															"assignments": [
																780
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 780,
																	"mutability": "mutable",
																	"name": "operator",
																	"nameLocation": "7289:8:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 823,
																	"src": "7281:16:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 779,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7281:7:2",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 783,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 781,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1711,
																	"src": "7300:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7300:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7281:31:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 784,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 758,
																		"src": "7330:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7334:6:2",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7330:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7344:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7330:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 821,
																"nodeType": "Block",
																"src": "7571:107:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 813,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 780,
																					"src": "7625:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 814,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 753,
																					"src": "7635:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 815,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "7641:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 816,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 758,
																					"src": "7645:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 817,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "7650:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 818,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 763,
																					"src": "7658:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 812,
																				"name": "_doSafeBatchTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1318,
																				"src": "7589:35:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
																				}
																			},
																			"id": 819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7589:74:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 820,
																		"nodeType": "ExpressionStatement",
																		"src": "7589:74:2"
																	}
																]
															},
															"id": 822,
															"nodeType": "IfStatement",
															"src": "7326:352:2",
															"trueBody": {
																"id": 811,
																"nodeType": "Block",
																"src": "7347:218:2",
																"statements": [
																	{
																		"assignments": [
																			789
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 789,
																				"mutability": "mutable",
																				"name": "id",
																				"nameLocation": "7373:2:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 811,
																				"src": "7365:10:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 788,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7365:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 794,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 792,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7401:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 790,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 758,
																					"src": "7378:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7382:18:2",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1685,
																				"src": "7378:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7378:25:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7365:38:2"
																	},
																	{
																		"assignments": [
																			796
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 796,
																				"mutability": "mutable",
																				"name": "value",
																				"nameLocation": "7429:5:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 811,
																				"src": "7421:13:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 795,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7421:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 801,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 799,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7463:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 797,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "7437:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 798,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7444:18:2",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1685,
																				"src": "7437:25:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7437:28:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7421:44:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 803,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 780,
																					"src": "7514:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 804,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 753,
																					"src": "7524:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 805,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "7530:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 806,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 789,
																					"src": "7534:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 807,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 796,
																					"src": "7538:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 808,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 763,
																					"src": "7545:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 802,
																				"name": "_doSafeTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1248,
																				"src": "7483:30:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
																				}
																			},
																			"id": 809,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7483:67:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 810,
																		"nodeType": "ExpressionStatement",
																		"src": "7483:67:2"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "6431:568:2",
										"text": " @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateWithAcceptanceCheck",
									"nameLocation": "7013:26:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7057:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7049:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7049:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7079:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7071:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7071:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "7108:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7091:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 756,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7091:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 757,
													"nodeType": "ArrayTypeName",
													"src": "7091:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "7138:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7121:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 759,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7121:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 760,
													"nodeType": "ArrayTypeName",
													"src": "7121:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7167:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7154:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 762,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7154:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7039:138:2"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7195:0:2"
									},
									"scope": 1335,
									"src": "7004:690:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 891,
										"nodeType": "Block",
										"src": "8259:355:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 840,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "8273:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8287:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8279:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 841,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8279:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 844,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8279:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8273:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 854,
												"nodeType": "IfStatement",
												"src": "8269:88:2",
												"trueBody": {
													"id": 853,
													"nodeType": "Block",
													"src": "8291:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 849,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8343:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8335:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 847,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8335:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8335:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 846,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "8312:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8312:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 852,
															"nodeType": "RevertStatement",
															"src": "8305:41:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 855,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "8370:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8386:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8378:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 856,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8378:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 859,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8378:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8370:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 869,
												"nodeType": "IfStatement",
												"src": "8366:88:2",
												"trueBody": {
													"id": 868,
													"nodeType": "Block",
													"src": "8390:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 864,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8440:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8432:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 862,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8432:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8432:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 861,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "8411:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8411:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 867,
															"nodeType": "RevertStatement",
															"src": "8404:39:2"
														}
													]
												}
											},
											{
												"assignments": [
													874,
													877
												],
												"declarations": [
													{
														"constant": false,
														"id": 874,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "8481:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 891,
														"src": "8464:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 872,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8464:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 873,
															"nodeType": "ArrayTypeName",
															"src": "8464:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 877,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "8503:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 891,
														"src": "8486:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 875,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8486:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 876,
															"nodeType": "ArrayTypeName",
															"src": "8486:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 882,
												"initialValue": {
													"arguments": [
														{
															"id": 879,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "8532:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 880,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "8536:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 878,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "8513:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8513:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8463:79:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 884,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "8579:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 885,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "8585:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 886,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "8589:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 887,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "8594:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 888,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "8602:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 883,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "8552:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8552:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "8552:55:2"
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "7700:446:2",
										"text": " @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "8160:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8186:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8178:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8178:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8200:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8192:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8192:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8212:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8204:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8204:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8224:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8216:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8216:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8244:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8231:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 836,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8231:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8177:72:2"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8259:0:2"
									},
									"scope": 1335,
									"src": "8151:463:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "9194:266:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 908,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "9208:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9222:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9214:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 909,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9214:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 912,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9214:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9208:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 922,
												"nodeType": "IfStatement",
												"src": "9204:88:2",
												"trueBody": {
													"id": 921,
													"nodeType": "Block",
													"src": "9226:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 917,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9278:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 916,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9270:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 915,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9270:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9270:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 914,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "9247:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9247:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 920,
															"nodeType": "RevertStatement",
															"src": "9240:41:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 923,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "9305:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9321:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9313:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 924,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9313:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 927,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9313:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9305:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 937,
												"nodeType": "IfStatement",
												"src": "9301:88:2",
												"trueBody": {
													"id": 936,
													"nodeType": "Block",
													"src": "9325:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 932,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9375:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 931,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9367:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 930,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9367:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9367:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 929,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "9346:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9346:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 935,
															"nodeType": "RevertStatement",
															"src": "9339:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 939,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "9425:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 940,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "9431:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 941,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "9435:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 942,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "9440:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 943,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "9448:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 938,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "9398:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9398:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "9398:55:2"
											}
										]
									},
									"documentation": {
										"id": 893,
										"nodeType": "StructuredDocumentation",
										"src": "8620:390:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."
									},
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "9024:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9064:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9056:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9056:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9086:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9078:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9078:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9115:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9098:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 898,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 899,
													"nodeType": "ArrayTypeName",
													"src": "9098:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "9145:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9128:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 901,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9128:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 902,
													"nodeType": "ArrayTypeName",
													"src": "9128:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9174:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9161:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 904,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9161:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9046:138:2"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9194:0:2"
									},
									"scope": 1335,
									"src": "9015:445:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "10338:30:2",
										"statements": [
											{
												"expression": {
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 953,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "10348:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 954,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "10355:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "10348:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 956,
												"nodeType": "ExpressionStatement",
												"src": "10348:13:2"
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "9466:811:2",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "10291:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "10313:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "10299:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 949,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10299:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10298:22:2"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10338:0:2"
									},
									"scope": 1335,
									"src": "10282:86:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1009,
										"nodeType": "Block",
										"src": "10828:264:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 970,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "10842:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10856:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10848:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 971,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10848:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10848:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10842:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 984,
												"nodeType": "IfStatement",
												"src": "10838:88:2",
												"trueBody": {
													"id": 983,
													"nodeType": "Block",
													"src": "10860:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 979,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10912:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10904:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 977,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10904:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10904:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 976,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "10881:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10881:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 982,
															"nodeType": "RevertStatement",
															"src": "10874:41:2"
														}
													]
												}
											},
											{
												"assignments": [
													989,
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 989,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "10953:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 1009,
														"src": "10936:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 987,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10936:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 988,
															"nodeType": "ArrayTypeName",
															"src": "10936:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 992,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "10975:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1009,
														"src": "10958:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 990,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10958:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 991,
															"nodeType": "ArrayTypeName",
															"src": "10958:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 997,
												"initialValue": {
													"arguments": [
														{
															"id": 994,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "11004:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 995,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "11008:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 993,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "10985:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10985:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10935:79:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11059:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11051:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 999,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11051:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11051:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "11063:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1004,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "11067:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1005,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "11072:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1006,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "11080:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 998,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "11024:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11024:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1008,
												"nodeType": "ExpressionStatement",
												"src": "11024:61:2"
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "10374:367:2",
										"text": " @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 1010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "10755:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10769:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "10761:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10761:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10781:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "10773:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10773:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10793:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "10785:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10785:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10813:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "10800:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 966,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10800:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10760:58:2"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10828:0:2"
									},
									"scope": 1335,
									"src": "10746:346:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "11630:175:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1024,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "11644:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11658:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11650:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1025,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11650:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1028,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11650:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11644:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1038,
												"nodeType": "IfStatement",
												"src": "11640:88:2",
												"trueBody": {
													"id": 1037,
													"nodeType": "Block",
													"src": "11662:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1033,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11714:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11706:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1031,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11706:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11706:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1030,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "11683:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11683:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1036,
															"nodeType": "RevertStatement",
															"src": "11676:41:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11772:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11764:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1040,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11764:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11764:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1044,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "11776:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1045,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "11780:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1046,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "11785:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1047,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "11793:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1039,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "11737:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11737:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "11737:61:2"
											}
										]
									},
									"documentation": {
										"id": 1011,
										"nodeType": "StructuredDocumentation",
										"src": "11098:420:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "11532:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11551:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11543:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11543:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11572:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11555:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1014,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11555:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1015,
													"nodeType": "ArrayTypeName",
													"src": "11555:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "11594:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11577:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1017,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11577:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1018,
													"nodeType": "ArrayTypeName",
													"src": "11577:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11615:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11602:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1020,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11602:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11542:78:2"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11630:0:2"
									},
									"scope": 1335,
									"src": "11523:282:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1100,
										"nodeType": "Block",
										"src": "12164:264:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1061,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "12178:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12194:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12186:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1062,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12186:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1065,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12186:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12178:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1075,
												"nodeType": "IfStatement",
												"src": "12174:88:2",
												"trueBody": {
													"id": 1074,
													"nodeType": "Block",
													"src": "12198:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1070,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12248:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1069,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12240:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1068,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12240:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1071,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12240:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1067,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "12219:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12219:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1073,
															"nodeType": "RevertStatement",
															"src": "12212:39:2"
														}
													]
												}
											},
											{
												"assignments": [
													1080,
													1083
												],
												"declarations": [
													{
														"constant": false,
														"id": 1080,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "12289:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 1100,
														"src": "12272:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1078,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12272:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1079,
															"nodeType": "ArrayTypeName",
															"src": "12272:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1083,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "12311:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1100,
														"src": "12294:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1081,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12294:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1082,
															"nodeType": "ArrayTypeName",
															"src": "12294:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1088,
												"initialValue": {
													"arguments": [
														{
															"id": 1085,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "12340:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1086,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "12344:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1084,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "12321:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12321:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12271:79:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1090,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "12387:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12401:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12393:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1091,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12393:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12393:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1095,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "12405:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1096,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "12410:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12418:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1089,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "12360:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12360:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1099,
												"nodeType": "ExpressionStatement",
												"src": "12360:61:2"
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "11811:283:2",
										"text": " @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."
									},
									"id": 1101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "12108:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12122:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "12114:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12114:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "12136:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "12128:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12128:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12148:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "12140:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12140:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12113:41:2"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12164:0:2"
									},
									"scope": 1335,
									"src": "12099:329:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1139,
										"nodeType": "Block",
										"src": "12874:175:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1113,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "12888:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12904:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12896:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1114,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12896:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12896:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12888:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1127,
												"nodeType": "IfStatement",
												"src": "12884:88:2",
												"trueBody": {
													"id": 1126,
													"nodeType": "Block",
													"src": "12908:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1122,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12958:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12950:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1120,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12950:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12950:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1119,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "12929:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12929:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1125,
															"nodeType": "RevertStatement",
															"src": "12922:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1129,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "13008:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13022:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13014:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1130,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13014:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13014:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1134,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "13026:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1135,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "13031:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13039:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1128,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "12981:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12981:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1138,
												"nodeType": "ExpressionStatement",
												"src": "12981:61:2"
											}
										]
									},
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "12434:345:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."
									},
									"id": 1140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "12793:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12812:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "12804:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12804:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "12835:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "12818:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1105,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12818:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1106,
													"nodeType": "ArrayTypeName",
													"src": "12818:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "12857:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "12840:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1108,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12840:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1109,
													"nodeType": "ArrayTypeName",
													"src": "12840:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12803:61:2"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12874:0:2"
									},
									"scope": 1335,
									"src": "12784:265:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1179,
										"nodeType": "Block",
										"src": "13361:222:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1150,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "13375:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13395:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13387:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1151,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13387:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1154,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13387:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13375:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1164,
												"nodeType": "IfStatement",
												"src": "13371:94:2",
												"trueBody": {
													"id": 1163,
													"nodeType": "Block",
													"src": "13399:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1159,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13451:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13443:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1157,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "13443:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13443:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1156,
																	"name": "ERC1155InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "13420:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13420:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1162,
															"nodeType": "RevertStatement",
															"src": "13413:41:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1165,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "13474:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1168,
															"indexExpression": {
																"id": 1166,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1143,
																"src": "13493:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13474:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1169,
														"indexExpression": {
															"id": 1167,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "13500:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13474:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1170,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "13512:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13474:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1172,
												"nodeType": "ExpressionStatement",
												"src": "13474:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1174,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "13550:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1175,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "13557:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1176,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "13567:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1173,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1379,
														"src": "13535:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13535:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1178,
												"nodeType": "EmitStatement",
												"src": "13530:46:2"
											}
										]
									},
									"documentation": {
										"id": 1141,
										"nodeType": "StructuredDocumentation",
										"src": "13055:208:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."
									},
									"id": 1180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "13277:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13304:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "13296:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13296:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13319:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "13311:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13311:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13334:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "13329:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13329:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13295:48:2"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13361:0:2"
									},
									"scope": 1335,
									"src": "13268:315:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "13953:782:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1196,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "13967:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13970:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "13967:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13975:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "13967:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1199,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13984:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13967:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1246,
												"nodeType": "IfStatement",
												"src": "13963:766:2",
												"trueBody": {
													"id": 1245,
													"nodeType": "Block",
													"src": "13987:742:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1225,
																		"nodeType": "Block",
																		"src": "14103:206:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1218,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1214,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1212,
																						"src": "14125:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1215,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1500,
																								"src": "14137:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1500_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1216,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "14154:17:2",
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1481,
																							"src": "14137:34:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1217,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "14172:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14137:43:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14125:55:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1224,
																				"nodeType": "IfStatement",
																				"src": "14121:174:2",
																				"trueBody": {
																					"id": 1223,
																					"nodeType": "Block",
																					"src": "14182:113:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1220,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1187,
																										"src": "14273:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1219,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 259,
																									"src": "14250:22:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1221,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14250:26:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1222,
																							"nodeType": "RevertStatement",
																							"src": "14243:33:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1226,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1213,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1212,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "14093:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1226,
																				"src": "14086:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1211,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14086:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14085:17:2"
																	},
																	"src": "14077:232:2"
																},
																{
																	"block": {
																		"id": 1242,
																		"nodeType": "Block",
																		"src": "14338:381:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1233,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1230,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1228,
																							"src": "14360:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1231,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14367:6:2",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "14360:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1232,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14377:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "14360:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1240,
																					"nodeType": "Block",
																					"src": "14515:190:2",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "14601:86:2",
																								"nodeType": "YulBlock",
																								"src": "14601:86:2",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "14638:2:2",
																															"nodeType": "YulLiteral",
																															"src": "14638:2:2",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "14642:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "14642:6:2"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "14634:3:2",
																														"nodeType": "YulIdentifier",
																														"src": "14634:3:2"
																													},
																													"nativeSrc": "14634:15:2",
																													"nodeType": "YulFunctionCall",
																													"src": "14634:15:2"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "14657:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "14657:6:2"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "14651:5:2",
																														"nodeType": "YulIdentifier",
																														"src": "14651:5:2"
																													},
																													"nativeSrc": "14651:13:2",
																													"nodeType": "YulFunctionCall",
																													"src": "14651:13:2"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "14627:6:2",
																												"nodeType": "YulIdentifier",
																												"src": "14627:6:2"
																											},
																											"nativeSrc": "14627:38:2",
																											"nodeType": "YulFunctionCall",
																											"src": "14627:38:2"
																										},
																										"nativeSrc": "14627:38:2",
																										"nodeType": "YulExpressionStatement",
																										"src": "14627:38:2"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1228,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14642:6:2",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1228,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14657:6:2",
																									"valueSize": 1
																								}
																							],
																							"id": 1239,
																							"nodeType": "InlineAssembly",
																							"src": "14592:95:2"
																						}
																					]
																				},
																				"id": 1241,
																				"nodeType": "IfStatement",
																				"src": "14356:349:2",
																				"trueBody": {
																					"id": 1238,
																					"nodeType": "Block",
																					"src": "14380:129:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1235,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1187,
																										"src": "14487:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1234,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 259,
																									"src": "14464:22:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1236,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14464:26:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1237,
																							"nodeType": "RevertStatement",
																							"src": "14457:33:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1243,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1229,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1228,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14330:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1243,
																				"src": "14317:19:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1227,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "14317:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14316:21:2"
																	},
																	"src": "14310:409:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1205,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1183,
																		"src": "14044:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1206,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1185,
																		"src": "14054:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1207,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1189,
																		"src": "14060:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1208,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1191,
																		"src": "14064:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1209,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1193,
																		"src": "14071:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1202,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1187,
																				"src": "14022:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1201,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1500,
																			"src": "14005:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1500_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14005:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1500",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14026:17:2",
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1481,
																	"src": "14005:38:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14005:71:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1244,
															"nodeType": "TryStatement",
															"src": "14001:718:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1181,
										"nodeType": "StructuredDocumentation",
										"src": "13589:167:2",
										"text": " @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "13770:30:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13818:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13810:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13810:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13844:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13836:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13836:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13866:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13858:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13858:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "13886:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13878:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13878:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13906:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13898:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13898:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13934:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13921:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1192,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13921:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13800:144:2"
									},
									"returnParameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13953:0:2"
									},
									"scope": 1335,
									"src": "13761:974:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1317,
										"nodeType": "Block",
										"src": "15140:824:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1266,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1255,
																"src": "15154:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15157:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "15154:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15162:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15154:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15171:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15154:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1316,
												"nodeType": "IfStatement",
												"src": "15150:808:2",
												"trueBody": {
													"id": 1315,
													"nodeType": "Block",
													"src": "15174:784:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1295,
																		"nodeType": "Block",
																		"src": "15327:211:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1288,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1284,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1282,
																						"src": "15349:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1285,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1500,
																								"src": "15361:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1500_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1286,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "15378:22:2",
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1499,
																							"src": "15361:39:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1287,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "15401:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "15361:48:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "15349:60:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1294,
																				"nodeType": "IfStatement",
																				"src": "15345:179:2",
																				"trueBody": {
																					"id": 1293,
																					"nodeType": "Block",
																					"src": "15411:113:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1290,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1255,
																										"src": "15502:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1289,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 259,
																									"src": "15479:22:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1291,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15479:26:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1292,
																							"nodeType": "RevertStatement",
																							"src": "15472:33:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1296,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1283,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1282,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "15304:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1296,
																				"src": "15297:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1281,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "15297:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15279:47:2"
																	},
																	"src": "15271:267:2"
																},
																{
																	"block": {
																		"id": 1312,
																		"nodeType": "Block",
																		"src": "15567:381:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1303,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1300,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1298,
																							"src": "15589:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1301,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "15596:6:2",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "15589:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1302,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15606:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "15589:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1310,
																					"nodeType": "Block",
																					"src": "15744:190:2",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "15830:86:2",
																								"nodeType": "YulBlock",
																								"src": "15830:86:2",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "15867:2:2",
																															"nodeType": "YulLiteral",
																															"src": "15867:2:2",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "15871:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "15871:6:2"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "15863:3:2",
																														"nodeType": "YulIdentifier",
																														"src": "15863:3:2"
																													},
																													"nativeSrc": "15863:15:2",
																													"nodeType": "YulFunctionCall",
																													"src": "15863:15:2"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "15886:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "15886:6:2"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "15880:5:2",
																														"nodeType": "YulIdentifier",
																														"src": "15880:5:2"
																													},
																													"nativeSrc": "15880:13:2",
																													"nodeType": "YulFunctionCall",
																													"src": "15880:13:2"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "15856:6:2",
																												"nodeType": "YulIdentifier",
																												"src": "15856:6:2"
																											},
																											"nativeSrc": "15856:38:2",
																											"nodeType": "YulFunctionCall",
																											"src": "15856:38:2"
																										},
																										"nativeSrc": "15856:38:2",
																										"nodeType": "YulExpressionStatement",
																										"src": "15856:38:2"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1298,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15871:6:2",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1298,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15886:6:2",
																									"valueSize": 1
																								}
																							],
																							"id": 1309,
																							"nodeType": "InlineAssembly",
																							"src": "15821:95:2"
																						}
																					]
																				},
																				"id": 1311,
																				"nodeType": "IfStatement",
																				"src": "15585:349:2",
																				"trueBody": {
																					"id": 1308,
																					"nodeType": "Block",
																					"src": "15609:129:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1305,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1255,
																										"src": "15716:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1304,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 259,
																									"src": "15693:22:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1306,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15693:26:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1307,
																							"nodeType": "RevertStatement",
																							"src": "15686:33:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1313,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1299,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1298,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "15559:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1313,
																				"src": "15546:19:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1297,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "15546:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15545:21:2"
																	},
																	"src": "15539:409:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1275,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1251,
																		"src": "15236:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1276,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1253,
																		"src": "15246:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1277,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1258,
																		"src": "15252:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1278,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1261,
																		"src": "15257:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1279,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1263,
																		"src": "15265:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1272,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1255,
																				"src": "15209:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1271,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1500,
																			"src": "15192:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1500_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15192:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1500",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15213:22:2",
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1499,
																	"src": "15192:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15192:78:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1314,
															"nodeType": "TryStatement",
															"src": "15188:760:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "14741:177:2",
										"text": " @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 1318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "14932:35:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14985:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "14977:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14977:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15011:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15003:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15003:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15033:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15025:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "15062:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15045:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1256,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15045:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1257,
													"nodeType": "ArrayTypeName",
													"src": "15045:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "15092:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15075:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1259,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15075:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1260,
													"nodeType": "ArrayTypeName",
													"src": "15075:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15121:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15108:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1262,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15108:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14967:164:2"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15140:0:2"
									},
									"scope": 1335,
									"src": "14923:1041:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "16238:691:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "16300:623:2",
													"nodeType": "YulBlock",
													"src": "16300:623:2",
													"statements": [
														{
															"nativeSrc": "16358:21:2",
															"nodeType": "YulAssignment",
															"src": "16358:21:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16374:4:2",
																		"nodeType": "YulLiteral",
																		"src": "16374:4:2",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16368:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "16368:5:2"
																},
																"nativeSrc": "16368:11:2",
																"nodeType": "YulFunctionCall",
																"src": "16368:11:2"
															},
															"variableNames": [
																{
																	"name": "array1",
																	"nativeSrc": "16358:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16358:6:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array1",
																		"nativeSrc": "16436:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "16436:6:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16444:1:2",
																		"nodeType": "YulLiteral",
																		"src": "16444:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16429:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16429:6:2"
																},
																"nativeSrc": "16429:17:2",
																"nodeType": "YulFunctionCall",
																"src": "16429:17:2"
															},
															"nativeSrc": "16429:17:2",
															"nodeType": "YulExpressionStatement",
															"src": "16429:17:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array1",
																				"nativeSrc": "16567:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "16567:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16575:4:2",
																				"nodeType": "YulLiteral",
																				"src": "16575:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16563:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "16563:3:2"
																		},
																		"nativeSrc": "16563:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "16563:17:2"
																	},
																	{
																		"name": "element1",
																		"nativeSrc": "16582:8:2",
																		"nodeType": "YulIdentifier",
																		"src": "16582:8:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16556:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16556:6:2"
																},
																"nativeSrc": "16556:35:2",
																"nodeType": "YulFunctionCall",
																"src": "16556:35:2"
															},
															"nativeSrc": "16556:35:2",
															"nodeType": "YulExpressionStatement",
															"src": "16556:35:2"
														},
														{
															"nativeSrc": "16682:27:2",
															"nodeType": "YulAssignment",
															"src": "16682:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "array1",
																		"nativeSrc": "16696:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "16696:6:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16704:4:2",
																		"nodeType": "YulLiteral",
																		"src": "16704:4:2",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16692:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "16692:3:2"
																},
																"nativeSrc": "16692:17:2",
																"nodeType": "YulFunctionCall",
																"src": "16692:17:2"
															},
															"variableNames": [
																{
																	"name": "array2",
																	"nativeSrc": "16682:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16682:6:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array2",
																		"nativeSrc": "16729:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "16729:6:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16737:1:2",
																		"nodeType": "YulLiteral",
																		"src": "16737:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16722:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16722:6:2"
																},
																"nativeSrc": "16722:17:2",
																"nodeType": "YulFunctionCall",
																"src": "16722:17:2"
															},
															"nativeSrc": "16722:17:2",
															"nodeType": "YulExpressionStatement",
															"src": "16722:17:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nativeSrc": "16763:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "16763:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16771:4:2",
																				"nodeType": "YulLiteral",
																				"src": "16771:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16759:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "16759:3:2"
																		},
																		"nativeSrc": "16759:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "16759:17:2"
																	},
																	{
																		"name": "element2",
																		"nativeSrc": "16778:8:2",
																		"nodeType": "YulIdentifier",
																		"src": "16778:8:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16752:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16752:6:2"
																},
																"nativeSrc": "16752:35:2",
																"nodeType": "YulFunctionCall",
																"src": "16752:35:2"
															},
															"nativeSrc": "16752:35:2",
															"nodeType": "YulExpressionStatement",
															"src": "16752:35:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16889:4:2",
																		"nodeType": "YulLiteral",
																		"src": "16889:4:2",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nativeSrc": "16899:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "16899:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16907:4:2",
																				"nodeType": "YulLiteral",
																				"src": "16907:4:2",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16895:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "16895:3:2"
																		},
																		"nativeSrc": "16895:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "16895:17:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16882:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16882:6:2"
																},
																"nativeSrc": "16882:31:2",
																"nodeType": "YulFunctionCall",
																"src": "16882:31:2"
															},
															"nativeSrc": "16882:31:2",
															"nodeType": "YulExpressionStatement",
															"src": "16882:31:2"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": false,
														"src": "16358:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": false,
														"src": "16436:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": false,
														"src": "16567:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": false,
														"src": "16696:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1330,
														"isOffset": false,
														"isSlot": false,
														"src": "16682:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1330,
														"isOffset": false,
														"isSlot": false,
														"src": "16729:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1330,
														"isOffset": false,
														"isSlot": false,
														"src": "16763:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1330,
														"isOffset": false,
														"isSlot": false,
														"src": "16899:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1321,
														"isOffset": false,
														"isSlot": false,
														"src": "16582:8:2",
														"valueSize": 1
													},
													{
														"declaration": 1323,
														"isOffset": false,
														"isSlot": false,
														"src": "16778:8:2",
														"valueSize": 1
													}
												],
												"id": 1332,
												"nodeType": "InlineAssembly",
												"src": "16291:632:2"
											}
										]
									},
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "15970:105:2",
										"text": " @dev Creates an array in memory with only one value for each of the elements provided."
									},
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArrays",
									"nameLocation": "16089:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "element1",
												"nameLocation": "16125:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "16117:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16117:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "element2",
												"nameLocation": "16151:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "16143:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16143:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16107:58:2"
									},
									"returnParameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "array1",
												"nameLocation": "16205:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "16188:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1325,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16188:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1326,
													"nodeType": "ArrayTypeName",
													"src": "16188:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "array2",
												"nameLocation": "16230:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "16213:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1328,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16213:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1329,
													"nodeType": "ArrayTypeName",
													"src": "16213:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16187:50:2"
									},
									"scope": 1335,
									"src": "16080:849:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1336,
							"src": "727:16204:2",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": [
								1355,
								1370,
								1379,
								1386
							]
						}
					],
					"src": "109:16823:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1458
						],
						"IERC165": [
							1875
						]
					},
					"id": 1459,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1337,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1339,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1459,
							"sourceUnit": 1876,
							"src": "136:62:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1338,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1875,
										"src": "144:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1341,
										"name": "IERC165",
										"nameLocations": [
											"358:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1875,
										"src": "358:7:3"
									},
									"id": 1342,
									"nodeType": "InheritanceSpecifier",
									"src": "358:7:3"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1340,
								"nodeType": "StructuredDocumentation",
								"src": "200:135:3",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP]."
							},
							"fullyImplemented": false,
							"id": 1458,
							"linearizedBaseContracts": [
								1458,
								1875
							],
							"name": "IERC1155",
							"nameLocation": "346:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1343,
										"nodeType": "StructuredDocumentation",
										"src": "372:125:3",
										"text": " @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 1355,
									"name": "TransferSingle",
									"nameLocation": "508:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "539:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "523:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "565:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "549:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "587:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "571:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "599:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "591:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "591:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1353,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "611:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "603:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "522:95:3"
									},
									"src": "502:116:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "624:144:3",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 1370,
									"name": "TransferBatch",
									"nameLocation": "779:13:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "818:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "802:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "852:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "836:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "882:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "866:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "904:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "894:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1363,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "894:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1364,
													"nodeType": "ArrayTypeName",
													"src": "894:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "927:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "917:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1366,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "917:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1367,
													"nodeType": "ArrayTypeName",
													"src": "917:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:147:3"
									},
									"src": "773:167:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1371,
										"nodeType": "StructuredDocumentation",
										"src": "946:147:3",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1379,
									"name": "ApprovalForAll",
									"nameLocation": "1104:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1135:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "1119:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1160:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "1144:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1175:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "1170:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1118:66:3"
									},
									"src": "1098:87:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1380,
										"nodeType": "StructuredDocumentation",
										"src": "1191:343:3",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 1386,
									"name": "URI",
									"nameLocation": "1545:3:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1556:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "1549:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1381,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1549:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1579:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "1563:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1563:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1548:34:3"
									},
									"src": "1539:44:3"
								},
								{
									"documentation": {
										"id": 1387,
										"nodeType": "StructuredDocumentation",
										"src": "1589:172:3",
										"text": " @dev Returns the value of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1396,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1775:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1793:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "1785:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1785:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1810:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "1802:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1802:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1784:29:3"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "1837:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1837:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1836:9:3"
									},
									"scope": 1458,
									"src": "1766:80:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1397,
										"nodeType": "StructuredDocumentation",
										"src": "1852:188:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1409,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2054:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2097:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "2078:27:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1398,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2078:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1399,
													"nodeType": "ArrayTypeName",
													"src": "2078:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2134:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "2115:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1401,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2115:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1402,
													"nodeType": "ArrayTypeName",
													"src": "2115:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:75:3"
									},
									"returnParameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "2167:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1405,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2167:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1406,
													"nodeType": "ArrayTypeName",
													"src": "2167:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2166:18:3"
									},
									"scope": 1458,
									"src": "2045:140:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1410,
										"nodeType": "StructuredDocumentation",
										"src": "2191:248:3",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1417,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2453:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2479:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "2471:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2494:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "2489:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1413,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2489:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2470:33:3"
									},
									"returnParameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:3"
									},
									"scope": 1458,
									"src": "2444:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1418,
										"nodeType": "StructuredDocumentation",
										"src": "2519:135:3",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1427,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2668:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2693:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2685:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2710:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2702:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2702:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:35:3"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2743:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1424,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2743:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2742:6:3"
									},
									"scope": 1458,
									"src": "2659:90:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "2755:910:3",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3679:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3704:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3696:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3696:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3718:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3710:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3710:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3730:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3722:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3722:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3742:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3734:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3764:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3749:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1437,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3749:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3695:74:3"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3778:0:3"
									},
									"scope": 1458,
									"src": "3670:109:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1442,
										"nodeType": "StructuredDocumentation",
										"src": "3785:814:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1457,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4613:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4652:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4644:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4644:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4674:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4666:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4666:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4705:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4686:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1447,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4686:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1448,
													"nodeType": "ArrayTypeName",
													"src": "4686:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4737:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4718:25:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1450,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4718:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1451,
													"nodeType": "ArrayTypeName",
													"src": "4718:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4768:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4753:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4753:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4634:144:3"
									},
									"returnParameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4787:0:3"
									},
									"scope": 1458,
									"src": "4604:184:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1459,
							"src": "336:4454:3",
							"usedErrors": [],
							"usedEvents": [
								1355,
								1370,
								1379,
								1386
							]
						}
					],
					"src": "110:4681:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1500
						],
						"IERC165": [
							1875
						]
					},
					"id": 1501,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1460,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1462,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1501,
							"sourceUnit": 1876,
							"src": "144:62:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1461,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1875,
										"src": "152:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1464,
										"name": "IERC165",
										"nameLocations": [
											"357:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1875,
										"src": "357:7:4"
									},
									"id": 1465,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:4"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1463,
								"nodeType": "StructuredDocumentation",
								"src": "208:118:4",
								"text": " @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."
							},
							"fullyImplemented": false,
							"id": 1500,
							"linearizedBaseContracts": [
								1500,
								1875
							],
							"name": "IERC1155Receiver",
							"nameLocation": "337:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "371:826:4",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1481,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1211:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1246:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1238:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1238:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1272:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1264:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1264:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1294:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1286:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1286:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1314:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1306:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1306:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1344:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1329:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1475,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1329:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1228:126:4"
									},
									"returnParameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1373:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1478,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1373:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1372:8:4"
									},
									"scope": 1500,
									"src": "1202:179:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1482,
										"nodeType": "StructuredDocumentation",
										"src": "1387:994:4",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1499,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2395:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2435:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2427:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2461:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2453:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2453:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2494:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2475:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1487,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2475:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1488,
													"nodeType": "ArrayTypeName",
													"src": "2475:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2526:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2507:25:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1490,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2507:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1491,
													"nodeType": "ArrayTypeName",
													"src": "2507:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2557:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2542:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1493,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2542:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2417:150:4"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2586:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1496,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2586:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2585:8:4"
									},
									"scope": 1500,
									"src": "2386:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1501,
							"src": "327:2269:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "118:2479:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1458
						],
						"IERC1155MetadataURI": [
							1516
						]
					},
					"id": 1517,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1502,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "132:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1504,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1517,
							"sourceUnit": 1459,
							"src": "158:41:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1503,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1458,
										"src": "166:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1506,
										"name": "IERC1155",
										"nameLocations": [
											"399:8:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1458,
										"src": "399:8:5"
									},
									"id": 1507,
									"nodeType": "InheritanceSpecifier",
									"src": "399:8:5"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1505,
								"nodeType": "StructuredDocumentation",
								"src": "201:164:5",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]."
							},
							"fullyImplemented": false,
							"id": 1516,
							"linearizedBaseContracts": [
								1516,
								1458,
								1875
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "376:19:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1508,
										"nodeType": "StructuredDocumentation",
										"src": "414:192:5",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1515,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "620:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "632:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "624:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:12:5"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "659:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1512,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "659:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "658:15:5"
									},
									"scope": 1516,
									"src": "611:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1517,
							"src": "366:310:5",
							"usedErrors": [],
							"usedEvents": [
								1355,
								1370,
								1379,
								1386
							]
						}
					],
					"src": "132:545:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Arrays.sol",
					"exportedSymbols": {
						"Arrays": [
							1699
						],
						"Math": [
							2929
						],
						"StorageSlot": [
							1839
						]
					},
					"id": 1700,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1518,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 1520,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1700,
							"sourceUnit": 1840,
							"src": "126:46:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1519,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1839,
										"src": "134:11:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1522,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1700,
							"sourceUnit": 2930,
							"src": "173:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1521,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2929,
										"src": "181:4:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Arrays",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1523,
								"nodeType": "StructuredDocumentation",
								"src": "212:63:6",
								"text": " @dev Collection of functions related to array types."
							},
							"fullyImplemented": true,
							"id": 1699,
							"linearizedBaseContracts": [
								1699
							],
							"name": "Arrays",
							"nameLocation": "284:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1526,
									"libraryName": {
										"id": 1524,
										"name": "StorageSlot",
										"nameLocations": [
											"303:11:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1839,
										"src": "303:11:6"
									},
									"nodeType": "UsingForDirective",
									"src": "297:30:6",
									"typeName": {
										"id": 1525,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "319:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"body": {
										"id": 1608,
										"nodeType": "Block",
										"src": "843:834:6",
										"statements": [
											{
												"assignments": [
													1538
												],
												"declarations": [
													{
														"constant": false,
														"id": 1538,
														"mutability": "mutable",
														"name": "low",
														"nameLocation": "861:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 1608,
														"src": "853:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1537,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "853:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1540,
												"initialValue": {
													"hexValue": "30",
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "867:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "853:15:6"
											},
											{
												"assignments": [
													1542
												],
												"declarations": [
													{
														"constant": false,
														"id": 1542,
														"mutability": "mutable",
														"name": "high",
														"nameLocation": "886:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1608,
														"src": "878:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1541,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "878:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1545,
												"initialValue": {
													"expression": {
														"id": 1543,
														"name": "array",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1530,
														"src": "893:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[] storage pointer"
														}
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "899:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "893:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "878:27:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1546,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1542,
														"src": "920:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1547,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "928:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "920:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1552,
												"nodeType": "IfStatement",
												"src": "916:48:6",
												"trueBody": {
													"id": 1551,
													"nodeType": "Block",
													"src": "931:33:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "952:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1536,
															"id": 1550,
															"nodeType": "Return",
															"src": "945:8:6"
														}
													]
												}
											},
											{
												"body": {
													"id": 1584,
													"nodeType": "Block",
													"src": "993:423:6",
													"statements": [
														{
															"assignments": [
																1557
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1557,
																	"mutability": "mutable",
																	"name": "mid",
																	"nameLocation": "1015:3:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1584,
																	"src": "1007:11:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1556,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1007:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1563,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1560,
																		"name": "low",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1538,
																		"src": "1034:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1561,
																		"name": "high",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1542,
																		"src": "1039:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1558,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2929,
																		"src": "1021:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2929_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1026:7:6",
																	"memberName": "average",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2103,
																	"src": "1021:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1021:23:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1007:37:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1565,
																				"name": "array",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1530,
																				"src": "1282:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				}
																			},
																			{
																				"id": 1566,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1557,
																				"src": "1289:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1564,
																			"name": "unsafeAccess",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1630,
																				1651,
																				1672
																			],
																			"referencedDeclaration": 1672,
																			"src": "1269:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1744_storage_ptr_$",
																				"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																			}
																		},
																		"id": 1567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1269:24:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Uint256Slot_$1744_storage_ptr",
																			"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																		}
																	},
																	"id": 1568,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1294:5:6",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1743,
																	"src": "1269:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1569,
																	"name": "element",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1532,
																	"src": "1302:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1269:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1582,
																"nodeType": "Block",
																"src": "1360:46:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1576,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1538,
																				"src": "1378:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1579,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1577,
																					"name": "mid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1557,
																					"src": "1384:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1578,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1390:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "1384:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1378:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1581,
																		"nodeType": "ExpressionStatement",
																		"src": "1378:13:6"
																	}
																]
															},
															"id": 1583,
															"nodeType": "IfStatement",
															"src": "1265:141:6",
															"trueBody": {
																"id": 1575,
																"nodeType": "Block",
																"src": "1311:43:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1571,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1542,
																				"src": "1329:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1572,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1557,
																				"src": "1336:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1329:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1574,
																		"nodeType": "ExpressionStatement",
																		"src": "1329:10:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1553,
														"name": "low",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1538,
														"src": "981:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1554,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1542,
														"src": "987:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "981:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1585,
												"nodeType": "WhileStatement",
												"src": "974:442:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1586,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1538,
															"src": "1533:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1587,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1539:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1533:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1590,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1530,
																		"src": "1557:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1591,
																			"name": "low",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1538,
																			"src": "1564:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1570:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1564:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1589,
																	"name": "unsafeAccess",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1630,
																		1651,
																		1672
																	],
																	"referencedDeclaration": 1672,
																	"src": "1544:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1744_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																	}
																},
																"id": 1594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1544:28:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Uint256Slot_$1744_storage_ptr",
																	"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																}
															},
															"id": 1595,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1573:5:6",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1743,
															"src": "1544:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1596,
															"name": "element",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "1582:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1544:45:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1533:56:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1606,
													"nodeType": "Block",
													"src": "1636:35:6",
													"statements": [
														{
															"expression": {
																"id": 1604,
																"name": "low",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1538,
																"src": "1657:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1536,
															"id": 1605,
															"nodeType": "Return",
															"src": "1650:10:6"
														}
													]
												},
												"id": 1607,
												"nodeType": "IfStatement",
												"src": "1529:142:6",
												"trueBody": {
													"id": 1603,
													"nodeType": "Block",
													"src": "1591:39:6",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1599,
																	"name": "low",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1538,
																	"src": "1612:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1618:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1612:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1536,
															"id": 1602,
															"nodeType": "Return",
															"src": "1605:14:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1527,
										"nodeType": "StructuredDocumentation",
										"src": "333:407:6",
										"text": " @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n `array` is expected to be sorted in ascending order, and to contain no\n repeated elements."
									},
									"id": 1609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findUpperBound",
									"nameLocation": "754:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "787:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "769:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1528,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "769:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1529,
													"nodeType": "ArrayTypeName",
													"src": "769:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "802:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "794:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "768:42:6"
									},
									"returnParameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "834:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "833:9:6"
									},
									"scope": 1699,
									"src": "745:932:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1629,
										"nodeType": "Block",
										"src": "1993:459:6",
										"statements": [
											{
												"assignments": [
													1622
												],
												"declarations": [
													{
														"constant": false,
														"id": 1622,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2011:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1629,
														"src": "2003:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1621,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2003:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1623,
												"nodeType": "VariableDeclarationStatement",
												"src": "2003:12:6"
											},
											{
												"AST": {
													"nativeSrc": "2316:92:6",
													"nodeType": "YulBlock",
													"src": "2316:92:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2337:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2337:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "2340:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "2340:8:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2330:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2330:6:6"
																},
																"nativeSrc": "2330:19:6",
																"nodeType": "YulFunctionCall",
																"src": "2330:19:6"
															},
															"nativeSrc": "2330:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "2330:19:6"
														},
														{
															"nativeSrc": "2362:36:6",
															"nodeType": "YulAssignment",
															"src": "2362:36:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2384:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2384:1:6",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2387:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2387:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "2374:9:6",
																			"nodeType": "YulIdentifier",
																			"src": "2374:9:6"
																		},
																		"nativeSrc": "2374:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2374:18:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2394:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2394:3:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2370:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2370:3:6"
																},
																"nativeSrc": "2370:28:6",
																"nodeType": "YulFunctionCall",
																"src": "2370:28:6"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "2362:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2362:4:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1613,
														"isOffset": false,
														"isSlot": true,
														"src": "2340:8:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1615,
														"isOffset": false,
														"isSlot": false,
														"src": "2394:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1622,
														"isOffset": false,
														"isSlot": false,
														"src": "2362:4:6",
														"valueSize": 1
													}
												],
												"id": 1624,
												"nodeType": "InlineAssembly",
												"src": "2307:101:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1625,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1622,
															"src": "2424:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1626,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2429:14:6",
														"memberName": "getAddressSlot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1761,
														"src": "2424:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1735_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
														}
													},
													"id": 1627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2424:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1735_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot storage pointer"
													}
												},
												"functionReturnParameters": 1620,
												"id": 1628,
												"nodeType": "Return",
												"src": "2417:28:6"
											}
										]
									},
									"documentation": {
										"id": 1610,
										"nodeType": "StructuredDocumentation",
										"src": "1683:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "1888:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "1919:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "1901:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1611,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1901:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1612,
													"nodeType": "ArrayTypeName",
													"src": "1901:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "1932:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "1924:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1924:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1900:36:6"
									},
									"returnParameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "1960:31:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1735_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1618,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1617,
														"name": "StorageSlot.AddressSlot",
														"nameLocations": [
															"1960:11:6",
															"1972:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1735,
														"src": "1960:23:6"
													},
													"referencedDeclaration": 1735,
													"src": "1960:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1735_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:33:6"
									},
									"scope": 1699,
									"src": "1879:573:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1650,
										"nodeType": "Block",
										"src": "2768:459:6",
										"statements": [
											{
												"assignments": [
													1643
												],
												"declarations": [
													{
														"constant": false,
														"id": 1643,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2786:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1650,
														"src": "2778:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1642,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2778:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1644,
												"nodeType": "VariableDeclarationStatement",
												"src": "2778:12:6"
											},
											{
												"AST": {
													"nativeSrc": "3091:92:6",
													"nodeType": "YulBlock",
													"src": "3091:92:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3112:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3112:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "3115:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "3115:8:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3105:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3105:6:6"
																},
																"nativeSrc": "3105:19:6",
																"nodeType": "YulFunctionCall",
																"src": "3105:19:6"
															},
															"nativeSrc": "3105:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "3105:19:6"
														},
														{
															"nativeSrc": "3137:36:6",
															"nodeType": "YulAssignment",
															"src": "3137:36:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3159:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3159:1:6",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3162:4:6",
																				"nodeType": "YulLiteral",
																				"src": "3162:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "3149:9:6",
																			"nodeType": "YulIdentifier",
																			"src": "3149:9:6"
																		},
																		"nativeSrc": "3149:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3149:18:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3169:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3169:3:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3145:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3145:3:6"
																},
																"nativeSrc": "3145:28:6",
																"nodeType": "YulFunctionCall",
																"src": "3145:28:6"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "3137:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3137:4:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1634,
														"isOffset": false,
														"isSlot": true,
														"src": "3115:8:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1636,
														"isOffset": false,
														"isSlot": false,
														"src": "3169:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1643,
														"isOffset": false,
														"isSlot": false,
														"src": "3137:4:6",
														"valueSize": 1
													}
												],
												"id": 1645,
												"nodeType": "InlineAssembly",
												"src": "3082:101:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1646,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1643,
															"src": "3199:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1647,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3204:14:6",
														"memberName": "getBytes32Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1783,
														"src": "3199:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$1741_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"
														}
													},
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3199:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1741_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot storage pointer"
													}
												},
												"functionReturnParameters": 1641,
												"id": 1649,
												"nodeType": "Return",
												"src": "3192:28:6"
											}
										]
									},
									"documentation": {
										"id": 1631,
										"nodeType": "StructuredDocumentation",
										"src": "2458:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "2663:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "2694:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "2676:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1632,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2676:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1633,
													"nodeType": "ArrayTypeName",
													"src": "2676:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "2707:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "2699:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2675:36:6"
									},
									"returnParameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "2735:31:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1741_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1639,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1638,
														"name": "StorageSlot.Bytes32Slot",
														"nameLocations": [
															"2735:11:6",
															"2747:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1741,
														"src": "2735:23:6"
													},
													"referencedDeclaration": 1741,
													"src": "2735:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1741_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2734:33:6"
									},
									"scope": 1699,
									"src": "2654:573:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1671,
										"nodeType": "Block",
										"src": "3543:459:6",
										"statements": [
											{
												"assignments": [
													1664
												],
												"declarations": [
													{
														"constant": false,
														"id": 1664,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "3561:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1671,
														"src": "3553:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1663,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3553:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1665,
												"nodeType": "VariableDeclarationStatement",
												"src": "3553:12:6"
											},
											{
												"AST": {
													"nativeSrc": "3866:92:6",
													"nodeType": "YulBlock",
													"src": "3866:92:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3887:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3887:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "3890:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "3890:8:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3880:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3880:6:6"
																},
																"nativeSrc": "3880:19:6",
																"nodeType": "YulFunctionCall",
																"src": "3880:19:6"
															},
															"nativeSrc": "3880:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "3880:19:6"
														},
														{
															"nativeSrc": "3912:36:6",
															"nodeType": "YulAssignment",
															"src": "3912:36:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3934:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3934:1:6",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3937:4:6",
																				"nodeType": "YulLiteral",
																				"src": "3937:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "3924:9:6",
																			"nodeType": "YulIdentifier",
																			"src": "3924:9:6"
																		},
																		"nativeSrc": "3924:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3924:18:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3944:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3944:3:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3920:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3920:3:6"
																},
																"nativeSrc": "3920:28:6",
																"nodeType": "YulFunctionCall",
																"src": "3920:28:6"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "3912:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3912:4:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1655,
														"isOffset": false,
														"isSlot": true,
														"src": "3890:8:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1657,
														"isOffset": false,
														"isSlot": false,
														"src": "3944:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1664,
														"isOffset": false,
														"isSlot": false,
														"src": "3912:4:6",
														"valueSize": 1
													}
												],
												"id": 1666,
												"nodeType": "InlineAssembly",
												"src": "3857:101:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1667,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "3974:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3979:14:6",
														"memberName": "getUint256Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1794,
														"src": "3974:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$1744_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
														}
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3974:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1744_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot storage pointer"
													}
												},
												"functionReturnParameters": 1662,
												"id": 1670,
												"nodeType": "Return",
												"src": "3967:28:6"
											}
										]
									},
									"documentation": {
										"id": 1652,
										"nodeType": "StructuredDocumentation",
										"src": "3233:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "3438:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "3469:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "3451:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1653,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3451:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1654,
													"nodeType": "ArrayTypeName",
													"src": "3451:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "3482:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "3474:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:36:6"
									},
									"returnParameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "3510:31:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1744_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1660,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1659,
														"name": "StorageSlot.Uint256Slot",
														"nameLocations": [
															"3510:11:6",
															"3522:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1744,
														"src": "3510:23:6"
													},
													"referencedDeclaration": 1744,
													"src": "3510:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1744_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3509:33:6"
									},
									"scope": 1699,
									"src": "3429:573:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1684,
										"nodeType": "Block",
										"src": "4303:98:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4322:73:6",
													"nodeType": "YulBlock",
													"src": "4322:73:6",
													"statements": [
														{
															"nativeSrc": "4336:49:6",
															"nodeType": "YulAssignment",
															"src": "4336:49:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nativeSrc": "4357:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4357:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4362:4:6",
																						"nodeType": "YulLiteral",
																						"src": "4362:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4353:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4353:3:6"
																				},
																				"nativeSrc": "4353:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4353:14:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4373:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4373:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4378:4:6",
																						"nodeType": "YulLiteral",
																						"src": "4378:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4369:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4369:3:6"
																				},
																				"nativeSrc": "4369:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4369:14:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4349:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4349:3:6"
																		},
																		"nativeSrc": "4349:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4349:35:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4343:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4343:5:6"
																},
																"nativeSrc": "4343:42:6",
																"nodeType": "YulFunctionCall",
																"src": "4343:42:6"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nativeSrc": "4336:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1676,
														"isOffset": false,
														"isSlot": false,
														"src": "4357:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1678,
														"isOffset": false,
														"isSlot": false,
														"src": "4373:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1681,
														"isOffset": false,
														"isSlot": false,
														"src": "4336:3:6",
														"valueSize": 1
													}
												],
												"id": 1683,
												"nodeType": "InlineAssembly",
												"src": "4313:82:6"
											}
										]
									},
									"documentation": {
										"id": 1673,
										"nodeType": "StructuredDocumentation",
										"src": "4008:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "4213:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "4249:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "4232:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1674,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4232:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1675,
													"nodeType": "ArrayTypeName",
													"src": "4232:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "4262:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "4254:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4254:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4231:35:6"
									},
									"returnParameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "4298:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "4290:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4290:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4289:13:6"
									},
									"scope": 1699,
									"src": "4204:197:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1697,
										"nodeType": "Block",
										"src": "4702:98:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4721:73:6",
													"nodeType": "YulBlock",
													"src": "4721:73:6",
													"statements": [
														{
															"nativeSrc": "4735:49:6",
															"nodeType": "YulAssignment",
															"src": "4735:49:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nativeSrc": "4756:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4756:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4761:4:6",
																						"nodeType": "YulLiteral",
																						"src": "4761:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4752:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4752:3:6"
																				},
																				"nativeSrc": "4752:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4752:14:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4772:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4772:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4777:4:6",
																						"nodeType": "YulLiteral",
																						"src": "4777:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4768:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4768:3:6"
																				},
																				"nativeSrc": "4768:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4768:14:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4748:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4748:3:6"
																		},
																		"nativeSrc": "4748:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4748:35:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4742:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4742:5:6"
																},
																"nativeSrc": "4742:42:6",
																"nodeType": "YulFunctionCall",
																"src": "4742:42:6"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nativeSrc": "4735:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4735:3:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1689,
														"isOffset": false,
														"isSlot": false,
														"src": "4756:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1691,
														"isOffset": false,
														"isSlot": false,
														"src": "4772:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1694,
														"isOffset": false,
														"isSlot": false,
														"src": "4735:3:6",
														"valueSize": 1
													}
												],
												"id": 1696,
												"nodeType": "InlineAssembly",
												"src": "4712:82:6"
											}
										]
									},
									"documentation": {
										"id": 1686,
										"nodeType": "StructuredDocumentation",
										"src": "4407:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "4612:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "4648:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "4631:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1687,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4631:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1688,
													"nodeType": "ArrayTypeName",
													"src": "4631:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "4661:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "4653:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4653:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:35:6"
									},
									"returnParameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "4697:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "4689:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4689:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4688:13:6"
									},
									"scope": 1699,
									"src": "4603:197:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1700,
							"src": "276:4526:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:4703:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1729
						]
					},
					"id": 1730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1701,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1702,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1729,
							"linearizedBaseContracts": [
								1729
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1710,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1707,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1706,
												"id": 1709,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1711,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1729,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1719,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1716,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1715,
												"id": 1718,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1713,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1729,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1727,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1725,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1724,
												"id": 1726,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1729,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1730,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1839
						]
					},
					"id": 1840,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1732,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:8",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1839,
							"linearizedBaseContracts": [
								1839
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1735,
									"members": [
										{
											"constant": false,
											"id": 1734,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1735,
											"src": "1300:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1733,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:8",
									"nodeType": "StructDefinition",
									"scope": 1839,
									"src": "1271:49:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1738,
									"members": [
										{
											"constant": false,
											"id": 1737,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1738,
											"src": "1355:10:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1736,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:8",
									"nodeType": "StructDefinition",
									"scope": 1839,
									"src": "1326:46:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1741,
									"members": [
										{
											"constant": false,
											"id": 1740,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1741,
											"src": "1407:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1739,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:8",
									"nodeType": "StructDefinition",
									"scope": 1839,
									"src": "1378:49:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1744,
									"members": [
										{
											"constant": false,
											"id": 1743,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1744,
											"src": "1462:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1742,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:8",
									"nodeType": "StructDefinition",
									"scope": 1839,
									"src": "1433:49:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1747,
									"members": [
										{
											"constant": false,
											"id": 1746,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1747,
											"src": "1516:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1745,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:8",
									"nodeType": "StructDefinition",
									"scope": 1839,
									"src": "1488:47:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1750,
									"members": [
										{
											"constant": false,
											"id": 1749,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1750,
											"src": "1568:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1748,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:8",
									"nodeType": "StructDefinition",
									"scope": 1839,
									"src": "1541:45:8",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1760,
										"nodeType": "Block",
										"src": "1768:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:8",
													"nodeType": "YulBlock",
													"src": "1830:38:8",
													"statements": [
														{
															"nativeSrc": "1844:14:8",
															"nodeType": "YulAssignment",
															"src": "1844:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:8",
																"nodeType": "YulIdentifier",
																"src": "1854:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1757,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1753,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:8",
														"valueSize": 1
													}
												],
												"id": 1759,
												"nodeType": "InlineAssembly",
												"src": "1821:47:8"
											}
										]
									},
									"documentation": {
										"id": 1751,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:8",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "1708:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1752,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:8"
									},
									"returnParameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "1745:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1735_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1756,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1755,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1735,
														"src": "1745:11:8"
													},
													"referencedDeclaration": 1735,
													"src": "1745:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1735_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:8"
									},
									"scope": 1839,
									"src": "1684:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1771,
										"nodeType": "Block",
										"src": "2056:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:8",
													"nodeType": "YulBlock",
													"src": "2118:38:8",
													"statements": [
														{
															"nativeSrc": "2132:14:8",
															"nodeType": "YulAssignment",
															"src": "2132:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:8",
																"nodeType": "YulIdentifier",
																"src": "2142:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1768,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1764,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:8",
														"valueSize": 1
													}
												],
												"id": 1770,
												"nodeType": "InlineAssembly",
												"src": "2109:47:8"
											}
										]
									},
									"documentation": {
										"id": 1762,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:8",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "1996:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1763,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:8"
									},
									"returnParameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "2033:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1738_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1767,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1766,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1738,
														"src": "2033:11:8"
													},
													"referencedDeclaration": 1738,
													"src": "2033:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1738_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:8"
									},
									"scope": 1839,
									"src": "1972:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1782,
										"nodeType": "Block",
										"src": "2344:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:8",
													"nodeType": "YulBlock",
													"src": "2406:38:8",
													"statements": [
														{
															"nativeSrc": "2420:14:8",
															"nodeType": "YulAssignment",
															"src": "2420:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:8",
																"nodeType": "YulIdentifier",
																"src": "2430:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1779,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1775,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:8",
														"valueSize": 1
													}
												],
												"id": 1781,
												"nodeType": "InlineAssembly",
												"src": "2397:47:8"
											}
										]
									},
									"documentation": {
										"id": 1773,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:8",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "2284:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1774,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:8"
									},
									"returnParameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "2321:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1741_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1778,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1777,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1741,
														"src": "2321:11:8"
													},
													"referencedDeclaration": 1741,
													"src": "2321:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1741_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:8"
									},
									"scope": 1839,
									"src": "2260:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1793,
										"nodeType": "Block",
										"src": "2632:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:8",
													"nodeType": "YulBlock",
													"src": "2694:38:8",
													"statements": [
														{
															"nativeSrc": "2708:14:8",
															"nodeType": "YulAssignment",
															"src": "2708:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:8",
																"nodeType": "YulIdentifier",
																"src": "2718:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1790,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1786,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:8",
														"valueSize": 1
													}
												],
												"id": 1792,
												"nodeType": "InlineAssembly",
												"src": "2685:47:8"
											}
										]
									},
									"documentation": {
										"id": 1784,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:8",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "2572:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1785,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:8"
									},
									"returnParameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "2609:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1744_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1789,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1788,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1744,
														"src": "2609:11:8"
													},
													"referencedDeclaration": 1744,
													"src": "2609:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1744_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:8"
									},
									"scope": 1839,
									"src": "2548:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1804,
										"nodeType": "Block",
										"src": "2917:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:8",
													"nodeType": "YulBlock",
													"src": "2979:38:8",
													"statements": [
														{
															"nativeSrc": "2993:14:8",
															"nodeType": "YulAssignment",
															"src": "2993:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:8",
																"nodeType": "YulIdentifier",
																"src": "3003:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1801,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1797,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:8",
														"valueSize": 1
													}
												],
												"id": 1803,
												"nodeType": "InlineAssembly",
												"src": "2970:47:8"
											}
										]
									},
									"documentation": {
										"id": 1795,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:8",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "2858:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1796,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:8"
									},
									"returnParameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "2895:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1747_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1800,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1799,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1747,
														"src": "2895:10:8"
													},
													"referencedDeclaration": 1747,
													"src": "2895:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1747_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:8"
									},
									"scope": 1839,
									"src": "2835:188:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1815,
										"nodeType": "Block",
										"src": "3225:112:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:8",
													"nodeType": "YulBlock",
													"src": "3287:44:8",
													"statements": [
														{
															"nativeSrc": "3301:20:8",
															"nodeType": "YulAssignment",
															"src": "3301:20:8",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:8",
																"nodeType": "YulIdentifier",
																"src": "3311:10:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1812,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1808,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:8",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1814,
												"nodeType": "InlineAssembly",
												"src": "3278:53:8"
											}
										]
									},
									"documentation": {
										"id": 1806,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:8",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "3158:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1807,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:8"
									},
									"returnParameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "3203:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1747_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1811,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1810,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1747,
														"src": "3203:10:8"
													},
													"referencedDeclaration": 1747,
													"src": "3203:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1747_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:8"
									},
									"scope": 1839,
									"src": "3135:202:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1826,
										"nodeType": "Block",
										"src": "3513:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:8",
													"nodeType": "YulBlock",
													"src": "3575:38:8",
													"statements": [
														{
															"nativeSrc": "3589:14:8",
															"nodeType": "YulAssignment",
															"src": "3589:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:8",
																"nodeType": "YulIdentifier",
																"src": "3599:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1823,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1819,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:8",
														"valueSize": 1
													}
												],
												"id": 1825,
												"nodeType": "InlineAssembly",
												"src": "3566:47:8"
											}
										]
									},
									"documentation": {
										"id": 1817,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:8",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "3455:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1818,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:8"
									},
									"returnParameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "3492:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1750_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1822,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1821,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1750,
														"src": "3492:9:8"
													},
													"referencedDeclaration": 1750,
													"src": "3492:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1750_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:8"
									},
									"scope": 1839,
									"src": "3433:186:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1837,
										"nodeType": "Block",
										"src": "3816:112:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:8",
													"nodeType": "YulBlock",
													"src": "3878:44:8",
													"statements": [
														{
															"nativeSrc": "3892:20:8",
															"nodeType": "YulAssignment",
															"src": "3892:20:8",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:8",
																"nodeType": "YulIdentifier",
																"src": "3902:10:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1834,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1830,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:8",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1836,
												"nodeType": "InlineAssembly",
												"src": "3869:53:8"
											}
										]
									},
									"documentation": {
										"id": 1828,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:8",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1838,
												"src": "3751:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1829,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:8"
									},
									"returnParameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1838,
												"src": "3795:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1750_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1833,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1832,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1750,
														"src": "3795:9:8"
													},
													"referencedDeclaration": 1750,
													"src": "3795:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1750_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:8"
									},
									"scope": 1839,
									"src": "3729:199:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1840,
							"src": "1245:2685:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1863
						],
						"IERC165": [
							1875
						]
					},
					"id": 1864,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1841,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1843,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1864,
							"sourceUnit": 1876,
							"src": "140:38:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1842,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1875,
										"src": "148:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1845,
										"name": "IERC165",
										"nameLocations": [
											"687:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1875,
										"src": "687:7:9"
									},
									"id": 1846,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:9"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1844,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:9",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1863,
							"linearizedBaseContracts": [
								1863,
								1875
							],
							"name": "ERC165",
							"nameLocation": "677:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1874
									],
									"body": {
										"id": 1861,
										"nodeType": "Block",
										"src": "844:64:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1854,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1849,
														"src": "861:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1856,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1875,
																	"src": "881:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1875_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1875_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1855,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1857,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1875",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1858,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:9",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1853,
												"id": 1860,
												"nodeType": "Return",
												"src": "854:47:9"
											}
										]
									},
									"documentation": {
										"id": 1847,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "789:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1848,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:9"
									},
									"returnParameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "838:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1851,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:9"
									},
									"scope": 1863,
									"src": "762:146:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1864,
							"src": "659:251:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1875
						]
					},
					"id": 1876,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1865,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1866,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:10",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1875,
							"linearizedBaseContracts": [
								1875
							],
							"name": "IERC165",
							"nameLocation": "431:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1867,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1874,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "817:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1868,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:10"
									},
									"returnParameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "860:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1871,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:10"
									},
									"scope": 1875,
									"src": "790:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1876,
							"src": "421:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2929
						]
					},
					"id": 2930,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1877,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1878,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:11",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2929,
							"linearizedBaseContracts": [
								2929
							],
							"name": "Math",
							"nameLocation": "211:4:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1879,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:11",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1881,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:11"
									},
									"src": "277:29:11"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1886,
									"members": [
										{
											"id": 1882,
											"name": "Floor",
											"nameLocation": "336:5:11",
											"nodeType": "EnumValue",
											"src": "336:5:11"
										},
										{
											"id": 1883,
											"name": "Ceil",
											"nameLocation": "379:4:11",
											"nodeType": "EnumValue",
											"src": "379:4:11"
										},
										{
											"id": 1884,
											"name": "Trunc",
											"nameLocation": "421:5:11",
											"nodeType": "EnumValue",
											"src": "421:5:11"
										},
										{
											"id": 1885,
											"name": "Expand",
											"nameLocation": "451:6:11",
											"nodeType": "EnumValue",
											"src": "451:6:11"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:11",
									"nodeType": "EnumDefinition",
									"src": "312:169:11"
								},
								{
									"body": {
										"id": 1917,
										"nodeType": "Block",
										"src": "661:140:11",
										"statements": [
											{
												"id": 1916,
												"nodeType": "UncheckedBlock",
												"src": "671:124:11",
												"statements": [
													{
														"assignments": [
															1899
														],
														"declarations": [
															{
																"constant": false,
																"id": 1899,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:11",
																"nodeType": "VariableDeclaration",
																"scope": 1916,
																"src": "695:9:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1898,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1903,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1900,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1889,
																"src": "707:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1901,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1891,
																"src": "711:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1904,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1899,
																"src": "730:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1905,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1889,
																"src": "734:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1911,
														"nodeType": "IfStatement",
														"src": "726:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1909,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1897,
															"id": 1910,
															"nodeType": "Return",
															"src": "737:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1913,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1899,
																	"src": "782:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1914,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1897,
														"id": 1915,
														"nodeType": "Return",
														"src": "768:16:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1887,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:11",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "601:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "612:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:11"
									},
									"returnParameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "646:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1893,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "652:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:11"
									},
									"scope": 2929,
									"src": "585:216:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1945,
										"nodeType": "Block",
										"src": "984:113:11",
										"statements": [
											{
												"id": 1944,
												"nodeType": "UncheckedBlock",
												"src": "994:97:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1930,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1923,
																"src": "1022:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1931,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1921,
																"src": "1026:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1937,
														"nodeType": "IfStatement",
														"src": "1018:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1935,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1929,
															"id": 1936,
															"nodeType": "Return",
															"src": "1029:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1939,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1921,
																		"src": "1074:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1940,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1923,
																		"src": "1078:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1942,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1929,
														"id": 1943,
														"nodeType": "Return",
														"src": "1060:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1919,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:11",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "924:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "935:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:11"
									},
									"returnParameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "969:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1925,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "975:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:11"
									},
									"scope": 2929,
									"src": "908:189:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1987,
										"nodeType": "Block",
										"src": "1283:417:11",
										"statements": [
											{
												"id": 1986,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1958,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1949,
																"src": "1551:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1965,
														"nodeType": "IfStatement",
														"src": "1547:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1962,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1963,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1957,
															"id": 1964,
															"nodeType": "Return",
															"src": "1559:16:11"
														}
													},
													{
														"assignments": [
															1967
														],
														"declarations": [
															{
																"constant": false,
																"id": 1967,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:11",
																"nodeType": "VariableDeclaration",
																"scope": 1986,
																"src": "1589:9:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1966,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1971,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1968,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1949,
																"src": "1601:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1969,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "1605:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1974,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1972,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1967,
																	"src": "1624:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1973,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1949,
																	"src": "1628:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1975,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "1633:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1981,
														"nodeType": "IfStatement",
														"src": "1620:33:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1979,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1957,
															"id": 1980,
															"nodeType": "Return",
															"src": "1636:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1983,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1967,
																	"src": "1681:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1984,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1957,
														"id": 1985,
														"nodeType": "Return",
														"src": "1667:16:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1947,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:11",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "1223:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "1234:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:11"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "1268:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1953,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "1274:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:11"
									},
									"scope": 2929,
									"src": "1207:493:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2015,
										"nodeType": "Block",
										"src": "1887:114:11",
										"statements": [
											{
												"id": 2014,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2000,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1993,
																"src": "1925:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2001,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2007,
														"nodeType": "IfStatement",
														"src": "1921:29:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2005,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1999,
															"id": 2006,
															"nodeType": "Return",
															"src": "1933:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2009,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1991,
																		"src": "1978:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2010,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1993,
																		"src": "1982:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2012,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1999,
														"id": 2013,
														"nodeType": "Return",
														"src": "1964:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1989,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:11",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "1827:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "1838:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:11"
									},
									"returnParameters": {
										"id": 1999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "1872:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1995,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "1878:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:11"
									},
									"scope": 2929,
									"src": "1811:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2043,
										"nodeType": "Block",
										"src": "2198:114:11",
										"statements": [
											{
												"id": 2042,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2028,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2021,
																"src": "2236:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2035,
														"nodeType": "IfStatement",
														"src": "2232:29:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2033,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2027,
															"id": 2034,
															"nodeType": "Return",
															"src": "2244:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2037,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2019,
																		"src": "2289:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2038,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2021,
																		"src": "2293:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2040,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2027,
														"id": 2041,
														"nodeType": "Return",
														"src": "2275:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2017,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:11",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "2138:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "2149:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:11"
									},
									"returnParameters": {
										"id": 2027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "2183:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2023,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "2189:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:11"
									},
									"scope": 2929,
									"src": "2122:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2061,
										"nodeType": "Block",
										"src": "2449:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2056,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2054,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2047,
															"src": "2466:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2055,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2049,
															"src": "2470:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2058,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2049,
														"src": "2478:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:11",
													"trueExpression": {
														"id": 2057,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2047,
														"src": "2474:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2053,
												"id": 2060,
												"nodeType": "Return",
												"src": "2459:20:11"
											}
										]
									},
									"documentation": {
										"id": 2045,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:11",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2062,
												"src": "2395:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2062,
												"src": "2406:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:11"
									},
									"returnParameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2062,
												"src": "2440:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:11"
									},
									"scope": 2929,
									"src": "2382:104:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2079,
										"nodeType": "Block",
										"src": "2624:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2074,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2072,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2065,
															"src": "2641:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2073,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2067,
															"src": "2645:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2076,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2067,
														"src": "2653:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:11",
													"trueExpression": {
														"id": 2075,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2065,
														"src": "2649:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2071,
												"id": 2078,
												"nodeType": "Return",
												"src": "2634:20:11"
											}
										]
									},
									"documentation": {
										"id": 2063,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:11",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2080,
												"src": "2570:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2080,
												"src": "2581:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:11"
									},
									"returnParameters": {
										"id": 2071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2080,
												"src": "2615:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:11"
									},
									"scope": 2929,
									"src": "2557:104:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2102,
										"nodeType": "Block",
										"src": "2845:82:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2090,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2083,
																	"src": "2900:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2091,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2085,
																	"src": "2904:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2093,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2099,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2094,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2083,
																		"src": "2910:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2095,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2085,
																		"src": "2914:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2097,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2098,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2089,
												"id": 2101,
												"nodeType": "Return",
												"src": "2892:28:11"
											}
										]
									},
									"documentation": {
										"id": 2081,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:11",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2103,
												"src": "2791:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2103,
												"src": "2802:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:11"
									},
									"returnParameters": {
										"id": 2089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2103,
												"src": "2836:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:11"
									},
									"scope": 2929,
									"src": "2774:153:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2136,
										"nodeType": "Block",
										"src": "3219:260:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2113,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2108,
														"src": "3233:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2114,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2121,
												"nodeType": "IfStatement",
												"src": "3229:127:11",
												"trueBody": {
													"id": 2120,
													"nodeType": "Block",
													"src": "3241:115:11",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2116,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2106,
																	"src": "3340:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2117,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2108,
																	"src": "3344:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2112,
															"id": 2119,
															"nodeType": "Return",
															"src": "3333:12:11"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2122,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2106,
															"src": "3444:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2126,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2106,
																			"src": "3458:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2129,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2130,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2108,
																"src": "3467:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:11",
													"trueExpression": {
														"hexValue": "30",
														"id": 2125,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2112,
												"id": 2135,
												"nodeType": "Return",
												"src": "3437:35:11"
											}
										]
									},
									"documentation": {
										"id": 2104,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:11",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2106,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "3165:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "3176:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:11"
									},
									"returnParameters": {
										"id": 2112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "3210:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:11"
									},
									"scope": 2929,
									"src": "3148:331:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2262,
										"nodeType": "Block",
										"src": "3901:4018:11",
										"statements": [
											{
												"id": 2261,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:11",
												"statements": [
													{
														"assignments": [
															2150
														],
														"declarations": [
															{
																"constant": false,
																"id": 2150,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:11",
																"nodeType": "VariableDeclaration",
																"scope": 2261,
																"src": "4232:13:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2149,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2154,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2151,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2140,
																"src": "4248:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2152,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2142,
																"src": "4252:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:11"
													},
													{
														"assignments": [
															2156
														],
														"declarations": [
															{
																"constant": false,
																"id": 2156,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:11",
																"nodeType": "VariableDeclaration",
																"scope": 2261,
																"src": "4312:13:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2155,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2157,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:11"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:11",
															"nodeType": "YulBlock",
															"src": "4392:122:11",
															"statements": [
																{
																	"nativeSrc": "4410:30:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:11"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:11",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:11"
																				},
																				"nativeSrc": "4433:6:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:11"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:11"
																		},
																		"nativeSrc": "4420:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:11"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:11",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:11",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:11"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:11"
																				},
																				"nativeSrc": "4470:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:11"
																				},
																				"nativeSrc": "4486:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:11"
																		},
																		"nativeSrc": "4466:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2150,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2150,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2156,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:11",
																"valueSize": 1
															},
															{
																"declaration": 2142,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:11",
																"valueSize": 1
															}
														],
														"id": 2158,
														"nodeType": "InlineAssembly",
														"src": "4383:131:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2159,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2156,
																"src": "4595:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2167,
														"nodeType": "IfStatement",
														"src": "4591:368:11",
														"trueBody": {
															"id": 2166,
															"nodeType": "Block",
															"src": "4607:352:11",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2162,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2150,
																			"src": "4925:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2163,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2144,
																			"src": "4933:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2148,
																	"id": 2165,
																	"nodeType": "Return",
																	"src": "4918:26:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2168,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2144,
																"src": "5065:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2169,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2156,
																"src": "5080:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2175,
														"nodeType": "IfStatement",
														"src": "5061:88:11",
														"trueBody": {
															"id": 2174,
															"nodeType": "Block",
															"src": "5087:62:11",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2171,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1881,
																			"src": "5112:20:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2173,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:11"
																}
															]
														}
													},
													{
														"assignments": [
															2177
														],
														"declarations": [
															{
																"constant": false,
																"id": 2177,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:11",
																"nodeType": "VariableDeclaration",
																"scope": 2261,
																"src": "5404:17:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2176,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2178,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:11"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:11",
															"nodeType": "YulBlock",
															"src": "5444:291:11",
															"statements": [
																{
																	"nativeSrc": "5513:38:11",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:11"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:11"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:11",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:11"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:11"
																		},
																		"nativeSrc": "5526:25:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:11"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:11",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:11"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:11",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:11"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:11"
																				},
																				"nativeSrc": "5653:20:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:11"
																		},
																		"nativeSrc": "5642:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:11"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:11",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:11"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:11"
																		},
																		"nativeSrc": "5700:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2144,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:11",
																"valueSize": 1
															},
															{
																"declaration": 2150,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2150,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2150,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2156,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2156,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2177,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:11",
																"valueSize": 1
															},
															{
																"declaration": 2177,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:11",
																"valueSize": 1
															},
															{
																"declaration": 2177,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:11",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:11",
																"valueSize": 1
															},
															{
																"declaration": 2142,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:11",
																"valueSize": 1
															}
														],
														"id": 2179,
														"nodeType": "InlineAssembly",
														"src": "5435:300:11"
													},
													{
														"assignments": [
															2181
														],
														"declarations": [
															{
																"constant": false,
																"id": 2181,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:11",
																"nodeType": "VariableDeclaration",
																"scope": 2261,
																"src": "5939:12:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2180,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2188,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2182,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2144,
																"src": "5954:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2184,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2144,
																			"src": "5973:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2186,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:11"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:11",
															"nodeType": "YulBlock",
															"src": "6008:362:11",
															"statements": [
																{
																	"nativeSrc": "6073:37:11",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:11",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:11"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:11"
																		},
																		"nativeSrc": "6088:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:11"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:11",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:11"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:11",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:11"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:11"
																		},
																		"nativeSrc": "6186:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:11"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:11",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:11",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:11",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:11",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:11"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:11"
																						},
																						"nativeSrc": "6333:12:11",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:11"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:11"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:11"
																				},
																				"nativeSrc": "6329:23:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:11"
																		},
																		"nativeSrc": "6325:31:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:11"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:11",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2144,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:11",
																"valueSize": 1
															},
															{
																"declaration": 2144,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:11",
																"valueSize": 1
															},
															{
																"declaration": 2150,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2150,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2181,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2181,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2181,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2181,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2181,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:11",
																"valueSize": 1
															}
														],
														"id": 2189,
														"nodeType": "InlineAssembly",
														"src": "5999:371:11"
													},
													{
														"expression": {
															"id": 2194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2190,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2150,
																"src": "6436:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2191,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2156,
																	"src": "6445:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2192,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2181,
																	"src": "6453:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2195,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:11"
													},
													{
														"assignments": [
															2197
														],
														"declarations": [
															{
																"constant": false,
																"id": 2197,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:11",
																"nodeType": "VariableDeclaration",
																"scope": 2261,
																"src": "6775:15:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2196,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2204,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2199,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2144,
																			"src": "6798:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2201,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:11"
													},
													{
														"expression": {
															"id": 2211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2205,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2197,
																"src": "7031:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2207,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2144,
																		"src": "7046:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2208,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2197,
																		"src": "7060:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2212,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:11"
													},
													{
														"expression": {
															"id": 2219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2213,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2197,
																"src": "7100:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2215,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2144,
																		"src": "7115:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2216,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2197,
																		"src": "7129:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2220,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:11"
													},
													{
														"expression": {
															"id": 2227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2221,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2197,
																"src": "7170:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2223,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2144,
																		"src": "7185:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2224,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2197,
																		"src": "7199:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2228,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:11"
													},
													{
														"expression": {
															"id": 2235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2229,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2197,
																"src": "7240:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2231,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2144,
																		"src": "7255:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2232,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2197,
																		"src": "7269:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2236,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:11"
													},
													{
														"expression": {
															"id": 2243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2237,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2197,
																"src": "7310:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2239,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2144,
																		"src": "7325:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2240,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2197,
																		"src": "7339:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2244,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:11"
													},
													{
														"expression": {
															"id": 2251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2245,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2197,
																"src": "7381:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2247,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2144,
																		"src": "7396:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2248,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2197,
																		"src": "7410:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2252,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:11"
													},
													{
														"expression": {
															"id": 2257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2253,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2147,
																"src": "7851:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2254,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2150,
																	"src": "7860:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2255,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2197,
																	"src": "7868:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2258,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:11"
													},
													{
														"expression": {
															"id": 2259,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2147,
															"src": "7896:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2148,
														"id": 2260,
														"nodeType": "Return",
														"src": "7889:13:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2138,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:11",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "3819:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "3830:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "3841:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:11"
									},
									"returnParameters": {
										"id": 2148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2147,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "3885:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:11"
									},
									"scope": 2929,
									"src": "3803:4116:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2305,
										"nodeType": "Block",
										"src": "8161:192:11",
										"statements": [
											{
												"assignments": [
													2279
												],
												"declarations": [
													{
														"constant": false,
														"id": 2279,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2305,
														"src": "8171:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2278,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2285,
												"initialValue": {
													"arguments": [
														{
															"id": 2281,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2266,
															"src": "8195:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2282,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2268,
															"src": "8198:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2283,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2270,
															"src": "8201:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2280,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2263,
															2306
														],
														"referencedDeclaration": 2263,
														"src": "8188:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2287,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2273,
																"src": "8244:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1886",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1886",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2286,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2928,
															"src": "8227:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1886_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2290,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2266,
																	"src": "8264:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2291,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2268,
																	"src": "8267:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2292,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2270,
																	"src": "8270:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2289,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2302,
												"nodeType": "IfStatement",
												"src": "8223:101:11",
												"trueBody": {
													"id": 2301,
													"nodeType": "Block",
													"src": "8288:36:11",
													"statements": [
														{
															"expression": {
																"id": 2299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2297,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2279,
																	"src": "8302:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2300,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2303,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2279,
													"src": "8340:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2277,
												"id": 2304,
												"nodeType": "Return",
												"src": "8333:13:11"
											}
										]
									},
									"documentation": {
										"id": 2264,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:11",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "8067:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2268,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "8078:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2270,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "8089:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2273,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "8110:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1886",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2272,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2271,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1886,
														"src": "8110:8:11"
													},
													"referencedDeclaration": 1886,
													"src": "8110:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1886",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:11"
									},
									"returnParameters": {
										"id": 2277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "8152:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:11"
									},
									"scope": 2929,
									"src": "8051:302:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2417,
										"nodeType": "Block",
										"src": "8644:1585:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2314,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2309,
														"src": "8658:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2315,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2320,
												"nodeType": "IfStatement",
												"src": "8654:45:11",
												"trueBody": {
													"id": 2319,
													"nodeType": "Block",
													"src": "8666:33:11",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2313,
															"id": 2318,
															"nodeType": "Return",
															"src": "8680:8:11"
														}
													]
												}
											},
											{
												"assignments": [
													2322
												],
												"declarations": [
													{
														"constant": false,
														"id": 2322,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2417,
														"src": "9378:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2321,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2331,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2323,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2325,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2309,
																			"src": "9406:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2324,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2585,
																			2620
																		],
																		"referencedDeclaration": 2585,
																		"src": "9401:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2329,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:11"
											},
											{
												"id": 2416,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:11",
												"statements": [
													{
														"expression": {
															"id": 2341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2332,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2322,
																"src": "9839:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2333,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2322,
																				"src": "9849:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2336,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2334,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2309,
																					"src": "9858:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2335,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2322,
																					"src": "9862:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2338,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2342,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:11"
													},
													{
														"expression": {
															"id": 2352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2343,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2322,
																"src": "9888:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2344,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2322,
																				"src": "9898:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2347,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2345,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2309,
																					"src": "9907:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2346,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2322,
																					"src": "9911:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2349,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2353,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:11"
													},
													{
														"expression": {
															"id": 2363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2354,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2322,
																"src": "9937:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2355,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2322,
																				"src": "9947:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2358,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2356,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2309,
																					"src": "9956:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2357,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2322,
																					"src": "9960:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2360,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2364,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:11"
													},
													{
														"expression": {
															"id": 2374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2365,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2322,
																"src": "9986:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2370,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2366,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2322,
																				"src": "9996:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2369,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2367,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2309,
																					"src": "10005:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2368,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2322,
																					"src": "10009:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2371,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2375,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:11"
													},
													{
														"expression": {
															"id": 2385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2376,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2322,
																"src": "10035:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2377,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2322,
																				"src": "10045:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2380,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2378,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2309,
																					"src": "10054:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2379,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2322,
																					"src": "10058:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2382,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2386,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:11"
													},
													{
														"expression": {
															"id": 2396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2387,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2322,
																"src": "10084:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2388,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2322,
																				"src": "10094:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2391,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2389,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2309,
																					"src": "10103:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2390,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2322,
																					"src": "10107:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2393,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2397,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:11"
													},
													{
														"expression": {
															"id": 2407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2398,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2322,
																"src": "10133:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2399,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2322,
																				"src": "10143:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2402,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2400,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2309,
																					"src": "10152:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2401,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2322,
																					"src": "10156:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2404,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2408,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:11"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2410,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2322,
																	"src": "10193:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2411,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2309,
																		"src": "10201:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2412,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2322,
																		"src": "10205:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2409,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2080,
																"src": "10189:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2313,
														"id": 2415,
														"nodeType": "Return",
														"src": "10182:30:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2307,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:11",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2309,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "8601:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:11"
									},
									"returnParameters": {
										"id": 2313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "8635:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:11"
									},
									"scope": 2929,
									"src": "8587:1642:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2452,
										"nodeType": "Block",
										"src": "10405:164:11",
										"statements": [
											{
												"id": 2451,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:11",
												"statements": [
													{
														"assignments": [
															2430
														],
														"declarations": [
															{
																"constant": false,
																"id": 2430,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2451,
																"src": "10439:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2429,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2434,
														"initialValue": {
															"arguments": [
																{
																	"id": 2432,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2421,
																	"src": "10461:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2431,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2418,
																	2453
																],
																"referencedDeclaration": 2418,
																"src": "10456:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2435,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2430,
																"src": "10484:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2437,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2424,
																						"src": "10511:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1886",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1886",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2436,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2928,
																					"src": "10494:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1886_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2438,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2443,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2441,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2439,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2430,
																						"src": "10524:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2440,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2430,
																						"src": "10533:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2442,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2421,
																					"src": "10542:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2446,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2447,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2448,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2428,
														"id": 2450,
														"nodeType": "Return",
														"src": "10477:75:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2419,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:11",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2421,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2453,
												"src": "10343:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2424,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2453,
												"src": "10354:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1886",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2423,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2422,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1886,
														"src": "10354:8:11"
													},
													"referencedDeclaration": 1886,
													"src": "10354:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1886",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:11"
									},
									"returnParameters": {
										"id": 2428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2453,
												"src": "10396:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:11"
									},
									"scope": 2929,
									"src": "10329:240:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2584,
										"nodeType": "Block",
										"src": "10760:922:11",
										"statements": [
											{
												"assignments": [
													2462
												],
												"declarations": [
													{
														"constant": false,
														"id": 2462,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2584,
														"src": "10770:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2461,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2464,
												"initialValue": {
													"hexValue": "30",
													"id": 2463,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:11"
											},
											{
												"id": 2581,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2465,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2456,
																	"src": "10826:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2479,
														"nodeType": "IfStatement",
														"src": "10822:99:11",
														"trueBody": {
															"id": 2478,
															"nodeType": "Block",
															"src": "10844:77:11",
															"statements": [
																{
																	"expression": {
																		"id": 2472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2470,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2456,
																			"src": "10862:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2473,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:11"
																},
																{
																	"expression": {
																		"id": 2476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2474,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2462,
																			"src": "10893:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2475,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2477,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2480,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2456,
																	"src": "10938:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2494,
														"nodeType": "IfStatement",
														"src": "10934:96:11",
														"trueBody": {
															"id": 2493,
															"nodeType": "Block",
															"src": "10955:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2485,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2456,
																			"src": "10973:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2488,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:11"
																},
																{
																	"expression": {
																		"id": 2491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2489,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2462,
																			"src": "11003:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2490,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2492,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2495,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2456,
																	"src": "11047:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2509,
														"nodeType": "IfStatement",
														"src": "11043:96:11",
														"trueBody": {
															"id": 2508,
															"nodeType": "Block",
															"src": "11064:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2500,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2456,
																			"src": "11082:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2501,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2503,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:11"
																},
																{
																	"expression": {
																		"id": 2506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2504,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2462,
																			"src": "11112:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2505,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2507,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2510,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2456,
																	"src": "11156:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2524,
														"nodeType": "IfStatement",
														"src": "11152:96:11",
														"trueBody": {
															"id": 2523,
															"nodeType": "Block",
															"src": "11173:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2515,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2456,
																			"src": "11191:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2518,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:11"
																},
																{
																	"expression": {
																		"id": 2521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2519,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2462,
																			"src": "11221:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2520,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2522,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2525,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2456,
																	"src": "11265:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2539,
														"nodeType": "IfStatement",
														"src": "11261:93:11",
														"trueBody": {
															"id": 2538,
															"nodeType": "Block",
															"src": "11281:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2530,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2456,
																			"src": "11299:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2533,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:11"
																},
																{
																	"expression": {
																		"id": 2536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2534,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2462,
																			"src": "11328:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2537,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2540,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2456,
																	"src": "11371:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2543,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2554,
														"nodeType": "IfStatement",
														"src": "11367:93:11",
														"trueBody": {
															"id": 2553,
															"nodeType": "Block",
															"src": "11387:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2545,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2456,
																			"src": "11405:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2548,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:11"
																},
																{
																	"expression": {
																		"id": 2551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2549,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2462,
																			"src": "11434:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2550,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2552,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2555,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2456,
																	"src": "11477:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2558,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2569,
														"nodeType": "IfStatement",
														"src": "11473:93:11",
														"trueBody": {
															"id": 2568,
															"nodeType": "Block",
															"src": "11493:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2560,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2456,
																			"src": "11511:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2561,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2563,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:11"
																},
																{
																	"expression": {
																		"id": 2566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2564,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2462,
																			"src": "11540:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2567,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2570,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2456,
																	"src": "11583:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2573,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2580,
														"nodeType": "IfStatement",
														"src": "11579:64:11",
														"trueBody": {
															"id": 2579,
															"nodeType": "Block",
															"src": "11599:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2575,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2462,
																			"src": "11617:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2578,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2582,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2462,
													"src": "11669:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2460,
												"id": 2583,
												"nodeType": "Return",
												"src": "11662:13:11"
											}
										]
									},
									"documentation": {
										"id": 2454,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:11",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2456,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "10713:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:11"
									},
									"returnParameters": {
										"id": 2460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "10751:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:11"
									},
									"scope": 2929,
									"src": "10699:983:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2619,
										"nodeType": "Block",
										"src": "11915:168:11",
										"statements": [
											{
												"id": 2618,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:11",
												"statements": [
													{
														"assignments": [
															2597
														],
														"declarations": [
															{
																"constant": false,
																"id": 2597,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2618,
																"src": "11949:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2596,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2601,
														"initialValue": {
															"arguments": [
																{
																	"id": 2599,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2588,
																	"src": "11971:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2598,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2585,
																	2620
																],
																"referencedDeclaration": 2585,
																"src": "11966:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2602,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2597,
																"src": "11998:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2604,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2591,
																						"src": "12025:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1886",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1886",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2603,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2928,
																					"src": "12008:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1886_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2605,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2610,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2608,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2606,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2607,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2597,
																						"src": "12043:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2609,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2588,
																					"src": "12052:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2613,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2614,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2612,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2615,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2595,
														"id": 2617,
														"nodeType": "Return",
														"src": "11991:75:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2586,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:11",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2588,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "11849:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2591,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "11864:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1886",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2590,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2589,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1886,
														"src": "11864:8:11"
													},
													"referencedDeclaration": 1886,
													"src": "11864:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1886",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:11"
									},
									"returnParameters": {
										"id": 2595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "11906:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:11"
									},
									"scope": 2929,
									"src": "11835:248:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2748,
										"nodeType": "Block",
										"src": "12276:854:11",
										"statements": [
											{
												"assignments": [
													2629
												],
												"declarations": [
													{
														"constant": false,
														"id": 2629,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2748,
														"src": "12286:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2628,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2631,
												"initialValue": {
													"hexValue": "30",
													"id": 2630,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:11"
											},
											{
												"id": 2745,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2632,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2623,
																"src": "12342:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2635,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2633,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2648,
														"nodeType": "IfStatement",
														"src": "12338:103:11",
														"trueBody": {
															"id": 2647,
															"nodeType": "Block",
															"src": "12361:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2637,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2623,
																			"src": "12379:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2640,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2638,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2639,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2642,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:11"
																},
																{
																	"expression": {
																		"id": 2645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2643,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2629,
																			"src": "12414:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2646,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2649,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2623,
																"src": "12458:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2652,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2665,
														"nodeType": "IfStatement",
														"src": "12454:103:11",
														"trueBody": {
															"id": 2664,
															"nodeType": "Block",
															"src": "12477:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2654,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2623,
																			"src": "12495:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2655,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2659,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:11"
																},
																{
																	"expression": {
																		"id": 2662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2660,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2629,
																			"src": "12530:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2663,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2666,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2623,
																"src": "12574:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2669,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2682,
														"nodeType": "IfStatement",
														"src": "12570:103:11",
														"trueBody": {
															"id": 2681,
															"nodeType": "Block",
															"src": "12593:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2671,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2623,
																			"src": "12611:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2674,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2672,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2673,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2676,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:11"
																},
																{
																	"expression": {
																		"id": 2679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2677,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2629,
																			"src": "12646:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2678,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2680,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2683,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2623,
																"src": "12690:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2686,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2699,
														"nodeType": "IfStatement",
														"src": "12686:100:11",
														"trueBody": {
															"id": 2698,
															"nodeType": "Block",
															"src": "12708:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2688,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2623,
																			"src": "12726:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2691,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2689,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2690,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2693,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:11"
																},
																{
																	"expression": {
																		"id": 2696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2694,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2629,
																			"src": "12760:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2697,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2700,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2623,
																"src": "12803:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2703,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2716,
														"nodeType": "IfStatement",
														"src": "12799:100:11",
														"trueBody": {
															"id": 2715,
															"nodeType": "Block",
															"src": "12821:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2705,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2623,
																			"src": "12839:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2708,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2706,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2707,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2710,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:11"
																},
																{
																	"expression": {
																		"id": 2713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2711,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2629,
																			"src": "12873:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2712,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2714,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2717,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2623,
																"src": "12916:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2733,
														"nodeType": "IfStatement",
														"src": "12912:100:11",
														"trueBody": {
															"id": 2732,
															"nodeType": "Block",
															"src": "12934:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2722,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2623,
																			"src": "12952:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2723,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2724,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2727,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:11"
																},
																{
																	"expression": {
																		"id": 2730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2728,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2629,
																			"src": "12986:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2731,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2734,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2623,
																"src": "13029:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2737,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2744,
														"nodeType": "IfStatement",
														"src": "13025:66:11",
														"trueBody": {
															"id": 2743,
															"nodeType": "Block",
															"src": "13047:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2739,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2629,
																			"src": "13065:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2740,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2742,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2746,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2629,
													"src": "13117:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2627,
												"id": 2747,
												"nodeType": "Return",
												"src": "13110:13:11"
											}
										]
									},
									"documentation": {
										"id": 2621,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:11",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2623,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2749,
												"src": "12229:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:11"
									},
									"returnParameters": {
										"id": 2627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2749,
												"src": "12267:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:11"
									},
									"scope": 2929,
									"src": "12214:916:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2783,
										"nodeType": "Block",
										"src": "13365:170:11",
										"statements": [
											{
												"id": 2782,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:11",
												"statements": [
													{
														"assignments": [
															2761
														],
														"declarations": [
															{
																"constant": false,
																"id": 2761,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2782,
																"src": "13399:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2760,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2765,
														"initialValue": {
															"arguments": [
																{
																	"id": 2763,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2752,
																	"src": "13422:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2762,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2749,
																	2784
																],
																"referencedDeclaration": 2749,
																"src": "13416:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2766,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2761,
																"src": "13449:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2768,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2755,
																						"src": "13476:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1886",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1886",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2767,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2928,
																					"src": "13459:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1886_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2769,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2774,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2772,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2770,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2771,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2761,
																						"src": "13495:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2773,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2752,
																					"src": "13504:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2777,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2779,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2759,
														"id": 2781,
														"nodeType": "Return",
														"src": "13442:76:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2750,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:11",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2752,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2784,
												"src": "13299:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2755,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2784,
												"src": "13314:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1886",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2754,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2753,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1886,
														"src": "13314:8:11"
													},
													"referencedDeclaration": 1886,
													"src": "13314:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1886",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:11"
									},
									"returnParameters": {
										"id": 2759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2758,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2784,
												"src": "13356:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:11"
									},
									"scope": 2929,
									"src": "13284:251:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2870,
										"nodeType": "Block",
										"src": "13855:600:11",
										"statements": [
											{
												"assignments": [
													2793
												],
												"declarations": [
													{
														"constant": false,
														"id": 2793,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2870,
														"src": "13865:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2792,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2795,
												"initialValue": {
													"hexValue": "30",
													"id": 2794,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:11"
											},
											{
												"id": 2867,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2796,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2787,
																	"src": "13921:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2799,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2810,
														"nodeType": "IfStatement",
														"src": "13917:98:11",
														"trueBody": {
															"id": 2809,
															"nodeType": "Block",
															"src": "13939:76:11",
															"statements": [
																{
																	"expression": {
																		"id": 2803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2801,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2787,
																			"src": "13957:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2802,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2804,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:11"
																},
																{
																	"expression": {
																		"id": 2807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2805,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2793,
																			"src": "13988:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2806,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2808,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2813,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2811,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2787,
																	"src": "14032:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2825,
														"nodeType": "IfStatement",
														"src": "14028:95:11",
														"trueBody": {
															"id": 2824,
															"nodeType": "Block",
															"src": "14049:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2816,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2787,
																			"src": "14067:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2817,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2819,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:11"
																},
																{
																	"expression": {
																		"id": 2822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2820,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2793,
																			"src": "14097:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2821,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2823,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2826,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2787,
																	"src": "14140:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2829,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2840,
														"nodeType": "IfStatement",
														"src": "14136:95:11",
														"trueBody": {
															"id": 2839,
															"nodeType": "Block",
															"src": "14157:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2831,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2787,
																			"src": "14175:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2834,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:11"
																},
																{
																	"expression": {
																		"id": 2837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2835,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2793,
																			"src": "14205:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2838,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2841,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2787,
																	"src": "14248:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2855,
														"nodeType": "IfStatement",
														"src": "14244:95:11",
														"trueBody": {
															"id": 2854,
															"nodeType": "Block",
															"src": "14265:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2846,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2787,
																			"src": "14283:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2847,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2849,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:11"
																},
																{
																	"expression": {
																		"id": 2852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2850,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2793,
																			"src": "14313:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2851,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2853,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2856,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2787,
																	"src": "14356:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2866,
														"nodeType": "IfStatement",
														"src": "14352:64:11",
														"trueBody": {
															"id": 2865,
															"nodeType": "Block",
															"src": "14372:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2861,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2793,
																			"src": "14390:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2862,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2864,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2868,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2793,
													"src": "14442:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2791,
												"id": 2869,
												"nodeType": "Return",
												"src": "14435:13:11"
											}
										]
									},
									"documentation": {
										"id": 2785,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:11",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2787,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2871,
												"src": "13808:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:11"
									},
									"returnParameters": {
										"id": 2791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2871,
												"src": "13846:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:11"
									},
									"scope": 2929,
									"src": "13792:663:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2908,
										"nodeType": "Block",
										"src": "14692:177:11",
										"statements": [
											{
												"id": 2907,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:11",
												"statements": [
													{
														"assignments": [
															2883
														],
														"declarations": [
															{
																"constant": false,
																"id": 2883,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2907,
																"src": "14726:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2882,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2887,
														"initialValue": {
															"arguments": [
																{
																	"id": 2885,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2874,
																	"src": "14750:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2884,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2871,
																	2909
																],
																"referencedDeclaration": 2871,
																"src": "14743:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2888,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2883,
																"src": "14777:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2900,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2890,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2877,
																						"src": "14804:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1886",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1886",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2889,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2928,
																					"src": "14787:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1886_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2891,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2897,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2892,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2895,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2893,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2883,
																									"src": "14823:6:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2894,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2896,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2898,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2874,
																					"src": "14838:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2902,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2901,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2904,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2881,
														"id": 2906,
														"nodeType": "Return",
														"src": "14770:82:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2872,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:11",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2874,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2909,
												"src": "14626:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2877,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2909,
												"src": "14641:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1886",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2876,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2875,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1886,
														"src": "14641:8:11"
													},
													"referencedDeclaration": 1886,
													"src": "14641:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1886",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:11"
									},
									"returnParameters": {
										"id": 2881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2909,
												"src": "14683:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:11"
									},
									"scope": 2929,
									"src": "14610:259:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2927,
										"nodeType": "Block",
										"src": "15067:48:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2923,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2920,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2913,
																	"src": "15090:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1886",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1886",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2918,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2922,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2924,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2917,
												"id": 2926,
												"nodeType": "Return",
												"src": "15077:31:11"
											}
										]
									},
									"documentation": {
										"id": 2910,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:11",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2913,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2928,
												"src": "15019:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1886",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2912,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2911,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1886,
														"src": "15019:8:11"
													},
													"referencedDeclaration": 1886,
													"src": "15019:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1886",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:11"
									},
									"returnParameters": {
										"id": 2917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2916,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2928,
												"src": "15061:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2915,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:11"
									},
									"scope": 2929,
									"src": "14993:122:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2930,
							"src": "203:14914:11",
							"usedErrors": [
								1881
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:11"
				},
				"id": 11
			},
			"contracts/NftV1Contract.sol": {
				"ast": {
					"absolutePath": "contracts/NftV1Contract.sol",
					"exportedSymbols": {
						"Arrays": [
							1699
						],
						"Context": [
							1729
						],
						"ERC1155": [
							1335
						],
						"ERC165": [
							1863
						],
						"IERC1155": [
							1458
						],
						"IERC1155Errors": [
							284
						],
						"IERC1155MetadataURI": [
							1516
						],
						"IERC1155Receiver": [
							1500
						],
						"IERC165": [
							1875
						],
						"NftV1Collection": [
							3197
						],
						"Ownable": [
							147
						]
					},
					"id": 3198,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2931,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"id": 2932,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3198,
							"sourceUnit": 1336,
							"src": "58:59:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2933,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3198,
							"sourceUnit": 148,
							"src": "118:52:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2934,
										"name": "ERC1155",
										"nameLocations": [
											"200:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1335,
										"src": "200:7:12"
									},
									"id": 2935,
									"nodeType": "InheritanceSpecifier",
									"src": "200:7:12"
								},
								{
									"baseName": {
										"id": 2936,
										"name": "Ownable",
										"nameLocations": [
											"209:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "209:7:12"
									},
									"id": 2937,
									"nodeType": "InheritanceSpecifier",
									"src": "209:7:12"
								}
							],
							"canonicalName": "NftV1Collection",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3197,
							"linearizedBaseContracts": [
								3197,
								147,
								1335,
								284,
								1516,
								1458,
								1863,
								1875,
								1729
							],
							"name": "NftV1Collection",
							"nameLocation": "181:15:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2940,
									"mutability": "mutable",
									"name": "_tokenId",
									"nameLocation": "244:8:12",
									"nodeType": "VariableDeclaration",
									"scope": 3197,
									"src": "228:28:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2938,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "228:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2939,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "255:1:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2942,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "277:5:12",
									"nodeType": "VariableDeclaration",
									"scope": 3197,
									"src": "262:20:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2941,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "262:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2944,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "303:7:12",
									"nodeType": "VariableDeclaration",
									"scope": 3197,
									"src": "288:22:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2943,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "288:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2948,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "351:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 3197,
									"src": "316:45:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 2947,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2945,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "324:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "316:26:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2946,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "335:6:12",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2971,
										"nodeType": "Block",
										"src": "478:55:12",
										"statements": [
											{
												"expression": {
													"id": 2965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2963,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2942,
														"src": "488:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2964,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2952,
														"src": "496:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "488:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2966,
												"nodeType": "ExpressionStatement",
												"src": "488:12:12"
											},
											{
												"expression": {
													"id": 2969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2967,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2944,
														"src": "510:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2968,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2954,
														"src": "520:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "510:16:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2970,
												"nodeType": "ExpressionStatement",
												"src": "510:16:12"
											}
										]
									},
									"id": 2972,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "",
													"id": 2957,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "452:2:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												}
											],
											"id": 2958,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2956,
												"name": "ERC1155",
												"nameLocations": [
													"444:7:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1335,
												"src": "444:7:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "444:11:12"
										},
										{
											"arguments": [
												{
													"id": 2960,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2950,
													"src": "464:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2961,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2959,
												"name": "Ownable",
												"nameLocations": [
													"456:7:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "456:7:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "456:21:12"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2950,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "388:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2972,
												"src": "380:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2952,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "416:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2972,
												"src": "402:18:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2951,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "402:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2954,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "436:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2972,
												"src": "422:20:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2953,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "422:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:64:12"
									},
									"returnParameters": {
										"id": 2962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "478:0:12"
									},
									"scope": 3197,
									"src": "368:165:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2983,
										"nodeType": "Block",
										"src": "594:32:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2980,
															"name": "newuri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2974,
															"src": "612:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2979,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "604:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 2981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "604:15:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2982,
												"nodeType": "ExpressionStatement",
												"src": "604:15:12"
											}
										]
									},
									"functionSelector": "02fe5305",
									"id": 2984,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2977,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2976,
												"name": "onlyOwner",
												"nameLocations": [
													"584:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "584:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "584:9:12"
										}
									],
									"name": "setURI",
									"nameLocation": "548:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2974,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "569:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2984,
												"src": "555:20:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2973,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "555:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:22:12"
									},
									"returnParameters": {
										"id": 2978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "594:0:12"
									},
									"scope": 3197,
									"src": "539:87:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2997,
										"nodeType": "Block",
										"src": "718:48:12",
										"statements": [
											{
												"expression": {
													"id": 2995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2991,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2948,
															"src": "728:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 2993,
														"indexExpression": {
															"id": 2992,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2986,
															"src": "739:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "728:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2994,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2988,
														"src": "750:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "728:31:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2996,
												"nodeType": "ExpressionStatement",
												"src": "728:31:12"
											}
										]
									},
									"id": 2998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "646:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2986,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "667:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2998,
												"src": "659:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2988,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "690:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2998,
												"src": "676:23:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2987,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "676:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "658:42:12"
									},
									"returnParameters": {
										"id": 2990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "718:0:12"
									},
									"scope": 3197,
									"src": "637:129:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3030,
										"nodeType": "Block",
										"src": "879:158:12",
										"statements": [
											{
												"assignments": [
													3012
												],
												"declarations": [
													{
														"constant": false,
														"id": 3012,
														"mutability": "mutable",
														"name": "newItemId",
														"nameLocation": "897:9:12",
														"nodeType": "VariableDeclaration",
														"scope": 3030,
														"src": "889:17:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3011,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "889:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3015,
												"initialValue": {
													"id": 3014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "909:10:12",
													"subExpression": {
														"id": 3013,
														"name": "_tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2940,
														"src": "909:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "889:30:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3017,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3000,
															"src": "935:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3018,
															"name": "newItemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3012,
															"src": "939:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3019,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3004,
															"src": "950:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 3020,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "957:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 3016,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "929:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 3021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "929:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3022,
												"nodeType": "ExpressionStatement",
												"src": "929:31:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3024,
															"name": "newItemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3012,
															"src": "983:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3025,
															"name": "_tokenURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3002,
															"src": "994:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3023,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2998,
														"src": "970:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 3026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "970:34:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3027,
												"nodeType": "ExpressionStatement",
												"src": "970:34:12"
											},
											{
												"expression": {
													"id": 3028,
													"name": "newItemId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3012,
													"src": "1021:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3010,
												"id": 3029,
												"nodeType": "Return",
												"src": "1014:16:12"
											}
										]
									},
									"functionSelector": "ba7aef43",
									"id": 3031,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3007,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3006,
												"name": "onlyOwner",
												"nameLocations": [
													"851:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "851:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "851:9:12"
										}
									],
									"name": "mint",
									"nameLocation": "785:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3000,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "798:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 3031,
												"src": "790:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3002,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "816:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 3031,
												"src": "802:23:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3001,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "802:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3004,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "835:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3031,
												"src": "827:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "827:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:52:12"
									},
									"returnParameters": {
										"id": 3010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3009,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3031,
												"src": "870:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "870:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "869:9:12"
									},
									"scope": 3197,
									"src": "776:261:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3093,
										"nodeType": "Block",
										"src": "1165:306:12",
										"statements": [
											{
												"assignments": [
													3049
												],
												"declarations": [
													{
														"constant": false,
														"id": 3049,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "1191:3:12",
														"nodeType": "VariableDeclaration",
														"scope": 3093,
														"src": "1174:20:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 3047,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1174:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3048,
															"nodeType": "ArrayTypeName",
															"src": "1174:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3055,
												"initialValue": {
													"arguments": [
														{
															"id": 3053,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3037,
															"src": "1211:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3052,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1197:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3050,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1201:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3051,
															"nodeType": "ArrayTypeName",
															"src": "1201:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 3054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1197:20:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1174:43:12"
											},
											{
												"body": {
													"id": 3089,
													"nodeType": "Block",
													"src": "1262:175:12",
													"statements": [
														{
															"assignments": [
																3067
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3067,
																	"mutability": "mutable",
																	"name": "newItemId",
																	"nameLocation": "1284:9:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 3089,
																	"src": "1276:17:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3066,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1276:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3070,
															"initialValue": {
																"id": 3069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1296:10:12",
																"subExpression": {
																	"id": 3068,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2940,
																	"src": "1296:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1276:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3072,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3033,
																		"src": "1326:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3073,
																		"name": "newItemId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3067,
																		"src": "1330:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "31",
																		"id": 3074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1341:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	{
																		"hexValue": "",
																		"id": 3075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1344:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"id": 3071,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1010,
																	"src": "1320:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,uint256,uint256,bytes memory)"
																	}
																},
																"id": 3076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1320:27:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3077,
															"nodeType": "ExpressionStatement",
															"src": "1320:27:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3079,
																		"name": "newItemId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3067,
																		"src": "1374:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3080,
																		"name": "_tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3035,
																		"src": "1385:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 3078,
																	"name": "_setTokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2998,
																	"src": "1361:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (uint256,string memory)"
																	}
																},
																"id": 3081,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1361:34:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3082,
															"nodeType": "ExpressionStatement",
															"src": "1361:34:12"
														},
														{
															"expression": {
																"id": 3087,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3083,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3049,
																		"src": "1409:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 3085,
																	"indexExpression": {
																		"id": 3084,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3057,
																		"src": "1413:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1409:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3086,
																	"name": "newItemId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3067,
																	"src": "1418:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1409:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3088,
															"nodeType": "ExpressionStatement",
															"src": "1409:18:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3060,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3057,
														"src": "1246:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3061,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3037,
														"src": "1250:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1246:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3090,
												"initializationExpression": {
													"assignments": [
														3057
													],
													"declarations": [
														{
															"constant": false,
															"id": 3057,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1239:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 3090,
															"src": "1231:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3056,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1231:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3059,
													"initialValue": {
														"hexValue": "30",
														"id": 3058,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1243:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1231:13:12"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3064,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1257:3:12",
														"subExpression": {
															"id": 3063,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3057,
															"src": "1257:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3065,
													"nodeType": "ExpressionStatement",
													"src": "1257:3:12"
												},
												"nodeType": "ForStatement",
												"src": "1227:210:12"
											},
											{
												"expression": {
													"id": 3091,
													"name": "ids",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3049,
													"src": "1461:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 3044,
												"id": 3092,
												"nodeType": "Return",
												"src": "1454:10:12"
											}
										]
									},
									"functionSelector": "0a1e88d1",
									"id": 3094,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3040,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3039,
												"name": "onlyOwner",
												"nameLocations": [
													"1128:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1128:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1128:9:12"
										}
									],
									"name": "mintUniqueNFT",
									"nameLocation": "1052:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3033,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1074:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 3094,
												"src": "1066:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1066:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3035,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1092:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 3094,
												"src": "1078:23:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3034,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1078:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3037,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1111:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3094,
												"src": "1103:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1103:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1065:52:12"
									},
									"returnParameters": {
										"id": 3044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3043,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3094,
												"src": "1147:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3041,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1147:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3042,
													"nodeType": "ArrayTypeName",
													"src": "1147:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1146:18:12"
									},
									"scope": 3197,
									"src": "1043:428:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3159,
										"nodeType": "Block",
										"src": "1657:309:12",
										"statements": [
											{
												"assignments": [
													3113
												],
												"declarations": [
													{
														"constant": false,
														"id": 3113,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "1683:3:12",
														"nodeType": "VariableDeclaration",
														"scope": 3159,
														"src": "1666:20:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 3111,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1666:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3112,
															"nodeType": "ArrayTypeName",
															"src": "1666:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3119,
												"initialValue": {
													"arguments": [
														{
															"id": 3117,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3101,
															"src": "1703:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3116,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1689:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3114,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1693:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3115,
															"nodeType": "ArrayTypeName",
															"src": "1693:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 3118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1689:20:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1666:43:12"
											},
											{
												"body": {
													"id": 3155,
													"nodeType": "Block",
													"src": "1754:178:12",
													"statements": [
														{
															"assignments": [
																3131
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3131,
																	"mutability": "mutable",
																	"name": "newItemId",
																	"nameLocation": "1776:9:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 3155,
																	"src": "1768:17:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3130,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1768:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3134,
															"initialValue": {
																"id": 3133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1788:10:12",
																"subExpression": {
																	"id": 3132,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2940,
																	"src": "1788:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1768:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 3136,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3097,
																			"src": "1818:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 3138,
																		"indexExpression": {
																			"id": 3137,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3121,
																			"src": "1821:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1818:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3139,
																		"name": "newItemId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3131,
																		"src": "1825:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "31",
																		"id": 3140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1836:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	{
																		"hexValue": "",
																		"id": 3141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1839:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"id": 3135,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1010,
																	"src": "1812:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,uint256,uint256,bytes memory)"
																	}
																},
																"id": 3142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1812:30:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3143,
															"nodeType": "ExpressionStatement",
															"src": "1812:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3145,
																		"name": "newItemId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3131,
																		"src": "1869:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3146,
																		"name": "_tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3099,
																		"src": "1880:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 3144,
																	"name": "_setTokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2998,
																	"src": "1856:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (uint256,string memory)"
																	}
																},
																"id": 3147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1856:34:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3148,
															"nodeType": "ExpressionStatement",
															"src": "1856:34:12"
														},
														{
															"expression": {
																"id": 3153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3149,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3113,
																		"src": "1904:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 3151,
																	"indexExpression": {
																		"id": 3150,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3121,
																		"src": "1908:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1904:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3152,
																	"name": "newItemId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3131,
																	"src": "1913:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1904:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3154,
															"nodeType": "ExpressionStatement",
															"src": "1904:18:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3124,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3121,
														"src": "1738:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3125,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3101,
														"src": "1742:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1738:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3156,
												"initializationExpression": {
													"assignments": [
														3121
													],
													"declarations": [
														{
															"constant": false,
															"id": 3121,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1731:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 3156,
															"src": "1723:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3120,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1723:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3123,
													"initialValue": {
														"hexValue": "30",
														"id": 3122,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1735:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1723:13:12"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1749:3:12",
														"subExpression": {
															"id": 3127,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3121,
															"src": "1749:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3129,
													"nodeType": "ExpressionStatement",
													"src": "1749:3:12"
												},
												"nodeType": "ForStatement",
												"src": "1719:213:12"
											},
											{
												"expression": {
													"id": 3157,
													"name": "ids",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3113,
													"src": "1956:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 3108,
												"id": 3158,
												"nodeType": "Return",
												"src": "1949:10:12"
											}
										]
									},
									"functionSelector": "a7fd4a02",
									"id": 3160,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3103,
												"name": "onlyOwner",
												"nameLocations": [
													"1620:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1620:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1620:9:12"
										}
									],
									"name": "mintUniqueNFT",
									"nameLocation": "1536:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3097,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1567:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 3160,
												"src": "1550:19:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3095,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1550:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3096,
													"nodeType": "ArrayTypeName",
													"src": "1550:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3099,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1585:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 3160,
												"src": "1571:23:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3098,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1571:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3101,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1604:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3160,
												"src": "1596:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1596:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:61:12"
									},
									"returnParameters": {
										"id": 3108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3160,
												"src": "1639:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3105,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1639:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3106,
													"nodeType": "ArrayTypeName",
													"src": "1639:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1638:18:12"
									},
									"scope": 3197,
									"src": "1527:439:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3167,
										"nodeType": "Block",
										"src": "2023:29:12",
										"statements": [
											{
												"expression": {
													"id": 3165,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2942,
													"src": "2040:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 3164,
												"id": 3166,
												"nodeType": "Return",
												"src": "2033:12:12"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 3168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1981:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1985:2:12"
									},
									"returnParameters": {
										"id": 3164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3168,
												"src": "2008:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3162,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2008:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2007:15:12"
									},
									"scope": 3197,
									"src": "1972:80:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3175,
										"nodeType": "Block",
										"src": "2111:31:12",
										"statements": [
											{
												"expression": {
													"id": 3173,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2944,
													"src": "2128:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 3172,
												"id": 3174,
												"nodeType": "Return",
												"src": "2121:14:12"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 3176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2067:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2073:2:12"
									},
									"returnParameters": {
										"id": 3172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3176,
												"src": "2096:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3170,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2096:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2095:15:12"
									},
									"scope": 3197,
									"src": "2058:84:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3187,
										"nodeType": "Block",
										"src": "2227:43:12",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 3183,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2948,
														"src": "2244:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 3185,
													"indexExpression": {
														"id": 3184,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3178,
														"src": "2255:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2244:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 3182,
												"id": 3186,
												"nodeType": "Return",
												"src": "2237:26:12"
											}
										]
									},
									"functionSelector": "c87b56dd",
									"id": 3188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2157:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3178,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2174:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 3188,
												"src": "2166:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2166:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2165:17:12"
									},
									"returnParameters": {
										"id": 3182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3188,
												"src": "2212:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3180,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2212:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2211:15:12"
									},
									"scope": 3197,
									"src": "2148:122:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3195,
										"nodeType": "Block",
										"src": "2333:32:12",
										"statements": [
											{
												"expression": {
													"id": 3193,
													"name": "_tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2940,
													"src": "2350:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3192,
												"id": 3194,
												"nodeType": "Return",
												"src": "2343:15:12"
											}
										]
									},
									"functionSelector": "17d70f7c",
									"id": 3196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenId",
									"nameLocation": "2285:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2292:2:12"
									},
									"returnParameters": {
										"id": 3192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3196,
												"src": "2324:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:9:12"
									},
									"scope": 3197,
									"src": "2276:89:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 3198,
							"src": "172:2195:12",
							"usedErrors": [
								13,
								18,
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": [
								24,
								1355,
								1370,
								1379,
								1386
							]
						}
					],
					"src": "32:2335:12"
				},
				"id": 12
			}
		}
	}
}